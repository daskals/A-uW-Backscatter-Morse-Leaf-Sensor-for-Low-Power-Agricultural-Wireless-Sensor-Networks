

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Feb 12 17:31:17 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 1.44
    74                           ; Generated 14/09/2017 GMT
    75                           ; 
    76                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16LF1459 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  0111                     	;# 
   154  0112                     	;# 
   155  0113                     	;# 
   156  0114                     	;# 
   157  0115                     	;# 
   158  0116                     	;# 
   159  0117                     	;# 
   160  0118                     	;# 
   161  0119                     	;# 
   162  011D                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  018E                     	;# 
   166  0191                     	;# 
   167  0191                     	;# 
   168  0192                     	;# 
   169  0193                     	;# 
   170  0193                     	;# 
   171  0194                     	;# 
   172  0195                     	;# 
   173  0196                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  0391                     	;# 
   200  0392                     	;# 
   201  0393                     	;# 
   202  0394                     	;# 
   203  0395                     	;# 
   204  0396                     	;# 
   205  039A                     	;# 
   206  039B                     	;# 
   207  0611                     	;# 
   208  0612                     	;# 
   209  0613                     	;# 
   210  0613                     	;# 
   211  0614                     	;# 
   212  0615                     	;# 
   213  0616                     	;# 
   214  0616                     	;# 
   215  0691                     	;# 
   216  0692                     	;# 
   217  0693                     	;# 
   218  0694                     	;# 
   219  0695                     	;# 
   220  0E8E                     	;# 
   221  0E8F                     	;# 
   222  0E90                     	;# 
   223  0E91                     	;# 
   224  0E92                     	;# 
   225  0E93                     	;# 
   226  0E94                     	;# 
   227  0E94                     	;# 
   228  0E95                     	;# 
   229  0E96                     	;# 
   230  0E97                     	;# 
   231  0E98                     	;# 
   232  0E99                     	;# 
   233  0E9A                     	;# 
   234  0E9B                     	;# 
   235  0E9C                     	;# 
   236  0E9D                     	;# 
   237  0E9E                     	;# 
   238  0E9F                     	;# 
   239  0FE4                     	;# 
   240  0FE5                     	;# 
   241  0FE6                     	;# 
   242  0FE7                     	;# 
   243  0FE8                     	;# 
   244  0FE9                     	;# 
   245  0FEA                     	;# 
   246  0FEB                     	;# 
   247  0FED                     	;# 
   248  0FEE                     	;# 
   249  0FEF                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011D                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  018E                     	;# 
   309  0191                     	;# 
   310  0191                     	;# 
   311  0192                     	;# 
   312  0193                     	;# 
   313  0193                     	;# 
   314  0194                     	;# 
   315  0195                     	;# 
   316  0196                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020D                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0391                     	;# 
   343  0392                     	;# 
   344  0393                     	;# 
   345  0394                     	;# 
   346  0395                     	;# 
   347  0396                     	;# 
   348  039A                     	;# 
   349  039B                     	;# 
   350  0611                     	;# 
   351  0612                     	;# 
   352  0613                     	;# 
   353  0613                     	;# 
   354  0614                     	;# 
   355  0615                     	;# 
   356  0616                     	;# 
   357  0616                     	;# 
   358  0691                     	;# 
   359  0692                     	;# 
   360  0693                     	;# 
   361  0694                     	;# 
   362  0695                     	;# 
   363  0E8E                     	;# 
   364  0E8F                     	;# 
   365  0E90                     	;# 
   366  0E91                     	;# 
   367  0E92                     	;# 
   368  0E93                     	;# 
   369  0E94                     	;# 
   370  0E94                     	;# 
   371  0E95                     	;# 
   372  0E96                     	;# 
   373  0E97                     	;# 
   374  0E98                     	;# 
   375  0E99                     	;# 
   376  0E9A                     	;# 
   377  0E9B                     	;# 
   378  0E9C                     	;# 
   379  0E9D                     	;# 
   380  0E9E                     	;# 
   381  0E9F                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011D                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  018E                     	;# 
   452  0191                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  0193                     	;# 
   456  0193                     	;# 
   457  0194                     	;# 
   458  0195                     	;# 
   459  0196                     	;# 
   460  0199                     	;# 
   461  019A                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019C                     	;# 
   465  019D                     	;# 
   466  019E                     	;# 
   467  019F                     	;# 
   468  020C                     	;# 
   469  020D                     	;# 
   470  0211                     	;# 
   471  0211                     	;# 
   472  0212                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0213                     	;# 
   476  0214                     	;# 
   477  0214                     	;# 
   478  0215                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0216                     	;# 
   482  0216                     	;# 
   483  0217                     	;# 
   484  0217                     	;# 
   485  0391                     	;# 
   486  0392                     	;# 
   487  0393                     	;# 
   488  0394                     	;# 
   489  0395                     	;# 
   490  0396                     	;# 
   491  039A                     	;# 
   492  039B                     	;# 
   493  0611                     	;# 
   494  0612                     	;# 
   495  0613                     	;# 
   496  0613                     	;# 
   497  0614                     	;# 
   498  0615                     	;# 
   499  0616                     	;# 
   500  0616                     	;# 
   501  0691                     	;# 
   502  0692                     	;# 
   503  0693                     	;# 
   504  0694                     	;# 
   505  0695                     	;# 
   506  0E8E                     	;# 
   507  0E8F                     	;# 
   508  0E90                     	;# 
   509  0E91                     	;# 
   510  0E92                     	;# 
   511  0E93                     	;# 
   512  0E94                     	;# 
   513  0E94                     	;# 
   514  0E95                     	;# 
   515  0E96                     	;# 
   516  0E97                     	;# 
   517  0E98                     	;# 
   518  0E99                     	;# 
   519  0E9A                     	;# 
   520  0E9B                     	;# 
   521  0E9C                     	;# 
   522  0E9D                     	;# 
   523  0E9E                     	;# 
   524  0E9F                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001C                     	;# 
   562  008C                     	;# 
   563  008D                     	;# 
   564  008E                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0095                     	;# 
   568  0096                     	;# 
   569  0097                     	;# 
   570  0098                     	;# 
   571  0099                     	;# 
   572  009A                     	;# 
   573  009B                     	;# 
   574  009B                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009E                     	;# 
   578  009F                     	;# 
   579  010C                     	;# 
   580  010D                     	;# 
   581  010E                     	;# 
   582  0111                     	;# 
   583  0112                     	;# 
   584  0113                     	;# 
   585  0114                     	;# 
   586  0115                     	;# 
   587  0116                     	;# 
   588  0117                     	;# 
   589  0118                     	;# 
   590  0119                     	;# 
   591  011D                     	;# 
   592  018C                     	;# 
   593  018D                     	;# 
   594  018E                     	;# 
   595  0191                     	;# 
   596  0191                     	;# 
   597  0192                     	;# 
   598  0193                     	;# 
   599  0193                     	;# 
   600  0194                     	;# 
   601  0195                     	;# 
   602  0196                     	;# 
   603  0199                     	;# 
   604  019A                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019C                     	;# 
   608  019D                     	;# 
   609  019E                     	;# 
   610  019F                     	;# 
   611  020C                     	;# 
   612  020D                     	;# 
   613  0211                     	;# 
   614  0211                     	;# 
   615  0212                     	;# 
   616  0212                     	;# 
   617  0213                     	;# 
   618  0213                     	;# 
   619  0214                     	;# 
   620  0214                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0216                     	;# 
   625  0216                     	;# 
   626  0217                     	;# 
   627  0217                     	;# 
   628  0391                     	;# 
   629  0392                     	;# 
   630  0393                     	;# 
   631  0394                     	;# 
   632  0395                     	;# 
   633  0396                     	;# 
   634  039A                     	;# 
   635  039B                     	;# 
   636  0611                     	;# 
   637  0612                     	;# 
   638  0613                     	;# 
   639  0613                     	;# 
   640  0614                     	;# 
   641  0615                     	;# 
   642  0616                     	;# 
   643  0616                     	;# 
   644  0691                     	;# 
   645  0692                     	;# 
   646  0693                     	;# 
   647  0694                     	;# 
   648  0695                     	;# 
   649  0E8E                     	;# 
   650  0E8F                     	;# 
   651  0E90                     	;# 
   652  0E91                     	;# 
   653  0E92                     	;# 
   654  0E93                     	;# 
   655  0E94                     	;# 
   656  0E94                     	;# 
   657  0E95                     	;# 
   658  0E96                     	;# 
   659  0E97                     	;# 
   660  0E98                     	;# 
   661  0E99                     	;# 
   662  0E9A                     	;# 
   663  0E9B                     	;# 
   664  0E9C                     	;# 
   665  0E9D                     	;# 
   666  0E9E                     	;# 
   667  0E9F                     	;# 
   668  0FE4                     	;# 
   669  0FE5                     	;# 
   670  0FE6                     	;# 
   671  0FE7                     	;# 
   672  0FE8                     	;# 
   673  0FE9                     	;# 
   674  0FEA                     	;# 
   675  0FEB                     	;# 
   676  0FED                     	;# 
   677  0FEE                     	;# 
   678  0FEF                     	;# 
   679  0000                     	;# 
   680  0001                     	;# 
   681  0002                     	;# 
   682  0003                     	;# 
   683  0004                     	;# 
   684  0005                     	;# 
   685  0006                     	;# 
   686  0007                     	;# 
   687  0008                     	;# 
   688  0009                     	;# 
   689  000A                     	;# 
   690  000B                     	;# 
   691  000C                     	;# 
   692  000D                     	;# 
   693  000E                     	;# 
   694  0011                     	;# 
   695  0012                     	;# 
   696  0015                     	;# 
   697  0016                     	;# 
   698  0016                     	;# 
   699  0017                     	;# 
   700  0018                     	;# 
   701  0019                     	;# 
   702  001A                     	;# 
   703  001B                     	;# 
   704  001C                     	;# 
   705  008C                     	;# 
   706  008D                     	;# 
   707  008E                     	;# 
   708  0091                     	;# 
   709  0092                     	;# 
   710  0095                     	;# 
   711  0096                     	;# 
   712  0097                     	;# 
   713  0098                     	;# 
   714  0099                     	;# 
   715  009A                     	;# 
   716  009B                     	;# 
   717  009B                     	;# 
   718  009C                     	;# 
   719  009D                     	;# 
   720  009E                     	;# 
   721  009F                     	;# 
   722  010C                     	;# 
   723  010D                     	;# 
   724  010E                     	;# 
   725  0111                     	;# 
   726  0112                     	;# 
   727  0113                     	;# 
   728  0114                     	;# 
   729  0115                     	;# 
   730  0116                     	;# 
   731  0117                     	;# 
   732  0118                     	;# 
   733  0119                     	;# 
   734  011D                     	;# 
   735  018C                     	;# 
   736  018D                     	;# 
   737  018E                     	;# 
   738  0191                     	;# 
   739  0191                     	;# 
   740  0192                     	;# 
   741  0193                     	;# 
   742  0193                     	;# 
   743  0194                     	;# 
   744  0195                     	;# 
   745  0196                     	;# 
   746  0199                     	;# 
   747  019A                     	;# 
   748  019B                     	;# 
   749  019B                     	;# 
   750  019C                     	;# 
   751  019D                     	;# 
   752  019E                     	;# 
   753  019F                     	;# 
   754  020C                     	;# 
   755  020D                     	;# 
   756  0211                     	;# 
   757  0211                     	;# 
   758  0212                     	;# 
   759  0212                     	;# 
   760  0213                     	;# 
   761  0213                     	;# 
   762  0214                     	;# 
   763  0214                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0215                     	;# 
   767  0216                     	;# 
   768  0216                     	;# 
   769  0217                     	;# 
   770  0217                     	;# 
   771  0391                     	;# 
   772  0392                     	;# 
   773  0393                     	;# 
   774  0394                     	;# 
   775  0395                     	;# 
   776  0396                     	;# 
   777  039A                     	;# 
   778  039B                     	;# 
   779  0611                     	;# 
   780  0612                     	;# 
   781  0613                     	;# 
   782  0613                     	;# 
   783  0614                     	;# 
   784  0615                     	;# 
   785  0616                     	;# 
   786  0616                     	;# 
   787  0691                     	;# 
   788  0692                     	;# 
   789  0693                     	;# 
   790  0694                     	;# 
   791  0695                     	;# 
   792  0E8E                     	;# 
   793  0E8F                     	;# 
   794  0E90                     	;# 
   795  0E91                     	;# 
   796  0E92                     	;# 
   797  0E93                     	;# 
   798  0E94                     	;# 
   799  0E94                     	;# 
   800  0E95                     	;# 
   801  0E96                     	;# 
   802  0E97                     	;# 
   803  0E98                     	;# 
   804  0E99                     	;# 
   805  0E9A                     	;# 
   806  0E9B                     	;# 
   807  0E9C                     	;# 
   808  0E9D                     	;# 
   809  0E9E                     	;# 
   810  0E9F                     	;# 
   811  0FE4                     	;# 
   812  0FE5                     	;# 
   813  0FE6                     	;# 
   814  0FE7                     	;# 
   815  0FE8                     	;# 
   816  0FE9                     	;# 
   817  0FEA                     	;# 
   818  0FEB                     	;# 
   819  0FED                     	;# 
   820  0FEE                     	;# 
   821  0FEF                     	;# 
   822  0000                     	;# 
   823  0001                     	;# 
   824  0002                     	;# 
   825  0003                     	;# 
   826  0004                     	;# 
   827  0005                     	;# 
   828  0006                     	;# 
   829  0007                     	;# 
   830  0008                     	;# 
   831  0009                     	;# 
   832  000A                     	;# 
   833  000B                     	;# 
   834  000C                     	;# 
   835  000D                     	;# 
   836  000E                     	;# 
   837  0011                     	;# 
   838  0012                     	;# 
   839  0015                     	;# 
   840  0016                     	;# 
   841  0016                     	;# 
   842  0017                     	;# 
   843  0018                     	;# 
   844  0019                     	;# 
   845  001A                     	;# 
   846  001B                     	;# 
   847  001C                     	;# 
   848  008C                     	;# 
   849  008D                     	;# 
   850  008E                     	;# 
   851  0091                     	;# 
   852  0092                     	;# 
   853  0095                     	;# 
   854  0096                     	;# 
   855  0097                     	;# 
   856  0098                     	;# 
   857  0099                     	;# 
   858  009A                     	;# 
   859  009B                     	;# 
   860  009B                     	;# 
   861  009C                     	;# 
   862  009D                     	;# 
   863  009E                     	;# 
   864  009F                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  0111                     	;# 
   869  0112                     	;# 
   870  0113                     	;# 
   871  0114                     	;# 
   872  0115                     	;# 
   873  0116                     	;# 
   874  0117                     	;# 
   875  0118                     	;# 
   876  0119                     	;# 
   877  011D                     	;# 
   878  018C                     	;# 
   879  018D                     	;# 
   880  018E                     	;# 
   881  0191                     	;# 
   882  0191                     	;# 
   883  0192                     	;# 
   884  0193                     	;# 
   885  0193                     	;# 
   886  0194                     	;# 
   887  0195                     	;# 
   888  0196                     	;# 
   889  0199                     	;# 
   890  019A                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019C                     	;# 
   894  019D                     	;# 
   895  019E                     	;# 
   896  019F                     	;# 
   897  020C                     	;# 
   898  020D                     	;# 
   899  0211                     	;# 
   900  0211                     	;# 
   901  0212                     	;# 
   902  0212                     	;# 
   903  0213                     	;# 
   904  0213                     	;# 
   905  0214                     	;# 
   906  0214                     	;# 
   907  0215                     	;# 
   908  0215                     	;# 
   909  0215                     	;# 
   910  0216                     	;# 
   911  0216                     	;# 
   912  0217                     	;# 
   913  0217                     	;# 
   914  0391                     	;# 
   915  0392                     	;# 
   916  0393                     	;# 
   917  0394                     	;# 
   918  0395                     	;# 
   919  0396                     	;# 
   920  039A                     	;# 
   921  039B                     	;# 
   922  0611                     	;# 
   923  0612                     	;# 
   924  0613                     	;# 
   925  0613                     	;# 
   926  0614                     	;# 
   927  0615                     	;# 
   928  0616                     	;# 
   929  0616                     	;# 
   930  0691                     	;# 
   931  0692                     	;# 
   932  0693                     	;# 
   933  0694                     	;# 
   934  0695                     	;# 
   935  0E8E                     	;# 
   936  0E8F                     	;# 
   937  0E90                     	;# 
   938  0E91                     	;# 
   939  0E92                     	;# 
   940  0E93                     	;# 
   941  0E94                     	;# 
   942  0E94                     	;# 
   943  0E95                     	;# 
   944  0E96                     	;# 
   945  0E97                     	;# 
   946  0E98                     	;# 
   947  0E99                     	;# 
   948  0E9A                     	;# 
   949  0E9B                     	;# 
   950  0E9C                     	;# 
   951  0E9D                     	;# 
   952  0E9E                     	;# 
   953  0E9F                     	;# 
   954  0FE4                     	;# 
   955  0FE5                     	;# 
   956  0FE6                     	;# 
   957  0FE7                     	;# 
   958  0FE8                     	;# 
   959  0FE9                     	;# 
   960  0FEA                     	;# 
   961  0FEB                     	;# 
   962  0FED                     	;# 
   963  0FEE                     	;# 
   964  0FEF                     	;# 
   965                           
   966                           	psect	idataBANK1
   967  1646                     __pidataBANK1:	
   968                           
   969                           ;initializer for _delay
   970  1646  3414               	retlw	20
   971  1647  3400               	retlw	0
   972                           
   973                           ;initializer for _ADCres
   974  1648  34FF               	retlw	255
   975  1649  3403               	retlw	3
   976                           
   977                           	psect	idataBANK2
   978  16EF                     __pidataBANK2:	
   979                           
   980                           ;initializer for _voltref
   981  16EF  3440               	retlw	64
   982  16F0  34FF               	retlw	255
   983  16F1  3444               	retlw	68
   984                           
   985                           ;initializer for _FactorD
   986                           ;main.c: 20: char packet1[((10+2+1)+10+1)]=0;
   987                           ;main.c: 21: char packet2[((10+2+1)+10+6+1)]=0;
   988                           ;main.c: 22: char nocodedbit[2+1+10]=0;
   989                           ;main.c: 24: char *preamble="1010101111";
   990                           ;main.c: 25: char *Fixeddata="0111100011";
   991                           ;main.c: 26: char *packet="1010101111010100111100011" ;
   992                           ;main.c: 27: char *message = "2.";
   993                           ;main.c: 29: char str8[6]=0;
   994                           ;main.c: 31: double temp=0;
   995                           ;main.c: 32: int hundreds=0;
   996                           ;main.c: 33: int tens=0;
   997                           ;main.c: 34: int units=0;
   998                           ;main.c: 35: int tenths=0;
   999                           ;main.c: 36: int hundredths=0;
  1000                           ;main.c: 37: int thousandths=0;
  1001  16F2  34DB               	retlw	219
  1002  16F3  344C               	retlw	76
  1003  16F4  3443               	retlw	67
  1004                           
  1005                           ;initializer for _FactorC
  1006  16F5  3449               	retlw	73
  1007  16F6  3437               	retlw	55
  1008  16F7  34BE               	retlw	190
  1009                           
  1010                           ;initializer for _FactorB
  1011  16F8  3444               	retlw	68
  1012  16F9  34C1               	retlw	193
  1013  16FA  34B6               	retlw	182
  1014                           
  1015                           ;initializer for _FactorA
  1016  16FB  3443               	retlw	67
  1017  16FC  3492               	retlw	146
  1018  16FD  34B0               	retlw	176
  1019                           
  1020                           ;initializer for _IN_STRAY_CAP_TO_GND
  1021                           ;main.c: 20: char packet1[((10+2+1)+10+1)]=0;
  1022                           ;main.c: 21: char packet2[((10+2+1)+10+6+1)]=0;
  1023                           ;main.c: 22: char nocodedbit[2+1+10]=0;
  1024                           ;main.c: 24: char *preamble="1010101111";
  1025                           ;main.c: 25: char *Fixeddata="0111100011";
  1026                           ;main.c: 26: char *packet="1010101111010100111100011" ;
  1027                           ;main.c: 27: char *message = "2.";
  1028                           ;main.c: 29: char str8[6]=0;
  1029                           ;main.c: 31: double temp=0;
  1030                           ;main.c: 32: int hundreds=0;
  1031                           ;main.c: 33: int tens=0;
  1032                           ;main.c: 34: int units=0;
  1033                           ;main.c: 35: int tenths=0;
  1034                           ;main.c: 36: int hundredths=0;
  1035                           ;main.c: 37: int thousandths=0;
  1036  16FE  349A               	retlw	154
  1037  16FF  34D5               	retlw	213
  1038  1700  3441               	retlw	65
  1039                           
  1040                           ;initializer for _NODE_ID
  1041  1701  3401               	retlw	1
  1042  1702  3400               	retlw	0
  1043                           
  1044                           ;initializer for _message
  1045  1703  34A9               	retlw	low (STR_4| (0+32768))
  1046  1704  3498               	retlw	high (STR_4| (0+32768))
  1047                           
  1048                           ;initializer for _packet
  1049  1705  3464               	retlw	low (STR_3| (0+32768))
  1050  1706  3498               	retlw	high (STR_3| (0+32768))
  1051                           
  1052                           ;initializer for _Fixeddata
  1053  1707  3473               	retlw	low ((STR_3+15)| (0+32768))
  1054  1708  3498               	retlw	high ((STR_3+15)| (0+32768))
  1055                           
  1056                           ;initializer for _preamble
  1057  1709  347E               	retlw	low (STR_1| (0+32768))
  1058  170A  3498               	retlw	high (STR_1| (0+32768))
  1059                           
  1060                           	psect	stringtext1
  1061  1800                     __pstringtext1:	
  1062  1800                     _m:	
  1063  1800  34FD               	retlw	253
  1064  1801  347D               	retlw	125
  1065  1802  343D               	retlw	61
  1066  1803  341D               	retlw	29
  1067  1804  340D               	retlw	13
  1068  1805  3405               	retlw	5
  1069  1806  3485               	retlw	133
  1070  1807  34C5               	retlw	197
  1071  1808  34E5               	retlw	229
  1072  1809  34F5               	retlw	245
  1073  180A  3400               	retlw	0
  1074  180B  3400               	retlw	0
  1075  180C  3400               	retlw	0
  1076  180D  3400               	retlw	0
  1077  180E  3400               	retlw	0
  1078  180F  3400               	retlw	0
  1079  1810  3400               	retlw	0
  1080  1811  340A               	retlw	10
  1081  1812  3444               	retlw	68
  1082  1813  3454               	retlw	84
  1083  1814  3423               	retlw	35
  1084  1815  3401               	retlw	1
  1085  1816  3414               	retlw	20
  1086  1817  3433               	retlw	51
  1087  1818  3404               	retlw	4
  1088  1819  3402               	retlw	2
  1089  181A  343C               	retlw	60
  1090  181B  342B               	retlw	43
  1091  181C  3424               	retlw	36
  1092  181D  341A               	retlw	26
  1093  181E  3412               	retlw	18
  1094  181F  343B               	retlw	59
  1095  1820  3434               	retlw	52
  1096  1821  346C               	retlw	108
  1097  1822  3413               	retlw	19
  1098  1823  3403               	retlw	3
  1099  1824  3409               	retlw	9
  1100  1825  340B               	retlw	11
  1101  1826  340C               	retlw	12
  1102  1827  341B               	retlw	27
  1103  1828  344C               	retlw	76
  1104  1829  345C               	retlw	92
  1105  182A  3464               	retlw	100
  1106  182B                     __end_of_m:	
  1107                           
  1108                           	psect	stringtext2
  1109  1889                     __pstringtext2:	
  1110  1889                     _dpowers:	
  1111  1889  3401               	retlw	1
  1112  188A  3400               	retlw	0
  1113  188B  340A               	retlw	10
  1114  188C  3400               	retlw	0
  1115  188D  3464               	retlw	100
  1116  188E  3400               	retlw	0
  1117  188F  34E8               	retlw	232
  1118  1890  3403               	retlw	3
  1119  1891  3410               	retlw	16
  1120  1892  3427               	retlw	39
  1121  1893                     __end_of_dpowers:	
  1122                           
  1123                           	psect	stringtext3
  1124  1893                     __pstringtext3:	
  1125  1893                     _m2:	
  1126  1893  3467               	retlw	103
  1127  1894  3449               	retlw	73
  1128  1895  3449               	retlw	73
  1129  1896  3409               	retlw	9
  1130  1897  3401               	retlw	1
  1131  1898  3400               	retlw	0
  1132  1899  3410               	retlw	16
  1133  189A  34F8               	retlw	248
  1134  189B  345C               	retlw	92
  1135  189C  3466               	retlw	102
  1136  189D                     __end_of_m2:	
  1137                           
  1138                           	psect	stringtext4
  1139  182B                     __pstringtext4:	
  1140  182B                     exp@coeff:	
  1141  182B  3400               	retlw	0
  1142  182C  3480               	retlw	128
  1143  182D  343F               	retlw	63
  1144  182E  3472               	retlw	114
  1145  182F  3431               	retlw	49
  1146  1830  343F               	retlw	63
  1147  1831  34FE               	retlw	254
  1148  1832  3475               	retlw	117
  1149  1833  343E               	retlw	62
  1150  1834  3458               	retlw	88
  1151  1835  3463               	retlw	99
  1152  1836  343D               	retlw	61
  1153  1837  3495               	retlw	149
  1154  1838  341D               	retlw	29
  1155  1839  343C               	retlw	60
  1156  183A  34C5               	retlw	197
  1157  183B  34AE               	retlw	174
  1158  183C  343A               	retlw	58
  1159  183D  3479               	retlw	121
  1160  183E  3421               	retlw	33
  1161  183F  3439               	retlw	57
  1162  1840  3494               	retlw	148
  1163  1841  3480               	retlw	128
  1164  1842  3437               	retlw	55
  1165  1843  3493               	retlw	147
  1166  1844  34A7               	retlw	167
  1167  1845  3435               	retlw	53
  1168  1846  3456               	retlw	86
  1169  1847  3415               	retlw	21
  1170  1848  3434               	retlw	52
  1171  1849                     __end_ofexp@coeff:	
  1172                           
  1173                           	psect	stringtext5
  1174  1849                     __pstringtext5:	
  1175  1849                     log@coeff:	
  1176  1849  3400               	retlw	0
  1177  184A  3400               	retlw	0
  1178  184B  3400               	retlw	0
  1179  184C  3400               	retlw	0
  1180  184D  3480               	retlw	128
  1181  184E  343F               	retlw	63
  1182  184F  34F0               	retlw	240
  1183  1850  34FF               	retlw	255
  1184  1851  34BE               	retlw	190
  1185  1852  34E2               	retlw	226
  1186  1853  34A9               	retlw	169
  1187  1854  343E               	retlw	62
  1188  1855  3483               	retlw	131
  1189  1856  3476               	retlw	118
  1190  1857  34BE               	retlw	190
  1191  1858  34AE               	retlw	174
  1192  1859  342B               	retlw	43
  1193  185A  343E               	retlw	62
  1194  185B  343C               	retlw	60
  1195  185C  34C3               	retlw	195
  1196  185D  34BD               	retlw	189
  1197  185E  34D2               	retlw	210
  1198  185F  3413               	retlw	19
  1199  1860  343D               	retlw	61
  1200  1861  3478               	retlw	120
  1201  1862  34D3               	retlw	211
  1202  1863  34BB               	retlw	187
  1203  1864                     __end_oflog@coeff:	
  1204                           
  1205                           	psect	nvBANK2
  1206  016B                     __pnvBANK2:	
  1207  016B                     _INT_InterruptHandler:	
  1208  016B                     	ds	2
  1209  000B                     _INTCONbits	set	11
  1210  0095                     _OPTION_REGbits	set	149
  1211  008E                     _TRISC	set	142
  1212  008D                     _TRISB	set	141
  1213  008C                     _TRISA	set	140
  1214  0097                     _WDTCON	set	151
  1215  0098                     _OSCTUNE	set	152
  1216  0099                     _OSCCON	set	153
  1217  009D                     _ADCON0bits	set	157
  1218  009C                     _ADRESH	set	156
  1219  009B                     _ADRESL	set	155
  1220  009F                     _ADCON2	set	159
  1221  009E                     _ADCON1	set	158
  1222  009D                     _ADCON0	set	157
  1223  011D                     _APFCON	set	285
  1224  010E                     _LATC	set	270
  1225  010D                     _LATB	set	269
  1226  010C                     _LATA	set	268
  1227  0874                     _LATC4	set	2164
  1228  0873                     _LATC3	set	2163
  1229  018C                     _ANSELA	set	396
  1230  018D                     _ANSELB	set	397
  1231  018E                     _ANSELC	set	398
  1232  020C                     _WPUA	set	524
  1233  020D                     _WPUB	set	525
  1234  039B                     _ACTCON	set	923
  1235                           
  1236                           	psect	stringtext6
  1237  1864                     __pstringtext6:	
  1238  1864                     STR_3:	
  1239  1864  3431               	retlw	49	;'1'
  1240  1865  3430               	retlw	48	;'0'
  1241  1866  3431               	retlw	49	;'1'
  1242  1867  3430               	retlw	48	;'0'
  1243  1868  3431               	retlw	49	;'1'
  1244  1869  3430               	retlw	48	;'0'
  1245  186A  3431               	retlw	49	;'1'
  1246  186B  3431               	retlw	49	;'1'
  1247  186C  3431               	retlw	49	;'1'
  1248  186D  3431               	retlw	49	;'1'
  1249  186E  3430               	retlw	48	;'0'
  1250  186F  3431               	retlw	49	;'1'
  1251  1870  3430               	retlw	48	;'0'
  1252  1871  3431               	retlw	49	;'1'
  1253  1872  3430               	retlw	48	;'0'
  1254  1873  3430               	retlw	48	;'0'
  1255  1874  3431               	retlw	49	;'1'
  1256  1875  3431               	retlw	49	;'1'
  1257  1876  3431               	retlw	49	;'1'
  1258  1877  3431               	retlw	49	;'1'
  1259  1878  3430               	retlw	48	;'0'
  1260  1879  3430               	retlw	48	;'0'
  1261  187A  3430               	retlw	48	;'0'
  1262  187B  3431               	retlw	49	;'1'
  1263  187C  3431               	retlw	49	;'1'
  1264  187D  3400               	retlw	0
  1265                           
  1266                           	psect	stringtext7
  1267  187E                     __pstringtext7:	
  1268  187E                     STR_1:	
  1269  187E  3431               	retlw	49	;'1'
  1270  187F  3430               	retlw	48	;'0'
  1271  1880  3431               	retlw	49	;'1'
  1272  1881  3430               	retlw	48	;'0'
  1273  1882  3431               	retlw	49	;'1'
  1274  1883  3430               	retlw	48	;'0'
  1275  1884  3431               	retlw	49	;'1'
  1276  1885  3431               	retlw	49	;'1'
  1277  1886  3431               	retlw	49	;'1'
  1278  1887  3431               	retlw	49	;'1'
  1279  1888  3400               	retlw	0
  1280                           
  1281                           	psect	stringtext8
  1282  189D                     __pstringtext8:	
  1283  189D                     STR_5:	
  1284  189D  3453               	retlw	83	;'S'
  1285  189E  3474               	retlw	116	;'t'
  1286  189F  3461               	retlw	97	;'a'
  1287  18A0  3472               	retlw	114	;'r'
  1288  18A1  3474               	retlw	116	;'t'
  1289  18A2  340A               	retlw	10
  1290  18A3  3400               	retlw	0
  1291                           
  1292                           	psect	stringtext9
  1293  18A4                     __pstringtext9:	
  1294  18A4                     STR_6:	
  1295  18A4  3425               	retlw	37	;'%'
  1296  18A5  3464               	retlw	100	;'d'
  1297  18A6  3425               	retlw	37	;'%'
  1298  18A7  3464               	retlw	100	;'d'
  1299  18A8  3400               	retlw	0
  1300                           
  1301                           	psect	stringtext10
  1302  18A9                     __pstringtext10:	
  1303  18A9                     STR_4:	
  1304  18A9  3432               	retlw	50	;'2'
  1305  18AA  342E               	retlw	46	;'.'
  1306  18AB  3400               	retlw	0
  1307                           
  1308                           	psect	stringtext11
  1309  0000                     __pstringtext11:	
  1310  1873                     
  1311                           ; #config settings
  1312  0000                     
  1313                           	psect	cinit
  1314  0015                     start_initialization:	
  1315  0015                     __initialization:	
  1316                           
  1317                           ; Initialize objects allocated to BANK1
  1318  0015  3046               	movlw	low __pidataBANK1
  1319  0016  0084               	movwf	4
  1320  0017  3096               	movlw	(high __pidataBANK1)| (0+128)
  1321  0018  0085               	movwf	5
  1322  0019  30EB               	movlw	low __pdataBANK1
  1323  001A  0086               	movwf	6
  1324  001B  3000               	movlw	high __pdataBANK1
  1325  001C  0087               	movwf	7
  1326  001D  3004               	movlw	4
  1327  001E  3196  265C  3180   	fcall	init_ram
  1328                           
  1329                           ; Initialize objects allocated to BANK2
  1330  0021  30EF               	movlw	low __pidataBANK2
  1331  0022  0084               	movwf	4
  1332  0023  3096               	movlw	(high __pidataBANK2)| (0+128)
  1333  0024  0085               	movwf	5
  1334  0025  304F               	movlw	low __pdataBANK2
  1335  0026  0086               	movwf	6
  1336  0027  3001               	movlw	high __pdataBANK2
  1337  0028  0087               	movwf	7
  1338  0029  301C               	movlw	28
  1339  002A  3196  265C  3180   	fcall	init_ram
  1340                           
  1341                           ; Clear objects allocated to BANK1
  1342  002D  30DC               	movlw	low __pbssBANK1
  1343  002E  0084               	movwf	4
  1344  002F  3000               	movlw	high __pbssBANK1
  1345  0030  0085               	movwf	5
  1346  0031  300F               	movlw	15
  1347  0032  3196  2656  3180   	fcall	clear_ram0
  1348                           
  1349                           ; Clear objects allocated to BANK2
  1350  0035  3020               	movlw	low __pbssBANK2
  1351  0036  0084               	movwf	4
  1352  0037  3001               	movlw	high __pbssBANK2
  1353  0038  0085               	movwf	5
  1354  0039  302F               	movlw	47
  1355  003A  3196  2656  3180   	fcall	clear_ram0
  1356                           
  1357                           ; Clear objects allocated to BANK3
  1358  003D  30A0               	movlw	low __pbssBANK3
  1359  003E  0084               	movwf	4
  1360  003F  3001               	movlw	high __pbssBANK3
  1361  0040  0085               	movwf	5
  1362  0041  3049               	movlw	73
  1363  0042  3196  2656         	fcall	clear_ram0
  1364  0044                     end_of_initialization:	
  1365                           ;End of C runtime variable initialization code
  1366                           
  1367  0044                     __end_of__initialization:	
  1368  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1369  0045  0020               	movlb	0
  1370  0046  3180  2848         	ljmp	_main	;jump to C main() function
  1371                           
  1372                           	psect	bssBANK1
  1373  00DC                     __pbssBANK1:	
  1374  00DC                     _ADC0mVolt2:	
  1375  00DC                     	ds	3
  1376  00DF                     _ADC0mVolt1:	
  1377  00DF                     	ds	3
  1378  00E2                     _temp:	
  1379  00E2                     	ds	3
  1380  00E5                     _sleep:	
  1381  00E5                     	ds	2
  1382  00E7                     _units:	
  1383  00E7                     	ds	2
  1384  00E9                     _tens:	
  1385  00E9                     	ds	2
  1386                           
  1387                           	psect	dataBANK1
  1388  00EB                     __pdataBANK1:	
  1389  00EB                     _delay:	
  1390  00EB                     	ds	2
  1391  00ED                     _ADCres:	
  1392  00ED                     	ds	2
  1393                           
  1394                           	psect	bssBANK2
  1395  0120                     __pbssBANK2:	
  1396  0120                     _sensor1:	
  1397  0120                     	ds	3
  1398  0123                     _sensor0:	
  1399  0123                     	ds	3
  1400  0126                     _ADC1mVolt:	
  1401  0126                     	ds	3
  1402  0129                     _ADC0mVolt:	
  1403  0129                     	ds	3
  1404  012C                     _TempDIFF:	
  1405  012C                     	ds	3
  1406  012F                     _TemporC2:	
  1407  012F                     	ds	3
  1408  0132                     _TemporC1:	
  1409  0132                     	ds	3
  1410  0135                     _capacitance:	
  1411  0135                     	ds	3
  1412  0138                     _IN_CAP_TO_GND:	
  1413  0138                     	ds	3
  1414  013B                     _IN_EXTRA_CAP_TO_GND:	
  1415  013B                     	ds	3
  1416  013E                     _remainder:	
  1417  013E                     	ds	3
  1418  0141                     _errno:	
  1419  0141                     	ds	2
  1420  0143                     _SENSORID:	
  1421  0143                     	ds	2
  1422  0145                     _tenthousandths:	
  1423  0145                     	ds	2
  1424  0147                     _thousandths:	
  1425  0147                     	ds	2
  1426  0149                     _hundredths:	
  1427  0149                     	ds	2
  1428  014B                     _tenths:	
  1429  014B                     	ds	2
  1430  014D                     _hundreds:	
  1431  014D                     	ds	2
  1432                           
  1433                           	psect	dataBANK2
  1434  014F                     __pdataBANK2:	
  1435  014F                     _voltref:	
  1436  014F                     	ds	3
  1437  0152                     _FactorD:	
  1438  0152                     	ds	3
  1439  0155                     _FactorC:	
  1440  0155                     	ds	3
  1441  0158                     _FactorB:	
  1442  0158                     	ds	3
  1443  015B                     _FactorA:	
  1444  015B                     	ds	3
  1445  015E                     _IN_STRAY_CAP_TO_GND:	
  1446  015E                     	ds	3
  1447  0161                     _NODE_ID:	
  1448  0161                     	ds	2
  1449  0163                     _message:	
  1450  0163                     	ds	2
  1451  0165                     _packet:	
  1452  0165                     	ds	2
  1453  0167                     _Fixeddata:	
  1454  0167                     	ds	2
  1455  0169                     _preamble:	
  1456  0169                     	ds	2
  1457                           
  1458                           	psect	bssBANK3
  1459  01A0                     __pbssBANK3:	
  1460  01A0                     _packet2:	
  1461  01A0                     	ds	30
  1462  01BE                     _packet1:	
  1463  01BE                     	ds	24
  1464  01D6                     _nocodedbit:	
  1465  01D6                     	ds	13
  1466  01E3                     _str8:	
  1467  01E3                     	ds	6
  1468                           
  1469                           	psect	inittext
  1470  165C                     init_ram:	
  1471  165C  00FE               	movwf	126
  1472  165D                     initloop:	
  1473  165D  0012               	moviw fsr0++
  1474  165E  001E               	movwi fsr1++
  1475  165F  0BFE               	decfsz	126,f
  1476  1660  2E5D               	goto	initloop
  1477  1661  3400               	retlw	0
  1478                           
  1479                           	psect	clrtext
  1480  1656                     clear_ram0:	
  1481                           ;	Called with FSR0 containing the base address, and
  1482                           ;	WREG with the size to clear
  1483                           
  1484  1656  0064               	clrwdt	;clear the watchdog before getting into this loop
  1485  1657                     clrloop0:	
  1486  1657  0180               	clrf	0	;clear RAM location pointed to by FSR
  1487  1658  3101               	addfsr 0,1
  1488  1659  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1489  165A  2E57               	goto	clrloop0	;have we reached the end yet?
  1490  165B  3400               	retlw	0	;all done for this memory range, return
  1491                           
  1492                           	psect	cstackBANK1
  1493  00A0                     __pcstackBANK1:	
  1494  00A0                     floor@i:	
  1495  00A0                     eval_poly@res:	
  1496                           ; 3 bytes @ 0x0
  1497                           
  1498                           
  1499                           ; 3 bytes @ 0x0
  1500  00A0                     	ds	3
  1501  00A3                     ?_log:	
  1502  00A3                     ?_ldexp:	
  1503                           ; 3 bytes @ 0x3
  1504                           
  1505  00A3                     floor@expon:	
  1506                           ; 3 bytes @ 0x3
  1507                           
  1508  00A3                     ldexp@value:	
  1509                           ; 2 bytes @ 0x3
  1510                           
  1511  00A3                     log@x:	
  1512                           ; 3 bytes @ 0x3
  1513                           
  1514                           
  1515                           ; 3 bytes @ 0x3
  1516  00A3                     	ds	3
  1517  00A6                     ldexp@newexp:	
  1518  00A6                     log@exponent:	
  1519                           ; 2 bytes @ 0x6
  1520                           
  1521                           
  1522                           ; 2 bytes @ 0x6
  1523  00A6                     	ds	2
  1524  00A8                     ??_ldexp:	
  1525                           
  1526                           ; 1 bytes @ 0x8
  1527  00A8                     	ds	2
  1528  00AA                     ?_exp:	
  1529  00AA                     exp@x:	
  1530                           ; 3 bytes @ 0xA
  1531                           
  1532                           
  1533                           ; 3 bytes @ 0xA
  1534  00AA                     	ds	3
  1535  00AD                     ??_exp:	
  1536                           
  1537                           ; 1 bytes @ 0xD
  1538  00AD                     	ds	1
  1539  00AE                     _exp$891:	
  1540                           
  1541                           ; 3 bytes @ 0xE
  1542  00AE                     	ds	3
  1543  00B1                     exp@exponent:	
  1544                           
  1545                           ; 2 bytes @ 0x11
  1546  00B1                     	ds	2
  1547  00B3                     exp@sign:	
  1548                           
  1549                           ; 1 bytes @ 0x13
  1550  00B3                     	ds	1
  1551  00B4                     ?_pow:	
  1552  00B4                     pow@x:	
  1553                           ; 3 bytes @ 0x14
  1554                           
  1555                           
  1556                           ; 3 bytes @ 0x14
  1557  00B4                     	ds	3
  1558  00B7                     pow@y:	
  1559                           
  1560                           ; 3 bytes @ 0x17
  1561  00B7                     	ds	3
  1562  00BA                     ??_pow:	
  1563                           
  1564                           ; 1 bytes @ 0x1A
  1565  00BA                     	ds	1
  1566  00BB                     _pow$889:	
  1567                           
  1568                           ; 3 bytes @ 0x1B
  1569  00BB                     	ds	3
  1570  00BE                     _pow$890:	
  1571                           
  1572                           ; 3 bytes @ 0x1E
  1573  00BE                     	ds	3
  1574  00C1                     pow@sign:	
  1575                           
  1576                           ; 1 bytes @ 0x21
  1577  00C1                     	ds	1
  1578  00C2                     pow@yi:	
  1579                           
  1580                           ; 4 bytes @ 0x22
  1581  00C2                     	ds	4
  1582  00C6                     ??_main:	
  1583                           
  1584                           ; 1 bytes @ 0x26
  1585  00C6                     	ds	1
  1586  00C7                     main@i:	
  1587                           
  1588                           ; 2 bytes @ 0x27
  1589  00C7                     	ds	2
  1590  00C9                     main@count:	
  1591                           
  1592                           ; 1 bytes @ 0x29
  1593  00C9                     	ds	1
  1594  00CA                     _main$888:	
  1595                           
  1596                           ; 3 bytes @ 0x2A
  1597  00CA                     	ds	3
  1598  00CD                     _main$884:	
  1599                           
  1600                           ; 3 bytes @ 0x2D
  1601  00CD                     	ds	3
  1602  00D0                     _main$885:	
  1603                           
  1604                           ; 3 bytes @ 0x30
  1605  00D0                     	ds	3
  1606  00D3                     _main$886:	
  1607                           
  1608                           ; 3 bytes @ 0x33
  1609  00D3                     	ds	3
  1610  00D6                     _main$887:	
  1611                           
  1612                           ; 3 bytes @ 0x36
  1613  00D6                     	ds	3
  1614  00D9                     main@waitind:	
  1615                           
  1616                           ; 2 bytes @ 0x39
  1617  00D9                     	ds	2
  1618  00DB                     main@c:	
  1619                           
  1620                           ; 1 bytes @ 0x3B
  1621  00DB                     	ds	1
  1622                           
  1623                           	psect	cstackCOMMON
  1624  0070                     __pcstackCOMMON:	
  1625  0070                     ?_INT_ISR:	
  1626  0070                     ??_INT_ISR:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ?_PIN_MANAGER_Initialize:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     ?_OSCILLATOR_Initialize:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0070                     ?_WDT_Initialize:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0070                     ?_EXT_INT_Initialize:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ?_INT_CallBack:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ??_INT_CallBack:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?_sendChar:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     ?_ADC_Initialize:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0070                     ?_INTERRUPT_InterruptManager:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656  0070                     ??_INTERRUPT_InterruptManager:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0070                     ?_SYSTEM_Initialize:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0070                     ?_INT_DefaultInterruptHandler:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665  0070                     ??_INT_DefaultInterruptHandler:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668  0070                     ?_main:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671                           
  1672                           ; 1 bytes @ 0x0
  1673  0070                     	ds	1
  1674  0071                     ?___ftge:	
  1675  0071                     ??_PIN_MANAGER_Initialize:	
  1676                           ; 1 bit 
  1677                           
  1678  0071                     ??_OSCILLATOR_Initialize:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681  0071                     ??_WDT_Initialize:	
  1682                           ; 1 bytes @ 0x1
  1683                           
  1684  0071                     ?_dit_dah:	
  1685                           ; 1 bytes @ 0x1
  1686                           
  1687  0071                     ?_putch:	
  1688                           ; 1 bytes @ 0x1
  1689                           
  1690  0071                     ??_ADC_Initialize:	
  1691                           ; 1 bytes @ 0x1
  1692                           
  1693  0071                     ?_INT_SetInterruptHandler:	
  1694                           ; 1 bytes @ 0x1
  1695                           
  1696  0071                     ?_ADC_GetConversion:	
  1697                           ; 1 bytes @ 0x1
  1698                           
  1699  0071                     ?___wmul:	
  1700                           ; 2 bytes @ 0x1
  1701                           
  1702  0071                     ?___lwdiv:	
  1703                           ; 2 bytes @ 0x1
  1704                           
  1705  0071                     ?___ftpack:	
  1706                           ; 2 bytes @ 0x1
  1707                           
  1708  0071                     ?_frexp:	
  1709                           ; 3 bytes @ 0x1
  1710                           
  1711  0071                     ?___lmul:	
  1712                           ; 3 bytes @ 0x1
  1713                           
  1714  0071                     putch@c:	
  1715                           ; 4 bytes @ 0x1
  1716                           
  1717  0071                     INT_SetInterruptHandler@InterruptHandler:	
  1718                           ; 1 bytes @ 0x1
  1719                           
  1720  0071                     dit_dah@index:	
  1721                           ; 2 bytes @ 0x1
  1722                           
  1723  0071                     ___wmul@multiplier:	
  1724                           ; 2 bytes @ 0x1
  1725                           
  1726  0071                     ___lwdiv@divisor:	
  1727                           ; 2 bytes @ 0x1
  1728                           
  1729  0071                     ___ftpack@arg:	
  1730                           ; 2 bytes @ 0x1
  1731                           
  1732  0071                     ___ftge@ff1:	
  1733                           ; 3 bytes @ 0x1
  1734                           
  1735  0071                     frexp@value:	
  1736                           ; 3 bytes @ 0x1
  1737                           
  1738  0071                     ___lmul@multiplier:	
  1739                           ; 3 bytes @ 0x1
  1740                           
  1741                           
  1742                           ; 4 bytes @ 0x1
  1743  0071                     	ds	1
  1744  0072                     ??_putch:	
  1745                           
  1746                           ; 1 bytes @ 0x2
  1747  0072                     	ds	1
  1748  0073                     ??_EXT_INT_Initialize:	
  1749  0073                     ??_dit_dah:	
  1750                           ; 1 bytes @ 0x3
  1751                           
  1752  0073                     ??_ADC_GetConversion:	
  1753                           ; 1 bytes @ 0x3
  1754                           
  1755  0073                     ??_SYSTEM_Initialize:	
  1756                           ; 1 bytes @ 0x3
  1757                           
  1758  0073                     ??_INT_SetInterruptHandler:	
  1759                           ; 1 bytes @ 0x3
  1760                           
  1761  0073                     ___wmul@multiplicand:	
  1762                           ; 1 bytes @ 0x3
  1763                           
  1764  0073                     ___lwdiv@dividend:	
  1765                           ; 2 bytes @ 0x3
  1766                           
  1767                           
  1768                           ; 2 bytes @ 0x3
  1769  0073                     	ds	1
  1770  0074                     ADC_GetConversion@channel:	
  1771  0074                     ___ftpack@exp:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0074                     frexp@eptr:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0074                     dit_dah@i:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0074                     ___ftge@ff2:	
  1781                           ; 2 bytes @ 0x4
  1782                           
  1783                           
  1784                           ; 3 bytes @ 0x4
  1785  0074                     	ds	1
  1786  0075                     ??_frexp:	
  1787  0075                     ??___wmul:	
  1788                           ; 1 bytes @ 0x5
  1789                           
  1790  0075                     ??___lwdiv:	
  1791                           ; 1 bytes @ 0x5
  1792                           
  1793  0075                     ___ftpack@sign:	
  1794                           ; 1 bytes @ 0x5
  1795                           
  1796  0075                     ___wmul@product:	
  1797                           ; 1 bytes @ 0x5
  1798                           
  1799  0075                     ___lmul@multiplicand:	
  1800                           ; 2 bytes @ 0x5
  1801                           
  1802                           
  1803                           ; 4 bytes @ 0x5
  1804  0075                     	ds	1
  1805  0076                     ??_sendChar:	
  1806  0076                     ??___ftpack:	
  1807                           ; 1 bytes @ 0x6
  1808                           
  1809  0076                     ___lwdiv@quotient:	
  1810                           ; 1 bytes @ 0x6
  1811                           
  1812                           
  1813                           ; 2 bytes @ 0x6
  1814  0076                     	ds	1
  1815  0077                     ??___ftge:	
  1816  0077                     sendChar@i:	
  1817                           ; 1 bytes @ 0x7
  1818                           
  1819                           
  1820                           ; 2 bytes @ 0x7
  1821  0077                     	ds	1
  1822  0078                     ___lwdiv@counter:	
  1823                           
  1824                           ; 1 bytes @ 0x8
  1825  0078                     	ds	1
  1826  0079                     ??___lmul:	
  1827  0079                     ?___lwmod:	
  1828                           ; 1 bytes @ 0x9
  1829                           
  1830  0079                     ?___awtoft:	
  1831                           ; 2 bytes @ 0x9
  1832                           
  1833  0079                     ?___lltoft:	
  1834                           ; 3 bytes @ 0x9
  1835                           
  1836  0079                     ?___lwtoft:	
  1837                           ; 3 bytes @ 0x9
  1838                           
  1839  0079                     sendChar@a:	
  1840                           ; 3 bytes @ 0x9
  1841                           
  1842  0079                     ___awtoft@c:	
  1843                           ; 1 bytes @ 0x9
  1844                           
  1845  0079                     ___lwmod@divisor:	
  1846                           ; 2 bytes @ 0x9
  1847                           
  1848  0079                     ___lwtoft@c:	
  1849                           ; 2 bytes @ 0x9
  1850                           
  1851  0079                     ___lmul@product:	
  1852                           ; 2 bytes @ 0x9
  1853                           
  1854  0079                     ___lltoft@c:	
  1855                           ; 4 bytes @ 0x9
  1856                           
  1857                           
  1858                           ; 4 bytes @ 0x9
  1859  0079                     	ds	2
  1860  007B                     ___lwmod@dividend:	
  1861                           
  1862                           ; 2 bytes @ 0xB
  1863  007B                     	ds	1
  1864  007C                     ??___lwtoft:	
  1865  007C                     ___awtoft@sign:	
  1866                           ; 1 bytes @ 0xC
  1867                           
  1868                           
  1869                           ; 1 bytes @ 0xC
  1870  007C                     	ds	1
  1871  007D                     ??_eval_poly:	
  1872  007D                     ??___ftneg:	
  1873                           ; 1 bytes @ 0xD
  1874                           
  1875  007D                     ??___ftsub:	
  1876                           ; 1 bytes @ 0xD
  1877                           
  1878                           
  1879                           	psect	cstackBANK0
  1880  0020                     __pcstackBANK0:	
  1881                           ; 1 bytes @ 0xD
  1882                           
  1883  0020                     ??___awtoft:	
  1884  0020                     ??___lltoft:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887  0020                     ??___lwmod:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890                           
  1891                           ; 1 bytes @ 0x0
  1892  0020                     	ds	1
  1893  0021                     ___lltoft@exp:	
  1894  0021                     ___lwmod@counter:	
  1895                           ; 1 bytes @ 0x1
  1896                           
  1897                           
  1898                           ; 1 bytes @ 0x1
  1899  0021                     	ds	1
  1900  0022                     ?__doprnt:	
  1901  0022                     ?___ftdiv:	
  1902                           ; 2 bytes @ 0x2
  1903                           
  1904  0022                     __doprnt@f:	
  1905                           ; 3 bytes @ 0x2
  1906                           
  1907  0022                     ___ftdiv@f2:	
  1908                           ; 2 bytes @ 0x2
  1909                           
  1910                           
  1911                           ; 3 bytes @ 0x2
  1912  0022                     	ds	2
  1913  0024                     __doprnt@ap:	
  1914                           
  1915                           ; 1 bytes @ 0x4
  1916  0024                     	ds	1
  1917  0025                     ??__doprnt:	
  1918  0025                     ___ftdiv@f1:	
  1919                           ; 1 bytes @ 0x5
  1920                           
  1921                           
  1922                           ; 3 bytes @ 0x5
  1923  0025                     	ds	3
  1924  0028                     ??___ftdiv:	
  1925                           
  1926                           ; 1 bytes @ 0x8
  1927  0028                     	ds	1
  1928  0029                     __doprnt@flag:	
  1929                           
  1930                           ; 1 bytes @ 0x9
  1931  0029                     	ds	1
  1932  002A                     __doprnt@prec:	
  1933                           
  1934                           ; 1 bytes @ 0xA
  1935  002A                     	ds	1
  1936  002B                     __doprnt@val:	
  1937                           
  1938                           ; 2 bytes @ 0xB
  1939  002B                     	ds	1
  1940  002C                     ___ftdiv@cntr:	
  1941                           
  1942                           ; 1 bytes @ 0xC
  1943  002C                     	ds	1
  1944  002D                     __doprnt@c:	
  1945  002D                     ___ftdiv@f3:	
  1946                           ; 1 bytes @ 0xD
  1947                           
  1948                           
  1949                           ; 3 bytes @ 0xD
  1950  002D                     	ds	1
  1951  002E                     __doprnt@pb:	
  1952                           
  1953                           ; 1 bytes @ 0xE
  1954  002E                     	ds	1
  1955  002F                     ?_printf:	
  1956  002F                     ?_sprintf:	
  1957                           ; 2 bytes @ 0xF
  1958                           
  1959  002F                     printf@f:	
  1960                           ; 2 bytes @ 0xF
  1961                           
  1962  002F                     sprintf@f:	
  1963                           ; 2 bytes @ 0xF
  1964                           
  1965                           
  1966                           ; 2 bytes @ 0xF
  1967  002F                     	ds	1
  1968  0030                     ___ftdiv@exp:	
  1969                           
  1970                           ; 1 bytes @ 0x10
  1971  0030                     	ds	1
  1972  0031                     ??_printf:	
  1973  0031                     ___ftdiv@sign:	
  1974                           ; 1 bytes @ 0x11
  1975                           
  1976                           
  1977                           ; 1 bytes @ 0x11
  1978  0031                     	ds	1
  1979  0032                     ?___fttol:	
  1980  0032                     printf@ap:	
  1981                           ; 4 bytes @ 0x12
  1982                           
  1983  0032                     ___fttol@f1:	
  1984                           ; 1 bytes @ 0x12
  1985                           
  1986                           
  1987                           ; 3 bytes @ 0x12
  1988  0032                     	ds	1
  1989  0033                     printf@pb:	
  1990                           
  1991                           ; 3 bytes @ 0x13
  1992  0033                     	ds	2
  1993  0035                     ??_sprintf:	
  1994                           
  1995                           ; 1 bytes @ 0x15
  1996  0035                     	ds	1
  1997  0036                     ??___fttol:	
  1998  0036                     sprintf@wh:	
  1999                           ; 1 bytes @ 0x16
  2000                           
  2001                           
  2002                           ; 1 bytes @ 0x16
  2003  0036                     	ds	1
  2004  0037                     sprintf@ap:	
  2005                           
  2006                           ; 1 bytes @ 0x17
  2007  0037                     	ds	1
  2008  0038                     sprintf@pb:	
  2009                           
  2010                           ; 3 bytes @ 0x18
  2011  0038                     	ds	2
  2012  003A                     ___fttol@sign1:	
  2013                           
  2014                           ; 1 bytes @ 0x1A
  2015  003A                     	ds	1
  2016  003B                     ___fttol@lval:	
  2017                           
  2018                           ; 4 bytes @ 0x1B
  2019  003B                     	ds	4
  2020  003F                     ___fttol@exp1:	
  2021                           
  2022                           ; 1 bytes @ 0x1F
  2023  003F                     	ds	1
  2024  0040                     ?___altoft:	
  2025  0040                     ___altoft@c:	
  2026                           ; 3 bytes @ 0x20
  2027                           
  2028                           
  2029                           ; 4 bytes @ 0x20
  2030  0040                     	ds	4
  2031  0044                     ??___altoft:	
  2032                           
  2033                           ; 1 bytes @ 0x24
  2034  0044                     	ds	2
  2035  0046                     ___altoft@exp:	
  2036                           
  2037                           ; 1 bytes @ 0x26
  2038  0046                     	ds	1
  2039  0047                     ___altoft@sign:	
  2040                           
  2041                           ; 1 bytes @ 0x27
  2042  0047                     	ds	1
  2043  0048                     ?___ftneg:	
  2044  0048                     ___ftneg@f1:	
  2045                           ; 3 bytes @ 0x28
  2046                           
  2047                           
  2048                           ; 3 bytes @ 0x28
  2049  0048                     	ds	3
  2050  004B                     ?___ftmul:	
  2051  004B                     ___ftmul@f1:	
  2052                           ; 3 bytes @ 0x2B
  2053                           
  2054                           
  2055                           ; 3 bytes @ 0x2B
  2056  004B                     	ds	3
  2057  004E                     ___ftmul@f2:	
  2058                           
  2059                           ; 3 bytes @ 0x2E
  2060  004E                     	ds	3
  2061  0051                     ??___ftmul:	
  2062                           
  2063                           ; 1 bytes @ 0x31
  2064  0051                     	ds	4
  2065  0055                     ___ftmul@exp:	
  2066                           
  2067                           ; 1 bytes @ 0x35
  2068  0055                     	ds	1
  2069  0056                     ___ftmul@f3_as_product:	
  2070                           
  2071                           ; 3 bytes @ 0x36
  2072  0056                     	ds	3
  2073  0059                     ___ftmul@cntr:	
  2074                           
  2075                           ; 1 bytes @ 0x39
  2076  0059                     	ds	1
  2077  005A                     ___ftmul@sign:	
  2078                           
  2079                           ; 1 bytes @ 0x3A
  2080  005A                     	ds	1
  2081  005B                     ?___ftadd:	
  2082  005B                     ___ftadd@f1:	
  2083                           ; 3 bytes @ 0x3B
  2084                           
  2085                           
  2086                           ; 3 bytes @ 0x3B
  2087  005B                     	ds	3
  2088  005E                     ___ftadd@f2:	
  2089                           
  2090                           ; 3 bytes @ 0x3E
  2091  005E                     	ds	3
  2092  0061                     ??___ftadd:	
  2093                           
  2094                           ; 1 bytes @ 0x41
  2095  0061                     	ds	4
  2096  0065                     ___ftadd@sign:	
  2097                           
  2098                           ; 1 bytes @ 0x45
  2099  0065                     	ds	1
  2100  0066                     ___ftadd@exp2:	
  2101                           
  2102                           ; 1 bytes @ 0x46
  2103  0066                     	ds	1
  2104  0067                     ___ftadd@exp1:	
  2105                           
  2106                           ; 1 bytes @ 0x47
  2107  0067                     	ds	1
  2108  0068                     ?_floor:	
  2109  0068                     ?_eval_poly:	
  2110                           ; 3 bytes @ 0x48
  2111                           
  2112  0068                     ?___ftsub:	
  2113                           ; 3 bytes @ 0x48
  2114                           
  2115  0068                     ___ftsub@f2:	
  2116                           ; 3 bytes @ 0x48
  2117                           
  2118  0068                     floor@x:	
  2119                           ; 3 bytes @ 0x48
  2120                           
  2121  0068                     eval_poly@x:	
  2122                           ; 3 bytes @ 0x48
  2123                           
  2124                           
  2125                           ; 3 bytes @ 0x48
  2126  0068                     	ds	3
  2127  006B                     ??_floor:	
  2128  006B                     eval_poly@d:	
  2129                           ; 1 bytes @ 0x4B
  2130                           
  2131  006B                     ___ftsub@f1:	
  2132                           ; 2 bytes @ 0x4B
  2133                           
  2134                           
  2135                           ; 3 bytes @ 0x4B
  2136  006B                     	ds	2
  2137  006D                     eval_poly@n:	
  2138                           
  2139                           ; 2 bytes @ 0x4D
  2140  006D                     	ds	2
  2141  006F                     ??_log:	
  2142                           
  2143                           ; 1 bytes @ 0x4F
  2144  006F                     	ds	1
  2145                           
  2146                           	psect	maintext
  2147  0048                     __pmaintext:	
  2148 ;;
  2149 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2150 ;;
  2151 ;; *************** function _main *****************
  2152 ;; Defined at:
  2153 ;;		line 128 in file "main.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  waitind         2   57[BANK1 ] int 
  2158 ;;  c               1   59[BANK1 ] PTR unsigned char 
  2159 ;;		 -> str8(6), 
  2160 ;;  i               2   39[BANK1 ] int 
  2161 ;;  count           1   41[BANK1 ] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : B1F/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;Total ram usage:       22 bytes
  2176 ;; Hardware stack levels required when called:    9
  2177 ;; This function calls:
  2178 ;;		_ADC_GetConversion
  2179 ;;		_ADC_Initialize
  2180 ;;		_SYSTEM_Initialize
  2181 ;;		___altoft
  2182 ;;		___awtoft
  2183 ;;		___ftadd
  2184 ;;		___ftdiv
  2185 ;;		___ftmul
  2186 ;;		___ftneg
  2187 ;;		___fttol
  2188 ;;		___lmul
  2189 ;;		___lwtoft
  2190 ;;		_pow
  2191 ;;		_printf
  2192 ;;		_sendChar
  2193 ;;		_sprintf
  2194 ;; This function is called by:
  2195 ;;		Startup code after reset
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _main
  2201  0048                     _main:	
  2202                           
  2203                           ;main.c: 130: int i=0;
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2207  0048  0021               	movlb	1	; select bank1
  2208  0049  01C7               	clrf	main@i^(0+128)
  2209  004A  01C8               	clrf	(main@i+1)^(0+128)
  2210                           
  2211                           ;main.c: 133: SYSTEM_Initialize();
  2212  004B  3196  268A  3180   	fcall	_SYSTEM_Initialize
  2213                           
  2214                           ;main.c: 134: uint8_t count=0;
  2215  004E  0021               	movlb	1	; select bank1
  2216  004F  01C9               	clrf	main@count^(0+128)
  2217                           
  2218                           ;main.c: 140: if (sleep==1)
  2219  0050  0365               	decf	_sleep^(0+128),w
  2220  0051  0466               	iorwf	(_sleep+1)^(0+128),w
  2221  0052  1D03               	btfss	3,2
  2222  0053  2856               	goto	l242
  2223                           
  2224                           ;main.c: 141: {
  2225                           ;main.c: 143: (INTCONbits.GIE = 1);
  2226  0054  178B               	bsf	11,7	;volatile
  2227                           
  2228                           ;main.c: 144: }
  2229  0055  2857               	goto	l2861
  2230  0056                     l242:	
  2231                           
  2232                           ;main.c: 145: else
  2233                           ;main.c: 146: {
  2234                           ;main.c: 148: (INTCONbits.GIE = 0);
  2235  0056  138B               	bcf	11,7	;volatile
  2236  0057                     l2861:	
  2237                           
  2238                           ;main.c: 149: }
  2239                           ;main.c: 158: ADC_Initialize();
  2240  0057  3196  2662  3180   	fcall	_ADC_Initialize
  2241                           
  2242                           ;main.c: 160: printf("Start\n");
  2243  005A  309D               	movlw	low (STR_5| (0+32768))
  2244  005B  0020               	movlb	0	; select bank0
  2245  005C  00AF               	movwf	printf@f
  2246  005D  3098               	movlw	high (STR_5| (0+32768))
  2247  005E  00B0               	movwf	printf@f+1
  2248  005F  3196  26BE  3180   	fcall	_printf
  2249  0062                     l2865:	
  2250                           ;main.c: 161: while (1)
  2251                           
  2252                           
  2253                           ;main.c: 162: {
  2254                           ;main.c: 165: *packet1=0;
  2255  0062  0023               	movlb	3	; select bank3
  2256  0063  01BE               	clrf	_packet1^(0+384)
  2257                           
  2258                           ;main.c: 167: LATC3=1;
  2259  0064  0022               	movlb	2	; select bank2
  2260  0065  158E               	bsf	14,3	;volatile
  2261                           
  2262                           ;main.c: 169: sensor0= ADC_GetConversion(channel_AN8);
  2263  0066  3008               	movlw	8
  2264  0067  3196  26A9  3180   	fcall	_ADC_GetConversion
  2265  006A  0872               	movf	?_ADC_GetConversion+1,w
  2266  006B  00FA               	movwf	___lwtoft@c+1
  2267  006C  0871               	movf	?_ADC_GetConversion,w
  2268  006D  00F9               	movwf	___lwtoft@c
  2269  006E  3196  2696  3180   	fcall	___lwtoft
  2270  0071  0879               	movf	?___lwtoft,w
  2271  0072  0022               	movlb	2	; select bank2
  2272  0073  00A3               	movwf	_sensor0^(0+256)
  2273  0074  087A               	movf	?___lwtoft+1,w
  2274  0075  00A4               	movwf	(_sensor0+1)^(0+256)
  2275  0076  087B               	movf	?___lwtoft+2,w
  2276  0077  00A5               	movwf	(_sensor0+2)^(0+256)
  2277                           
  2278                           ;main.c: 170: ADC0mVolt1 =(voltref/ADCres)*sensor0;
  2279  0078  0823               	movf	_sensor0^(0+256),w
  2280  0079  0020               	movlb	0	; select bank0
  2281  007A  00CB               	movwf	___ftmul@f1
  2282  007B  0022               	movlb	2	; select bank2
  2283  007C  0824               	movf	(_sensor0+1)^(0+256),w
  2284  007D  0020               	movlb	0	; select bank0
  2285  007E  00CC               	movwf	___ftmul@f1+1
  2286  007F  0022               	movlb	2	; select bank2
  2287  0080  0825               	movf	(_sensor0+2)^(0+256),w
  2288  0081  0020               	movlb	0	; select bank0
  2289  0082  00CD               	movwf	___ftmul@f1+2
  2290  0083  0021               	movlb	1	; select bank1
  2291  0084  086E               	movf	(_ADCres+1)^(0+128),w
  2292  0085  00FA               	movwf	___awtoft@c+1
  2293  0086  086D               	movf	_ADCres^(0+128),w
  2294  0087  00F9               	movwf	___awtoft@c
  2295  0088  3188  2001  3180   	fcall	___awtoft
  2296  008B  0879               	movf	?___awtoft,w
  2297  008C  0020               	movlb	0	; select bank0
  2298  008D  00A2               	movwf	___ftdiv@f2
  2299  008E  087A               	movf	?___awtoft+1,w
  2300  008F  00A3               	movwf	___ftdiv@f2+1
  2301  0090  087B               	movf	?___awtoft+2,w
  2302  0091  00A4               	movwf	___ftdiv@f2+2
  2303  0092  0022               	movlb	2	; select bank2
  2304  0093  084F               	movf	_voltref^(0+256),w
  2305  0094  0020               	movlb	0	; select bank0
  2306  0095  00A5               	movwf	___ftdiv@f1
  2307  0096  0022               	movlb	2	; select bank2
  2308  0097  0850               	movf	(_voltref+1)^(0+256),w
  2309  0098  0020               	movlb	0	; select bank0
  2310  0099  00A6               	movwf	___ftdiv@f1+1
  2311  009A  0022               	movlb	2	; select bank2
  2312  009B  0851               	movf	(_voltref+2)^(0+256),w
  2313  009C  0020               	movlb	0	; select bank0
  2314  009D  00A7               	movwf	___ftdiv@f1+2
  2315  009E  318B  23D8  3180   	fcall	___ftdiv
  2316  00A1  0020               	movlb	0	; select bank0
  2317  00A2  0822               	movf	?___ftdiv,w
  2318  00A3  00CE               	movwf	___ftmul@f2
  2319  00A4  0823               	movf	?___ftdiv+1,w
  2320  00A5  00CF               	movwf	___ftmul@f2+1
  2321  00A6  0824               	movf	?___ftdiv+2,w
  2322  00A7  00D0               	movwf	___ftmul@f2+2
  2323  00A8  318C  2481  3180   	fcall	___ftmul
  2324  00AB  0020               	movlb	0	; select bank0
  2325  00AC  084B               	movf	?___ftmul,w
  2326  00AD  0021               	movlb	1	; select bank1
  2327  00AE  00DF               	movwf	_ADC0mVolt1^(0+128)
  2328  00AF  0020               	movlb	0	; select bank0
  2329  00B0  084C               	movf	?___ftmul+1,w
  2330  00B1  0021               	movlb	1	; select bank1
  2331  00B2  00E0               	movwf	(_ADC0mVolt1+1)^(0+128)
  2332  00B3  0020               	movlb	0	; select bank0
  2333  00B4  084D               	movf	?___ftmul+2,w
  2334  00B5  0021               	movlb	1	; select bank1
  2335  00B6  00E1               	movwf	(_ADC0mVolt1+2)^(0+128)
  2336                           
  2337                           ;main.c: 174: sensor1= ADC_GetConversion(channel_AN9);
  2338  00B7  3009               	movlw	9
  2339  00B8  3196  26A9  3180   	fcall	_ADC_GetConversion
  2340  00BB  0872               	movf	?_ADC_GetConversion+1,w
  2341  00BC  00FA               	movwf	___lwtoft@c+1
  2342  00BD  0871               	movf	?_ADC_GetConversion,w
  2343  00BE  00F9               	movwf	___lwtoft@c
  2344  00BF  3196  2696  3180   	fcall	___lwtoft
  2345  00C2  0879               	movf	?___lwtoft,w
  2346  00C3  0022               	movlb	2	; select bank2
  2347  00C4  00A0               	movwf	_sensor1^(0+256)
  2348  00C5  087A               	movf	?___lwtoft+1,w
  2349  00C6  00A1               	movwf	(_sensor1+1)^(0+256)
  2350  00C7  087B               	movf	?___lwtoft+2,w
  2351  00C8  00A2               	movwf	(_sensor1+2)^(0+256)
  2352                           
  2353                           ;main.c: 175: ADC0mVolt2 =(voltref/ADCres)*sensor1;
  2354  00C9  0820               	movf	_sensor1^(0+256),w
  2355  00CA  0020               	movlb	0	; select bank0
  2356  00CB  00CB               	movwf	___ftmul@f1
  2357  00CC  0022               	movlb	2	; select bank2
  2358  00CD  0821               	movf	(_sensor1+1)^(0+256),w
  2359  00CE  0020               	movlb	0	; select bank0
  2360  00CF  00CC               	movwf	___ftmul@f1+1
  2361  00D0  0022               	movlb	2	; select bank2
  2362  00D1  0822               	movf	(_sensor1+2)^(0+256),w
  2363  00D2  0020               	movlb	0	; select bank0
  2364  00D3  00CD               	movwf	___ftmul@f1+2
  2365  00D4  0021               	movlb	1	; select bank1
  2366  00D5  086E               	movf	(_ADCres+1)^(0+128),w
  2367  00D6  00FA               	movwf	___awtoft@c+1
  2368  00D7  086D               	movf	_ADCres^(0+128),w
  2369  00D8  00F9               	movwf	___awtoft@c
  2370  00D9  3188  2001  3180   	fcall	___awtoft
  2371  00DC  0879               	movf	?___awtoft,w
  2372  00DD  0020               	movlb	0	; select bank0
  2373  00DE  00A2               	movwf	___ftdiv@f2
  2374  00DF  087A               	movf	?___awtoft+1,w
  2375  00E0  00A3               	movwf	___ftdiv@f2+1
  2376  00E1  087B               	movf	?___awtoft+2,w
  2377  00E2  00A4               	movwf	___ftdiv@f2+2
  2378  00E3  0022               	movlb	2	; select bank2
  2379  00E4  084F               	movf	_voltref^(0+256),w
  2380  00E5  0020               	movlb	0	; select bank0
  2381  00E6  00A5               	movwf	___ftdiv@f1
  2382  00E7  0022               	movlb	2	; select bank2
  2383  00E8  0850               	movf	(_voltref+1)^(0+256),w
  2384  00E9  0020               	movlb	0	; select bank0
  2385  00EA  00A6               	movwf	___ftdiv@f1+1
  2386  00EB  0022               	movlb	2	; select bank2
  2387  00EC  0851               	movf	(_voltref+2)^(0+256),w
  2388  00ED  0020               	movlb	0	; select bank0
  2389  00EE  00A7               	movwf	___ftdiv@f1+2
  2390  00EF  318B  23D8  3180   	fcall	___ftdiv
  2391  00F2  0020               	movlb	0	; select bank0
  2392  00F3  0822               	movf	?___ftdiv,w
  2393  00F4  00CE               	movwf	___ftmul@f2
  2394  00F5  0823               	movf	?___ftdiv+1,w
  2395  00F6  00CF               	movwf	___ftmul@f2+1
  2396  00F7  0824               	movf	?___ftdiv+2,w
  2397  00F8  00D0               	movwf	___ftmul@f2+2
  2398  00F9  318C  2481  3180   	fcall	___ftmul
  2399  00FC  0020               	movlb	0	; select bank0
  2400  00FD  084B               	movf	?___ftmul,w
  2401  00FE  0021               	movlb	1	; select bank1
  2402  00FF  00DC               	movwf	_ADC0mVolt2^(0+128)
  2403  0100  0020               	movlb	0	; select bank0
  2404  0101  084C               	movf	?___ftmul+1,w
  2405  0102  0021               	movlb	1	; select bank1
  2406  0103  00DD               	movwf	(_ADC0mVolt2+1)^(0+128)
  2407  0104  0020               	movlb	0	; select bank0
  2408  0105  084D               	movf	?___ftmul+2,w
  2409  0106  0021               	movlb	1	; select bank1
  2410  0107  00DE               	movwf	(_ADC0mVolt2+2)^(0+128)
  2411                           
  2412                           ;main.c: 179: ADCON0 = 0x00;
  2413  0108  019D               	clrf	29	;volatile
  2414                           
  2415                           ;main.c: 180: LATC3=0;
  2416  0109  0022               	movlb	2	; select bank2
  2417  010A  118E               	bcf	14,3	;volatile
  2418                           
  2419                           ;main.c: 182: ADC0mVolt2 =995.050;
  2420  010B  30C3               	movlw	195
  2421  010C  0021               	movlb	1	; select bank1
  2422  010D  00DC               	movwf	_ADC0mVolt2^(0+128)
  2423  010E  3078               	movlw	120
  2424  010F  00DD               	movwf	(_ADC0mVolt2+1)^(0+128)
  2425  0110  3044               	movlw	68
  2426  0111  00DE               	movwf	(_ADC0mVolt2+2)^(0+128)
  2427                           
  2428                           ;main.c: 183: ADC0mVolt1 =992.227;
  2429  0112  300F               	movlw	15
  2430  0113  00DF               	movwf	_ADC0mVolt1^(0+128)
  2431  0114  3078               	movlw	120
  2432  0115  00E0               	movwf	(_ADC0mVolt1+1)^(0+128)
  2433  0116  3044               	movlw	68
  2434  0117  00E1               	movwf	(_ADC0mVolt1+2)^(0+128)
  2435                           
  2436                           ;main.c: 185: TemporC1 = (double)FactorA*pow(ADC0mVolt1,3)+ (double)FactorB*pow(ADC0mVol
      +                          t1,2)+ (double)FactorC*(ADC0mVolt1) + FactorD;
  2437  0118  3000               	movlw	0
  2438  0119  00B7               	movwf	pow@y^(0+128)
  2439  011A  3000               	movlw	0
  2440  011B  00B8               	movwf	(pow@y+1)^(0+128)
  2441  011C  3040               	movlw	64
  2442  011D  00B9               	movwf	(pow@y+2)^(0+128)
  2443  011E  085F               	movf	_ADC0mVolt1^(0+128),w
  2444  011F  00B4               	movwf	pow@x^(0+128)
  2445  0120  0860               	movf	(_ADC0mVolt1+1)^(0+128),w
  2446  0121  00B5               	movwf	(pow@x+1)^(0+128)
  2447  0122  0861               	movf	(_ADC0mVolt1+2)^(0+128),w
  2448  0123  00B6               	movwf	(pow@x+2)^(0+128)
  2449  0124  318E  26F7  3180   	fcall	_pow
  2450  0127  0021               	movlb	1	; select bank1
  2451  0128  0834               	movf	?_pow^(0+128),w
  2452  0129  00CD               	movwf	_main$884^(0+128)
  2453  012A  0835               	movf	(?_pow+1)^(0+128),w
  2454  012B  00CE               	movwf	(_main$884+1)^(0+128)
  2455  012C  0836               	movf	(?_pow+2)^(0+128),w
  2456  012D  00CF               	movwf	(_main$884+2)^(0+128)
  2457                           
  2458                           ;main.c: 185: TemporC1 = (double)FactorA*pow(ADC0mVolt1,3)+ (double)FactorB*pow(ADC0mVol
      +                          t1,2)+ (double)FactorC*(ADC0mVolt1) + FactorD;
  2459  012E  3000               	movlw	0
  2460  012F  00B7               	movwf	pow@y^(0+128)
  2461  0130  3040               	movlw	64
  2462  0131  00B8               	movwf	(pow@y+1)^(0+128)
  2463  0132  3040               	movlw	64
  2464  0133  00B9               	movwf	(pow@y+2)^(0+128)
  2465  0134  085F               	movf	_ADC0mVolt1^(0+128),w
  2466  0135  00B4               	movwf	pow@x^(0+128)
  2467  0136  0860               	movf	(_ADC0mVolt1+1)^(0+128),w
  2468  0137  00B5               	movwf	(pow@x+1)^(0+128)
  2469  0138  0861               	movf	(_ADC0mVolt1+2)^(0+128),w
  2470  0139  00B6               	movwf	(pow@x+2)^(0+128)
  2471  013A  318E  26F7  3180   	fcall	_pow
  2472  013D  0021               	movlb	1	; select bank1
  2473  013E  0834               	movf	?_pow^(0+128),w
  2474  013F  00D0               	movwf	_main$885^(0+128)
  2475  0140  0835               	movf	(?_pow+1)^(0+128),w
  2476  0141  00D1               	movwf	(_main$885+1)^(0+128)
  2477  0142  0836               	movf	(?_pow+2)^(0+128),w
  2478  0143  00D2               	movwf	(_main$885+2)^(0+128)
  2479                           
  2480                           ;main.c: 185: TemporC1 = (double)FactorA*pow(ADC0mVolt1,3)+ (double)FactorB*pow(ADC0mVol
      +                          t1,2)+ (double)FactorC*(ADC0mVolt1) + FactorD;
  2481  0144  0022               	movlb	2	; select bank2
  2482  0145  0858               	movf	_FactorB^(0+256),w
  2483  0146  0020               	movlb	0	; select bank0
  2484  0147  00CB               	movwf	___ftmul@f1
  2485  0148  0022               	movlb	2	; select bank2
  2486  0149  0859               	movf	(_FactorB+1)^(0+256),w
  2487  014A  0020               	movlb	0	; select bank0
  2488  014B  00CC               	movwf	___ftmul@f1+1
  2489  014C  0022               	movlb	2	; select bank2
  2490  014D  085A               	movf	(_FactorB+2)^(0+256),w
  2491  014E  0020               	movlb	0	; select bank0
  2492  014F  00CD               	movwf	___ftmul@f1+2
  2493  0150  0021               	movlb	1	; select bank1
  2494  0151  084D               	movf	_main$884^(0+128),w
  2495  0152  0020               	movlb	0	; select bank0
  2496  0153  00CE               	movwf	___ftmul@f2
  2497  0154  0021               	movlb	1	; select bank1
  2498  0155  084E               	movf	(_main$884+1)^(0+128),w
  2499  0156  0020               	movlb	0	; select bank0
  2500  0157  00CF               	movwf	___ftmul@f2+1
  2501  0158  0021               	movlb	1	; select bank1
  2502  0159  084F               	movf	(_main$884+2)^(0+128),w
  2503  015A  0020               	movlb	0	; select bank0
  2504  015B  00D0               	movwf	___ftmul@f2+2
  2505  015C  318C  2481  3180   	fcall	___ftmul
  2506  015F  0020               	movlb	0	; select bank0
  2507  0160  084B               	movf	?___ftmul,w
  2508  0161  00DB               	movwf	___ftadd@f1
  2509  0162  084C               	movf	?___ftmul+1,w
  2510  0163  00DC               	movwf	___ftadd@f1+1
  2511  0164  084D               	movf	?___ftmul+2,w
  2512  0165  00DD               	movwf	___ftadd@f1+2
  2513  0166  0022               	movlb	2	; select bank2
  2514  0167  085B               	movf	_FactorA^(0+256),w
  2515  0168  0020               	movlb	0	; select bank0
  2516  0169  00CB               	movwf	___ftmul@f1
  2517  016A  0022               	movlb	2	; select bank2
  2518  016B  085C               	movf	(_FactorA+1)^(0+256),w
  2519  016C  0020               	movlb	0	; select bank0
  2520  016D  00CC               	movwf	___ftmul@f1+1
  2521  016E  0022               	movlb	2	; select bank2
  2522  016F  085D               	movf	(_FactorA+2)^(0+256),w
  2523  0170  0020               	movlb	0	; select bank0
  2524  0171  00CD               	movwf	___ftmul@f1+2
  2525  0172  0021               	movlb	1	; select bank1
  2526  0173  0850               	movf	_main$885^(0+128),w
  2527  0174  0020               	movlb	0	; select bank0
  2528  0175  00CE               	movwf	___ftmul@f2
  2529  0176  0021               	movlb	1	; select bank1
  2530  0177  0851               	movf	(_main$885+1)^(0+128),w
  2531  0178  0020               	movlb	0	; select bank0
  2532  0179  00CF               	movwf	___ftmul@f2+1
  2533  017A  0021               	movlb	1	; select bank1
  2534  017B  0852               	movf	(_main$885+2)^(0+128),w
  2535  017C  0020               	movlb	0	; select bank0
  2536  017D  00D0               	movwf	___ftmul@f2+2
  2537  017E  318C  2481  3180   	fcall	___ftmul
  2538  0181  0020               	movlb	0	; select bank0
  2539  0182  084B               	movf	?___ftmul,w
  2540  0183  00DE               	movwf	___ftadd@f2
  2541  0184  084C               	movf	?___ftmul+1,w
  2542  0185  00DF               	movwf	___ftadd@f2+1
  2543  0186  084D               	movf	?___ftmul+2,w
  2544  0187  00E0               	movwf	___ftadd@f2+2
  2545  0188  318E  2601  3180   	fcall	___ftadd
  2546  018B  0020               	movlb	0	; select bank0
  2547  018C  085B               	movf	?___ftadd,w
  2548  018D  0021               	movlb	1	; select bank1
  2549  018E  00D3               	movwf	_main$886^(0+128)
  2550  018F  0020               	movlb	0	; select bank0
  2551  0190  085C               	movf	?___ftadd+1,w
  2552  0191  0021               	movlb	1	; select bank1
  2553  0192  00D4               	movwf	(_main$886+1)^(0+128)
  2554  0193  0020               	movlb	0	; select bank0
  2555  0194  085D               	movf	?___ftadd+2,w
  2556  0195  0021               	movlb	1	; select bank1
  2557  0196  00D5               	movwf	(_main$886+2)^(0+128)
  2558                           
  2559                           ;main.c: 185: TemporC1 = (double)FactorA*pow(ADC0mVolt1,3)+ (double)FactorB*pow(ADC0mVol
      +                          t1,2)+ (double)FactorC*(ADC0mVolt1) + FactorD;
  2560  0197  085F               	movf	_ADC0mVolt1^(0+128),w
  2561  0198  0020               	movlb	0	; select bank0
  2562  0199  00CB               	movwf	___ftmul@f1
  2563  019A  0021               	movlb	1	; select bank1
  2564  019B  0860               	movf	(_ADC0mVolt1+1)^(0+128),w
  2565  019C  0020               	movlb	0	; select bank0
  2566  019D  00CC               	movwf	___ftmul@f1+1
  2567  019E  0021               	movlb	1	; select bank1
  2568  019F  0861               	movf	(_ADC0mVolt1+2)^(0+128),w
  2569  01A0  0020               	movlb	0	; select bank0
  2570  01A1  00CD               	movwf	___ftmul@f1+2
  2571  01A2  0022               	movlb	2	; select bank2
  2572  01A3  0855               	movf	_FactorC^(0+256),w
  2573  01A4  0020               	movlb	0	; select bank0
  2574  01A5  00CE               	movwf	___ftmul@f2
  2575  01A6  0022               	movlb	2	; select bank2
  2576  01A7  0856               	movf	(_FactorC+1)^(0+256),w
  2577  01A8  0020               	movlb	0	; select bank0
  2578  01A9  00CF               	movwf	___ftmul@f2+1
  2579  01AA  0022               	movlb	2	; select bank2
  2580  01AB  0857               	movf	(_FactorC+2)^(0+256),w
  2581  01AC  0020               	movlb	0	; select bank0
  2582  01AD  00D0               	movwf	___ftmul@f2+2
  2583  01AE  318C  2481  3180   	fcall	___ftmul
  2584  01B1  0020               	movlb	0	; select bank0
  2585  01B2  084B               	movf	?___ftmul,w
  2586  01B3  00DB               	movwf	___ftadd@f1
  2587  01B4  084C               	movf	?___ftmul+1,w
  2588  01B5  00DC               	movwf	___ftadd@f1+1
  2589  01B6  084D               	movf	?___ftmul+2,w
  2590  01B7  00DD               	movwf	___ftadd@f1+2
  2591  01B8  0021               	movlb	1	; select bank1
  2592  01B9  0853               	movf	_main$886^(0+128),w
  2593  01BA  0020               	movlb	0	; select bank0
  2594  01BB  00DE               	movwf	___ftadd@f2
  2595  01BC  0021               	movlb	1	; select bank1
  2596  01BD  0854               	movf	(_main$886+1)^(0+128),w
  2597  01BE  0020               	movlb	0	; select bank0
  2598  01BF  00DF               	movwf	___ftadd@f2+1
  2599  01C0  0021               	movlb	1	; select bank1
  2600  01C1  0855               	movf	(_main$886+2)^(0+128),w
  2601  01C2  0020               	movlb	0	; select bank0
  2602  01C3  00E0               	movwf	___ftadd@f2+2
  2603  01C4  318E  2601  3180   	fcall	___ftadd
  2604  01C7  0020               	movlb	0	; select bank0
  2605  01C8  085B               	movf	?___ftadd,w
  2606  01C9  0021               	movlb	1	; select bank1
  2607  01CA  00D6               	movwf	_main$887^(0+128)
  2608  01CB  0020               	movlb	0	; select bank0
  2609  01CC  085C               	movf	?___ftadd+1,w
  2610  01CD  0021               	movlb	1	; select bank1
  2611  01CE  00D7               	movwf	(_main$887+1)^(0+128)
  2612  01CF  0020               	movlb	0	; select bank0
  2613  01D0  085D               	movf	?___ftadd+2,w
  2614  01D1  0021               	movlb	1	; select bank1
  2615  01D2  00D8               	movwf	(_main$887+2)^(0+128)
  2616                           
  2617                           ;main.c: 185: TemporC1 = (double)FactorA*pow(ADC0mVolt1,3)+ (double)FactorB*pow(ADC0mVol
      +                          t1,2)+ (double)FactorC*(ADC0mVolt1) + FactorD;
  2618  01D3  0022               	movlb	2	; select bank2
  2619  01D4  0852               	movf	_FactorD^(0+256),w
  2620  01D5  0020               	movlb	0	; select bank0
  2621  01D6  00DB               	movwf	___ftadd@f1
  2622  01D7  0022               	movlb	2	; select bank2
  2623  01D8  0853               	movf	(_FactorD+1)^(0+256),w
  2624  01D9  0020               	movlb	0	; select bank0
  2625  01DA  00DC               	movwf	___ftadd@f1+1
  2626  01DB  0022               	movlb	2	; select bank2
  2627  01DC  0854               	movf	(_FactorD+2)^(0+256),w
  2628  01DD  0020               	movlb	0	; select bank0
  2629  01DE  00DD               	movwf	___ftadd@f1+2
  2630  01DF  0021               	movlb	1	; select bank1
  2631  01E0  0856               	movf	_main$887^(0+128),w
  2632  01E1  0020               	movlb	0	; select bank0
  2633  01E2  00DE               	movwf	___ftadd@f2
  2634  01E3  0021               	movlb	1	; select bank1
  2635  01E4  0857               	movf	(_main$887+1)^(0+128),w
  2636  01E5  0020               	movlb	0	; select bank0
  2637  01E6  00DF               	movwf	___ftadd@f2+1
  2638  01E7  0021               	movlb	1	; select bank1
  2639  01E8  0858               	movf	(_main$887+2)^(0+128),w
  2640  01E9  0020               	movlb	0	; select bank0
  2641  01EA  00E0               	movwf	___ftadd@f2+2
  2642  01EB  318E  2601  3180   	fcall	___ftadd
  2643  01EE  0020               	movlb	0	; select bank0
  2644  01EF  085B               	movf	?___ftadd,w
  2645  01F0  0022               	movlb	2	; select bank2
  2646  01F1  00B2               	movwf	_TemporC1^(0+256)
  2647  01F2  0020               	movlb	0	; select bank0
  2648  01F3  085C               	movf	?___ftadd+1,w
  2649  01F4  0022               	movlb	2	; select bank2
  2650  01F5  00B3               	movwf	(_TemporC1+1)^(0+256)
  2651  01F6  0020               	movlb	0	; select bank0
  2652  01F7  085D               	movf	?___ftadd+2,w
  2653  01F8  0022               	movlb	2	; select bank2
  2654  01F9  00B4               	movwf	(_TemporC1+2)^(0+256)
  2655                           
  2656                           ;main.c: 186: TemporC2 = (double)FactorA*pow(ADC0mVolt2,3)+ (double)FactorB*pow(ADC0mVol
      +                          t2,2)+ (double)FactorC*(ADC0mVolt2) + FactorD;
  2657  01FA  3000               	movlw	0
  2658  01FB  0021               	movlb	1	; select bank1
  2659  01FC  00B7               	movwf	pow@y^(0+128)
  2660  01FD  3000               	movlw	0
  2661  01FE  00B8               	movwf	(pow@y+1)^(0+128)
  2662  01FF  3040               	movlw	64
  2663  0200  00B9               	movwf	(pow@y+2)^(0+128)
  2664  0201  085C               	movf	_ADC0mVolt2^(0+128),w
  2665  0202  00B4               	movwf	pow@x^(0+128)
  2666  0203  085D               	movf	(_ADC0mVolt2+1)^(0+128),w
  2667  0204  00B5               	movwf	(pow@x+1)^(0+128)
  2668  0205  085E               	movf	(_ADC0mVolt2+2)^(0+128),w
  2669  0206  00B6               	movwf	(pow@x+2)^(0+128)
  2670  0207  318E  26F7  3180   	fcall	_pow
  2671  020A  0021               	movlb	1	; select bank1
  2672  020B  0834               	movf	?_pow^(0+128),w
  2673  020C  00CD               	movwf	_main$884^(0+128)
  2674  020D  0835               	movf	(?_pow+1)^(0+128),w
  2675  020E  00CE               	movwf	(_main$884+1)^(0+128)
  2676  020F  0836               	movf	(?_pow+2)^(0+128),w
  2677  0210  00CF               	movwf	(_main$884+2)^(0+128)
  2678                           
  2679                           ;main.c: 186: TemporC2 = (double)FactorA*pow(ADC0mVolt2,3)+ (double)FactorB*pow(ADC0mVol
      +                          t2,2)+ (double)FactorC*(ADC0mVolt2) + FactorD;
  2680  0211  3000               	movlw	0
  2681  0212  00B7               	movwf	pow@y^(0+128)
  2682  0213  3040               	movlw	64
  2683  0214  00B8               	movwf	(pow@y+1)^(0+128)
  2684  0215  3040               	movlw	64
  2685  0216  00B9               	movwf	(pow@y+2)^(0+128)
  2686  0217  085C               	movf	_ADC0mVolt2^(0+128),w
  2687  0218  00B4               	movwf	pow@x^(0+128)
  2688  0219  085D               	movf	(_ADC0mVolt2+1)^(0+128),w
  2689  021A  00B5               	movwf	(pow@x+1)^(0+128)
  2690  021B  085E               	movf	(_ADC0mVolt2+2)^(0+128),w
  2691  021C  00B6               	movwf	(pow@x+2)^(0+128)
  2692  021D  318E  26F7  3180   	fcall	_pow
  2693  0220  0021               	movlb	1	; select bank1
  2694  0221  0834               	movf	?_pow^(0+128),w
  2695  0222  00D0               	movwf	_main$885^(0+128)
  2696  0223  0835               	movf	(?_pow+1)^(0+128),w
  2697  0224  00D1               	movwf	(_main$885+1)^(0+128)
  2698  0225  0836               	movf	(?_pow+2)^(0+128),w
  2699  0226  00D2               	movwf	(_main$885+2)^(0+128)
  2700                           
  2701                           ;main.c: 186: TemporC2 = (double)FactorA*pow(ADC0mVolt2,3)+ (double)FactorB*pow(ADC0mVol
      +                          t2,2)+ (double)FactorC*(ADC0mVolt2) + FactorD;
  2702  0227  0022               	movlb	2	; select bank2
  2703  0228  0858               	movf	_FactorB^(0+256),w
  2704  0229  0020               	movlb	0	; select bank0
  2705  022A  00CB               	movwf	___ftmul@f1
  2706  022B  0022               	movlb	2	; select bank2
  2707  022C  0859               	movf	(_FactorB+1)^(0+256),w
  2708  022D  0020               	movlb	0	; select bank0
  2709  022E  00CC               	movwf	___ftmul@f1+1
  2710  022F  0022               	movlb	2	; select bank2
  2711  0230  085A               	movf	(_FactorB+2)^(0+256),w
  2712  0231  0020               	movlb	0	; select bank0
  2713  0232  00CD               	movwf	___ftmul@f1+2
  2714  0233  0021               	movlb	1	; select bank1
  2715  0234  084D               	movf	_main$884^(0+128),w
  2716  0235  0020               	movlb	0	; select bank0
  2717  0236  00CE               	movwf	___ftmul@f2
  2718  0237  0021               	movlb	1	; select bank1
  2719  0238  084E               	movf	(_main$884+1)^(0+128),w
  2720  0239  0020               	movlb	0	; select bank0
  2721  023A  00CF               	movwf	___ftmul@f2+1
  2722  023B  0021               	movlb	1	; select bank1
  2723  023C  084F               	movf	(_main$884+2)^(0+128),w
  2724  023D  0020               	movlb	0	; select bank0
  2725  023E  00D0               	movwf	___ftmul@f2+2
  2726  023F  318C  2481  3180   	fcall	___ftmul
  2727  0242  0020               	movlb	0	; select bank0
  2728  0243  084B               	movf	?___ftmul,w
  2729  0244  00DB               	movwf	___ftadd@f1
  2730  0245  084C               	movf	?___ftmul+1,w
  2731  0246  00DC               	movwf	___ftadd@f1+1
  2732  0247  084D               	movf	?___ftmul+2,w
  2733  0248  00DD               	movwf	___ftadd@f1+2
  2734  0249  0022               	movlb	2	; select bank2
  2735  024A  085B               	movf	_FactorA^(0+256),w
  2736  024B  0020               	movlb	0	; select bank0
  2737  024C  00CB               	movwf	___ftmul@f1
  2738  024D  0022               	movlb	2	; select bank2
  2739  024E  085C               	movf	(_FactorA+1)^(0+256),w
  2740  024F  0020               	movlb	0	; select bank0
  2741  0250  00CC               	movwf	___ftmul@f1+1
  2742  0251  0022               	movlb	2	; select bank2
  2743  0252  085D               	movf	(_FactorA+2)^(0+256),w
  2744  0253  0020               	movlb	0	; select bank0
  2745  0254  00CD               	movwf	___ftmul@f1+2
  2746  0255  0021               	movlb	1	; select bank1
  2747  0256  0850               	movf	_main$885^(0+128),w
  2748  0257  0020               	movlb	0	; select bank0
  2749  0258  00CE               	movwf	___ftmul@f2
  2750  0259  0021               	movlb	1	; select bank1
  2751  025A  0851               	movf	(_main$885+1)^(0+128),w
  2752  025B  0020               	movlb	0	; select bank0
  2753  025C  00CF               	movwf	___ftmul@f2+1
  2754  025D  0021               	movlb	1	; select bank1
  2755  025E  0852               	movf	(_main$885+2)^(0+128),w
  2756  025F  0020               	movlb	0	; select bank0
  2757  0260  00D0               	movwf	___ftmul@f2+2
  2758  0261  318C  2481  3180   	fcall	___ftmul
  2759  0264  0020               	movlb	0	; select bank0
  2760  0265  084B               	movf	?___ftmul,w
  2761  0266  00DE               	movwf	___ftadd@f2
  2762  0267  084C               	movf	?___ftmul+1,w
  2763  0268  00DF               	movwf	___ftadd@f2+1
  2764  0269  084D               	movf	?___ftmul+2,w
  2765  026A  00E0               	movwf	___ftadd@f2+2
  2766  026B  318E  2601  3180   	fcall	___ftadd
  2767  026E  0020               	movlb	0	; select bank0
  2768  026F  085B               	movf	?___ftadd,w
  2769  0270  0021               	movlb	1	; select bank1
  2770  0271  00D3               	movwf	_main$886^(0+128)
  2771  0272  0020               	movlb	0	; select bank0
  2772  0273  085C               	movf	?___ftadd+1,w
  2773  0274  0021               	movlb	1	; select bank1
  2774  0275  00D4               	movwf	(_main$886+1)^(0+128)
  2775  0276  0020               	movlb	0	; select bank0
  2776  0277  085D               	movf	?___ftadd+2,w
  2777  0278  0021               	movlb	1	; select bank1
  2778  0279  00D5               	movwf	(_main$886+2)^(0+128)
  2779                           
  2780                           ;main.c: 186: TemporC2 = (double)FactorA*pow(ADC0mVolt2,3)+ (double)FactorB*pow(ADC0mVol
      +                          t2,2)+ (double)FactorC*(ADC0mVolt2) + FactorD;
  2781  027A  085C               	movf	_ADC0mVolt2^(0+128),w
  2782  027B  0020               	movlb	0	; select bank0
  2783  027C  00CB               	movwf	___ftmul@f1
  2784  027D  0021               	movlb	1	; select bank1
  2785  027E  085D               	movf	(_ADC0mVolt2+1)^(0+128),w
  2786  027F  0020               	movlb	0	; select bank0
  2787  0280  00CC               	movwf	___ftmul@f1+1
  2788  0281  0021               	movlb	1	; select bank1
  2789  0282  085E               	movf	(_ADC0mVolt2+2)^(0+128),w
  2790  0283  0020               	movlb	0	; select bank0
  2791  0284  00CD               	movwf	___ftmul@f1+2
  2792  0285  0022               	movlb	2	; select bank2
  2793  0286  0855               	movf	_FactorC^(0+256),w
  2794  0287  0020               	movlb	0	; select bank0
  2795  0288  00CE               	movwf	___ftmul@f2
  2796  0289  0022               	movlb	2	; select bank2
  2797  028A  0856               	movf	(_FactorC+1)^(0+256),w
  2798  028B  0020               	movlb	0	; select bank0
  2799  028C  00CF               	movwf	___ftmul@f2+1
  2800  028D  0022               	movlb	2	; select bank2
  2801  028E  0857               	movf	(_FactorC+2)^(0+256),w
  2802  028F  0020               	movlb	0	; select bank0
  2803  0290  00D0               	movwf	___ftmul@f2+2
  2804  0291  318C  2481  3180   	fcall	___ftmul
  2805  0294  0020               	movlb	0	; select bank0
  2806  0295  084B               	movf	?___ftmul,w
  2807  0296  00DB               	movwf	___ftadd@f1
  2808  0297  084C               	movf	?___ftmul+1,w
  2809  0298  00DC               	movwf	___ftadd@f1+1
  2810  0299  084D               	movf	?___ftmul+2,w
  2811  029A  00DD               	movwf	___ftadd@f1+2
  2812  029B  0021               	movlb	1	; select bank1
  2813  029C  0853               	movf	_main$886^(0+128),w
  2814  029D  0020               	movlb	0	; select bank0
  2815  029E  00DE               	movwf	___ftadd@f2
  2816  029F  0021               	movlb	1	; select bank1
  2817  02A0  0854               	movf	(_main$886+1)^(0+128),w
  2818  02A1  0020               	movlb	0	; select bank0
  2819  02A2  00DF               	movwf	___ftadd@f2+1
  2820  02A3  0021               	movlb	1	; select bank1
  2821  02A4  0855               	movf	(_main$886+2)^(0+128),w
  2822  02A5  0020               	movlb	0	; select bank0
  2823  02A6  00E0               	movwf	___ftadd@f2+2
  2824  02A7  318E  2601  3180   	fcall	___ftadd
  2825  02AA  0020               	movlb	0	; select bank0
  2826  02AB  085B               	movf	?___ftadd,w
  2827  02AC  0021               	movlb	1	; select bank1
  2828  02AD  00D6               	movwf	_main$887^(0+128)
  2829  02AE  0020               	movlb	0	; select bank0
  2830  02AF  085C               	movf	?___ftadd+1,w
  2831  02B0  0021               	movlb	1	; select bank1
  2832  02B1  00D7               	movwf	(_main$887+1)^(0+128)
  2833  02B2  0020               	movlb	0	; select bank0
  2834  02B3  085D               	movf	?___ftadd+2,w
  2835  02B4  0021               	movlb	1	; select bank1
  2836  02B5  00D8               	movwf	(_main$887+2)^(0+128)
  2837                           
  2838                           ;main.c: 186: TemporC2 = (double)FactorA*pow(ADC0mVolt2,3)+ (double)FactorB*pow(ADC0mVol
      +                          t2,2)+ (double)FactorC*(ADC0mVolt2) + FactorD;
  2839  02B6  0022               	movlb	2	; select bank2
  2840  02B7  0852               	movf	_FactorD^(0+256),w
  2841  02B8  0020               	movlb	0	; select bank0
  2842  02B9  00DB               	movwf	___ftadd@f1
  2843  02BA  0022               	movlb	2	; select bank2
  2844  02BB  0853               	movf	(_FactorD+1)^(0+256),w
  2845  02BC  0020               	movlb	0	; select bank0
  2846  02BD  00DC               	movwf	___ftadd@f1+1
  2847  02BE  0022               	movlb	2	; select bank2
  2848  02BF  0854               	movf	(_FactorD+2)^(0+256),w
  2849  02C0  0020               	movlb	0	; select bank0
  2850  02C1  00DD               	movwf	___ftadd@f1+2
  2851  02C2  0021               	movlb	1	; select bank1
  2852  02C3  0856               	movf	_main$887^(0+128),w
  2853  02C4  0020               	movlb	0	; select bank0
  2854  02C5  00DE               	movwf	___ftadd@f2
  2855  02C6  0021               	movlb	1	; select bank1
  2856  02C7  0857               	movf	(_main$887+1)^(0+128),w
  2857  02C8  0020               	movlb	0	; select bank0
  2858  02C9  00DF               	movwf	___ftadd@f2+1
  2859  02CA  0021               	movlb	1	; select bank1
  2860  02CB  0858               	movf	(_main$887+2)^(0+128),w
  2861  02CC  0020               	movlb	0	; select bank0
  2862  02CD  00E0               	movwf	___ftadd@f2+2
  2863  02CE  318E  2601  3180   	fcall	___ftadd
  2864  02D1  0020               	movlb	0	; select bank0
  2865  02D2  085B               	movf	?___ftadd,w
  2866  02D3  0022               	movlb	2	; select bank2
  2867  02D4  00AF               	movwf	_TemporC2^(0+256)
  2868  02D5  0020               	movlb	0	; select bank0
  2869  02D6  085C               	movf	?___ftadd+1,w
  2870  02D7  0022               	movlb	2	; select bank2
  2871  02D8  00B0               	movwf	(_TemporC2+1)^(0+256)
  2872  02D9  0020               	movlb	0	; select bank0
  2873  02DA  085D               	movf	?___ftadd+2,w
  2874  02DB  0022               	movlb	2	; select bank2
  2875  02DC  00B1               	movwf	(_TemporC2+2)^(0+256)
  2876                           
  2877                           ;main.c: 187: TempDIFF=(TemporC2-TemporC1+6)*100;
  2878  02DD  082F               	movf	_TemporC2^(0+256),w
  2879  02DE  0020               	movlb	0	; select bank0
  2880  02DF  00DB               	movwf	___ftadd@f1
  2881  02E0  0022               	movlb	2	; select bank2
  2882  02E1  0830               	movf	(_TemporC2+1)^(0+256),w
  2883  02E2  0020               	movlb	0	; select bank0
  2884  02E3  00DC               	movwf	___ftadd@f1+1
  2885  02E4  0022               	movlb	2	; select bank2
  2886  02E5  0831               	movf	(_TemporC2+2)^(0+256),w
  2887  02E6  0020               	movlb	0	; select bank0
  2888  02E7  00DD               	movwf	___ftadd@f1+2
  2889  02E8  0022               	movlb	2	; select bank2
  2890  02E9  0832               	movf	_TemporC1^(0+256),w
  2891  02EA  0020               	movlb	0	; select bank0
  2892  02EB  00C8               	movwf	___ftneg@f1
  2893  02EC  0022               	movlb	2	; select bank2
  2894  02ED  0833               	movf	(_TemporC1+1)^(0+256),w
  2895  02EE  0020               	movlb	0	; select bank0
  2896  02EF  00C9               	movwf	___ftneg@f1+1
  2897  02F0  0022               	movlb	2	; select bank2
  2898  02F1  0834               	movf	(_TemporC1+2)^(0+256),w
  2899  02F2  0020               	movlb	0	; select bank0
  2900  02F3  00CA               	movwf	___ftneg@f1+2
  2901  02F4  3196  266B  3180   	fcall	___ftneg
  2902  02F7  0020               	movlb	0	; select bank0
  2903  02F8  0848               	movf	?___ftneg,w
  2904  02F9  00DE               	movwf	___ftadd@f2
  2905  02FA  0849               	movf	?___ftneg+1,w
  2906  02FB  00DF               	movwf	___ftadd@f2+1
  2907  02FC  084A               	movf	?___ftneg+2,w
  2908  02FD  00E0               	movwf	___ftadd@f2+2
  2909  02FE  318E  2601  3180   	fcall	___ftadd
  2910  0301  0020               	movlb	0	; select bank0
  2911  0302  085B               	movf	?___ftadd,w
  2912  0303  0021               	movlb	1	; select bank1
  2913  0304  00CA               	movwf	_main$888^(0+128)
  2914  0305  0020               	movlb	0	; select bank0
  2915  0306  085C               	movf	?___ftadd+1,w
  2916  0307  0021               	movlb	1	; select bank1
  2917  0308  00CB               	movwf	(_main$888+1)^(0+128)
  2918  0309  0020               	movlb	0	; select bank0
  2919  030A  085D               	movf	?___ftadd+2,w
  2920  030B  0021               	movlb	1	; select bank1
  2921  030C  00CC               	movwf	(_main$888+2)^(0+128)
  2922                           
  2923                           ;main.c: 187: TempDIFF=(TemporC2-TemporC1+6)*100;
  2924  030D  3000               	movlw	0
  2925  030E  0020               	movlb	0	; select bank0
  2926  030F  00CB               	movwf	___ftmul@f1
  2927  0310  30C8               	movlw	200
  2928  0311  00CC               	movwf	___ftmul@f1+1
  2929  0312  3042               	movlw	66
  2930  0313  00CD               	movwf	___ftmul@f1+2
  2931  0314  3000               	movlw	0
  2932  0315  00DB               	movwf	___ftadd@f1
  2933  0316  30C0               	movlw	192
  2934  0317  00DC               	movwf	___ftadd@f1+1
  2935  0318  3040               	movlw	64
  2936  0319  00DD               	movwf	___ftadd@f1+2
  2937  031A  0021               	movlb	1	; select bank1
  2938  031B  084A               	movf	_main$888^(0+128),w
  2939  031C  0020               	movlb	0	; select bank0
  2940  031D  00DE               	movwf	___ftadd@f2
  2941  031E  0021               	movlb	1	; select bank1
  2942  031F  084B               	movf	(_main$888+1)^(0+128),w
  2943  0320  0020               	movlb	0	; select bank0
  2944  0321  00DF               	movwf	___ftadd@f2+1
  2945  0322  0021               	movlb	1	; select bank1
  2946  0323  084C               	movf	(_main$888+2)^(0+128),w
  2947  0324  0020               	movlb	0	; select bank0
  2948  0325  00E0               	movwf	___ftadd@f2+2
  2949  0326  318E  2601  3180   	fcall	___ftadd
  2950  0329  0020               	movlb	0	; select bank0
  2951  032A  085B               	movf	?___ftadd,w
  2952  032B  00CE               	movwf	___ftmul@f2
  2953  032C  085C               	movf	?___ftadd+1,w
  2954  032D  00CF               	movwf	___ftmul@f2+1
  2955  032E  085D               	movf	?___ftadd+2,w
  2956  032F  00D0               	movwf	___ftmul@f2+2
  2957  0330  318C  2481  3180   	fcall	___ftmul
  2958  0333  0020               	movlb	0	; select bank0
  2959  0334  084B               	movf	?___ftmul,w
  2960  0335  0022               	movlb	2	; select bank2
  2961  0336  00AC               	movwf	_TempDIFF^(0+256)
  2962  0337  0020               	movlb	0	; select bank0
  2963  0338  084C               	movf	?___ftmul+1,w
  2964  0339  0022               	movlb	2	; select bank2
  2965  033A  00AD               	movwf	(_TempDIFF+1)^(0+256)
  2966  033B  0020               	movlb	0	; select bank0
  2967  033C  084D               	movf	?___ftmul+2,w
  2968  033D  0022               	movlb	2	; select bank2
  2969  033E  00AE               	movwf	(_TempDIFF+2)^(0+256)
  2970                           
  2971                           ;main.c: 191: TempDIFF *= 10000;
  2972  033F  3040               	movlw	64
  2973  0340  0020               	movlb	0	; select bank0
  2974  0341  00CB               	movwf	___ftmul@f1
  2975  0342  301C               	movlw	28
  2976  0343  00CC               	movwf	___ftmul@f1+1
  2977  0344  3046               	movlw	70
  2978  0345  00CD               	movwf	___ftmul@f1+2
  2979  0346  0022               	movlb	2	; select bank2
  2980  0347  082C               	movf	_TempDIFF^(0+256),w
  2981  0348  0020               	movlb	0	; select bank0
  2982  0349  00CE               	movwf	___ftmul@f2
  2983  034A  0022               	movlb	2	; select bank2
  2984  034B  082D               	movf	(_TempDIFF+1)^(0+256),w
  2985  034C  0020               	movlb	0	; select bank0
  2986  034D  00CF               	movwf	___ftmul@f2+1
  2987  034E  0022               	movlb	2	; select bank2
  2988  034F  082E               	movf	(_TempDIFF+2)^(0+256),w
  2989  0350  0020               	movlb	0	; select bank0
  2990  0351  00D0               	movwf	___ftmul@f2+2
  2991  0352  318C  2481  3180   	fcall	___ftmul
  2992  0355  0020               	movlb	0	; select bank0
  2993  0356  084B               	movf	?___ftmul,w
  2994  0357  0022               	movlb	2	; select bank2
  2995  0358  00AC               	movwf	_TempDIFF^(0+256)
  2996  0359  0020               	movlb	0	; select bank0
  2997  035A  084C               	movf	?___ftmul+1,w
  2998  035B  0022               	movlb	2	; select bank2
  2999  035C  00AD               	movwf	(_TempDIFF+1)^(0+256)
  3000  035D  0020               	movlb	0	; select bank0
  3001  035E  084D               	movf	?___ftmul+2,w
  3002  035F  0022               	movlb	2	; select bank2
  3003  0360  00AE               	movwf	(_TempDIFF+2)^(0+256)
  3004                           
  3005                           ;main.c: 192: temp = (double)TempDIFF;
  3006  0361  082C               	movf	_TempDIFF^(0+256),w
  3007  0362  0021               	movlb	1	; select bank1
  3008  0363  00E2               	movwf	_temp^(0+128)
  3009  0364  0022               	movlb	2	; select bank2
  3010  0365  082D               	movf	(_TempDIFF+1)^(0+256),w
  3011  0366  0021               	movlb	1	; select bank1
  3012  0367  00E3               	movwf	(_temp+1)^(0+128)
  3013  0368  0022               	movlb	2	; select bank2
  3014  0369  082E               	movf	(_TempDIFF+2)^(0+256),w
  3015  036A  0021               	movlb	1	; select bank1
  3016  036B  00E4               	movwf	(_temp+2)^(0+128)
  3017                           
  3018                           ;main.c: 194: tens = temp/100000;
  3019  036C  0862               	movf	_temp^(0+128),w
  3020  036D  0020               	movlb	0	; select bank0
  3021  036E  00A5               	movwf	___ftdiv@f1
  3022  036F  0021               	movlb	1	; select bank1
  3023  0370  0863               	movf	(_temp+1)^(0+128),w
  3024  0371  0020               	movlb	0	; select bank0
  3025  0372  00A6               	movwf	___ftdiv@f1+1
  3026  0373  0021               	movlb	1	; select bank1
  3027  0374  0864               	movf	(_temp+2)^(0+128),w
  3028  0375  0020               	movlb	0	; select bank0
  3029  0376  00A7               	movwf	___ftdiv@f1+2
  3030  0377  3050               	movlw	80
  3031  0378  00A2               	movwf	___ftdiv@f2
  3032  0379  30C3               	movlw	195
  3033  037A  00A3               	movwf	___ftdiv@f2+1
  3034  037B  3047               	movlw	71
  3035  037C  00A4               	movwf	___ftdiv@f2+2
  3036  037D  318B  23D8  3180   	fcall	___ftdiv
  3037  0380  0020               	movlb	0	; select bank0
  3038  0381  0822               	movf	?___ftdiv,w
  3039  0382  00B2               	movwf	___fttol@f1
  3040  0383  0823               	movf	?___ftdiv+1,w
  3041  0384  00B3               	movwf	___fttol@f1+1
  3042  0385  0824               	movf	?___ftdiv+2,w
  3043  0386  00B4               	movwf	___fttol@f1+2
  3044  0387  318A  2226  3180   	fcall	___fttol
  3045  038A  0020               	movlb	0	; select bank0
  3046  038B  0833               	movf	?___fttol+1,w
  3047  038C  0021               	movlb	1	; select bank1
  3048  038D  00EA               	movwf	(_tens+1)^(0+128)
  3049  038E  0020               	movlb	0	; select bank0
  3050  038F  0832               	movf	?___fttol,w
  3051  0390  0021               	movlb	1	; select bank1
  3052  0391  00E9               	movwf	_tens^(0+128)
  3053                           
  3054                           ;main.c: 195: remainder = temp - tens*100000;
  3055  0392  0862               	movf	_temp^(0+128),w
  3056  0393  0020               	movlb	0	; select bank0
  3057  0394  00DB               	movwf	___ftadd@f1
  3058  0395  0021               	movlb	1	; select bank1
  3059  0396  0863               	movf	(_temp+1)^(0+128),w
  3060  0397  0020               	movlb	0	; select bank0
  3061  0398  00DC               	movwf	___ftadd@f1+1
  3062  0399  0021               	movlb	1	; select bank1
  3063  039A  0864               	movf	(_temp+2)^(0+128),w
  3064  039B  0020               	movlb	0	; select bank0
  3065  039C  00DD               	movwf	___ftadd@f1+2
  3066  039D  3000               	movlw	0
  3067  039E  00F8               	movwf	___lmul@multiplicand+3
  3068  039F  3001               	movlw	1
  3069  03A0  00F7               	movwf	___lmul@multiplicand+2
  3070  03A1  3086               	movlw	134
  3071  03A2  00F6               	movwf	___lmul@multiplicand+1
  3072  03A3  30A0               	movlw	160
  3073  03A4  00F5               	movwf	___lmul@multiplicand
  3074  03A5  0021               	movlb	1	; select bank1
  3075  03A6  0869               	movf	_tens^(0+128),w
  3076  03A7  00F1               	movwf	___lmul@multiplier
  3077  03A8  086A               	movf	(_tens+1)^(0+128),w
  3078  03A9  00F2               	movwf	___lmul@multiplier+1
  3079  03AA  0D89               	rlf	9,f
  3080  03AB  3B89               	subwfb	9,f
  3081  03AC  0989               	comf	9,f
  3082  03AD  00F3               	movwf	___lmul@multiplier+2
  3083  03AE  00F4               	movwf	___lmul@multiplier+3
  3084  03AF  3197  279D  3180   	fcall	___lmul
  3085  03B2  0874               	movf	?___lmul+3,w
  3086  03B3  0020               	movlb	0	; select bank0
  3087  03B4  00C3               	movwf	___altoft@c+3
  3088  03B5  0873               	movf	?___lmul+2,w
  3089  03B6  00C2               	movwf	___altoft@c+2
  3090  03B7  0872               	movf	?___lmul+1,w
  3091  03B8  00C1               	movwf	___altoft@c+1
  3092  03B9  0871               	movf	?___lmul,w
  3093  03BA  00C0               	movwf	___altoft@c
  3094  03BB  3188  2098  3180   	fcall	___altoft
  3095  03BE  0020               	movlb	0	; select bank0
  3096  03BF  0840               	movf	?___altoft,w
  3097  03C0  00C8               	movwf	___ftneg@f1
  3098  03C1  0841               	movf	?___altoft+1,w
  3099  03C2  00C9               	movwf	___ftneg@f1+1
  3100  03C3  0842               	movf	?___altoft+2,w
  3101  03C4  00CA               	movwf	___ftneg@f1+2
  3102  03C5  3196  266B  3180   	fcall	___ftneg
  3103  03C8  0020               	movlb	0	; select bank0
  3104  03C9  0848               	movf	?___ftneg,w
  3105  03CA  00DE               	movwf	___ftadd@f2
  3106  03CB  0849               	movf	?___ftneg+1,w
  3107  03CC  00DF               	movwf	___ftadd@f2+1
  3108  03CD  084A               	movf	?___ftneg+2,w
  3109  03CE  00E0               	movwf	___ftadd@f2+2
  3110  03CF  318E  2601  3180   	fcall	___ftadd
  3111  03D2  0020               	movlb	0	; select bank0
  3112  03D3  085B               	movf	?___ftadd,w
  3113  03D4  0022               	movlb	2	; select bank2
  3114  03D5  00BE               	movwf	_remainder^(0+256)
  3115  03D6  0020               	movlb	0	; select bank0
  3116  03D7  085C               	movf	?___ftadd+1,w
  3117  03D8  0022               	movlb	2	; select bank2
  3118  03D9  00BF               	movwf	(_remainder+1)^(0+256)
  3119  03DA  0020               	movlb	0	; select bank0
  3120  03DB  085D               	movf	?___ftadd+2,w
  3121  03DC  0022               	movlb	2	; select bank2
  3122  03DD  00C0               	movwf	(_remainder+2)^(0+256)
  3123                           
  3124                           ;main.c: 196: units = remainder/10000;
  3125  03DE  083E               	movf	_remainder^(0+256),w
  3126  03DF  0020               	movlb	0	; select bank0
  3127  03E0  00A5               	movwf	___ftdiv@f1
  3128  03E1  0022               	movlb	2	; select bank2
  3129  03E2  083F               	movf	(_remainder+1)^(0+256),w
  3130  03E3  0020               	movlb	0	; select bank0
  3131  03E4  00A6               	movwf	___ftdiv@f1+1
  3132  03E5  0022               	movlb	2	; select bank2
  3133  03E6  0840               	movf	(_remainder+2)^(0+256),w
  3134  03E7  0020               	movlb	0	; select bank0
  3135  03E8  00A7               	movwf	___ftdiv@f1+2
  3136  03E9  3040               	movlw	64
  3137  03EA  00A2               	movwf	___ftdiv@f2
  3138  03EB  301C               	movlw	28
  3139  03EC  00A3               	movwf	___ftdiv@f2+1
  3140  03ED  3046               	movlw	70
  3141  03EE  00A4               	movwf	___ftdiv@f2+2
  3142  03EF  318B  23D8  3180   	fcall	___ftdiv
  3143  03F2  0020               	movlb	0	; select bank0
  3144  03F3  0822               	movf	?___ftdiv,w
  3145  03F4  00B2               	movwf	___fttol@f1
  3146  03F5  0823               	movf	?___ftdiv+1,w
  3147  03F6  00B3               	movwf	___fttol@f1+1
  3148  03F7  0824               	movf	?___ftdiv+2,w
  3149  03F8  00B4               	movwf	___fttol@f1+2
  3150  03F9  318A  2226  3180   	fcall	___fttol
  3151  03FC  0020               	movlb	0	; select bank0
  3152  03FD  0833               	movf	?___fttol+1,w
  3153  03FE  0021               	movlb	1	; select bank1
  3154  03FF  00E8               	movwf	(_units+1)^(0+128)
  3155  0400  0020               	movlb	0	; select bank0
  3156  0401  0832               	movf	?___fttol,w
  3157  0402  0021               	movlb	1	; select bank1
  3158  0403  00E7               	movwf	_units^(0+128)
  3159                           
  3160                           ;main.c: 205: sprintf(str8,"%d%d", tens,units );
  3161  0404  30A4               	movlw	low (STR_6| (0+32768))
  3162  0405  0020               	movlb	0	; select bank0
  3163  0406  00AF               	movwf	sprintf@f
  3164  0407  3098               	movlw	high (STR_6| (0+32768))
  3165  0408  00B0               	movwf	sprintf@f+1
  3166  0409  0021               	movlb	1	; select bank1
  3167  040A  086A               	movf	(_tens+1)^(0+128),w
  3168  040B  0020               	movlb	0	; select bank0
  3169  040C  00B2               	movwf	?_sprintf+3
  3170  040D  0021               	movlb	1	; select bank1
  3171  040E  0869               	movf	_tens^(0+128),w
  3172  040F  0020               	movlb	0	; select bank0
  3173  0410  00B1               	movwf	?_sprintf+2
  3174  0411  0021               	movlb	1	; select bank1
  3175  0412  0868               	movf	(_units+1)^(0+128),w
  3176  0413  0020               	movlb	0	; select bank0
  3177  0414  00B4               	movwf	?_sprintf+5
  3178  0415  0021               	movlb	1	; select bank1
  3179  0416  0867               	movf	_units^(0+128),w
  3180  0417  0020               	movlb	0	; select bank0
  3181  0418  00B3               	movwf	?_sprintf+4
  3182  0419  30E3               	movlw	(low (_str8| (0+256)))& (0+255)
  3183  041A  3197  2729  3180   	fcall	_sprintf
  3184                           
  3185                           ;main.c: 207: char *c = str8;
  3186  041D  30E3               	movlw	(low (_str8| (0+256)))& (0+255)
  3187  041E  0021               	movlb	1	; select bank1
  3188  041F  00C6               	movwf	??_main^(0+128)
  3189  0420  0846               	movf	??_main^(0+128),w
  3190  0421  00DB               	movwf	main@c^(0+128)
  3191  0422                     l2923:	
  3192                           ;main.c: 208: for( ; *c ; c++ )
  3193                           
  3194  0422  085B               	movf	main@c^(0+128),w
  3195  0423  0086               	movwf	6
  3196  0424  3001               	movlw	1	; select bank2/3
  3197  0425  0087               	movwf	7
  3198  0426  0801               	movf	1,w
  3199  0427  1903               	btfsc	3,2
  3200  0428  2C37               	goto	l2925
  3201                           
  3202                           ;main.c: 209: {
  3203                           ;main.c: 210: sendChar( *c );
  3204  0429  085B               	movf	main@c^(0+128),w
  3205  042A  0086               	movwf	6
  3206  042B  3001               	movlw	1	; select bank2/3
  3207  042C  0087               	movwf	7
  3208  042D  0801               	movf	1,w
  3209  042E  3186  26C7  3180   	fcall	_sendChar
  3210  0431  3001               	movlw	1
  3211  0432  0021               	movlb	1	; select bank1
  3212  0433  00C6               	movwf	??_main^(0+128)
  3213  0434  0846               	movf	??_main^(0+128),w
  3214  0435  07DB               	addwf	main@c^(0+128),f
  3215  0436  2C22               	goto	l2923
  3216  0437                     l2925:	
  3217                           
  3218                           ;main.c: 212: }
  3219                           ;main.c: 215: if (sleep==1)
  3220  0437  0365               	decf	_sleep^(0+128),w
  3221  0438  0466               	iorwf	(_sleep+1)^(0+128),w
  3222  0439  1D03               	btfss	3,2
  3223  043A  2C3D               	goto	l2929
  3224  043B  0063               	sleep	;# 
  3225                           
  3226                           ;main.c: 218: }
  3227  043C  2862               	goto	l2865
  3228  043D                     l2929:	
  3229                           
  3230                           ;main.c: 219: else
  3231                           ;main.c: 220: {
  3232                           ;main.c: 221: int waitind;
  3233                           ;main.c: 222: for(waitind = 0; waitind<0; waitind++){
  3234  043D  0021               	movlb	1	; select bank1
  3235  043E  01D9               	clrf	main@waitind^(0+128)
  3236  043F  01DA               	clrf	(main@waitind+1)^(0+128)
  3237  0440                     L1:	
  3238  0440  1FDA               	btfss	(main@waitind+1)^(0+128),7
  3239  0441  2862               	goto	l2865
  3240                           
  3241                           ;main.c: 223: __nop();
  3242  0442  0000               	nop
  3243                           
  3244                           ;main.c: 224: __nop();
  3245  0443  0000               	nop
  3246  0444  3001               	movlw	1
  3247  0445  0021               	movlb	1	; select bank1
  3248  0446  07D9               	addwf	main@waitind^(0+128),f
  3249  0447  3000               	movlw	0
  3250  0448  3DDA               	addwfc	(main@waitind+1)^(0+128),f
  3251  0449  2C40               	goto	L1
  3252  044A                     __end_of_main:	
  3253                           
  3254                           	psect	text1
  3255  1729                     __ptext1:	
  3256 ;; *************** function _sprintf *****************
  3257 ;; Defined at:
  3258 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  wh              1    wreg     PTR unsigned char 
  3261 ;;		 -> str8(6), 
  3262 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  3263 ;;		 -> STR_6(5), 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  3266 ;;		 -> str8(6), 
  3267 ;;  pb              3   24[BANK0 ] struct __prbuf
  3268 ;;  ap              1   23[BANK0 ] PTR void [1]
  3269 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  2   15[BANK0 ] int 
  3272 ;; Registers used:
  3273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3279 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;Total ram usage:       12 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    6
  3286 ;; This function calls:
  3287 ;;		__doprnt
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           
  3294                           ;psect for function _sprintf
  3295  1729                     _sprintf:	
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3299                           ;sprintf@wh stored from wreg
  3300  1729  0020               	movlb	0	; select bank0
  3301  172A  00B6               	movwf	sprintf@wh
  3302  172B  0836               	movf	sprintf@wh,w
  3303  172C  00B5               	movwf	??_sprintf
  3304  172D  0835               	movf	??_sprintf,w
  3305  172E  00B8               	movwf	sprintf@pb
  3306  172F  01B9               	clrf	low ((sprintf@pb| 0+1))
  3307  1730  01BA               	clrf	(low ((sprintf@pb| 0+1))+1)
  3308  1731  3031               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3309  1732  00B5               	movwf	??_sprintf
  3310  1733  0835               	movf	??_sprintf,w
  3311  1734  00B7               	movwf	sprintf@ap
  3312  1735  0830               	movf	sprintf@f+1,w
  3313  1736  00A3               	movwf	__doprnt@f+1
  3314  1737  082F               	movf	sprintf@f,w
  3315  1738  00A2               	movwf	__doprnt@f
  3316  1739  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  3317  173A  00B5               	movwf	??_sprintf
  3318  173B  0835               	movf	??_sprintf,w
  3319  173C  00A4               	movwf	__doprnt@ap
  3320  173D  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  3321  173E  3185  25A8         	fcall	__doprnt
  3322  1740  0020               	movlb	0	; select bank0
  3323  1741  0838               	movf	sprintf@pb,w
  3324  1742  0086               	movwf	6
  3325  1743  3001               	movlw	1	; select bank2/3
  3326  1744  0087               	movwf	7
  3327  1745  0181               	clrf	1
  3328  1746  0008               	return
  3329  1747                     __end_of_sprintf:	
  3330                           ;	Return value of _sprintf is never used
  3331                           
  3332                           
  3333                           	psect	text2
  3334  06C7                     __ptext2:	
  3335 ;; *************** function _sendChar *****************
  3336 ;; Defined at:
  3337 ;;		line 338 in file "main.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  a               1    wreg     unsigned char 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  a               1    9[COMMON] unsigned char 
  3342 ;;  i               2    7[COMMON] int 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;Total ram usage:        4 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    5
  3359 ;; This function calls:
  3360 ;;		_dit_dah
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _sendChar
  3368  06C7                     _sendChar:	
  3369                           
  3370                           ;incstack = 0
  3371                           ; Regs used in _sendChar: [wreg+status,2+status,0+pclath+cstack]
  3372                           ;sendChar@a stored from wreg
  3373  06C7  00F9               	movwf	sendChar@a
  3374                           
  3375                           ;main.c: 340: int i;
  3376                           ;main.c: 341: if (a=='0'){
  3377  06C8  3030               	movlw	48
  3378  06C9  0679               	xorwf	sendChar@a,w
  3379  06CA  1D03               	btfss	3,2
  3380  06CB  2ECE               	goto	l2599
  3381                           
  3382                           ;main.c: 342: dit_dah(3); dit_dah(3); dit_dah(3); dit_dah(3); dit_dah(3);}
  3383  06CC  3003               	movlw	3
  3384  06CD  2ED3               	goto	L23
  3385  06CE                     l2599:	
  3386                           
  3387                           ;main.c: 343: else if (a=='1'){
  3388  06CE  3031               	movlw	49
  3389  06CF  0679               	xorwf	sendChar@a,w
  3390  06D0  1D03               	btfss	3,2
  3391  06D1  2EDB               	goto	l2603
  3392                           
  3393                           ;main.c: 344: dit_dah(1);dit_dah(3); dit_dah(3); dit_dah(3); dit_dah(3);}
  3394  06D2  3001               	movlw	1
  3395  06D3                     L23:	
  3396  06D3  00F1               	movwf	dit_dah@index
  3397  06D4  3000               	movlw	0
  3398  06D5  00F2               	movwf	dit_dah@index+1
  3399  06D6  318A  22AD  3186   	fcall	_dit_dah
  3400  06D9  3003               	movlw	3
  3401  06DA  2EE7               	goto	L18
  3402  06DB                     l2603:	
  3403                           
  3404                           ;main.c: 345: else if (a=='2'){
  3405  06DB  3032               	movlw	50
  3406  06DC  0679               	xorwf	sendChar@a,w
  3407  06DD  1D03               	btfss	3,2
  3408  06DE  2EEF               	goto	l2607
  3409                           
  3410                           ;main.c: 346: dit_dah(1);dit_dah(1); dit_dah(3); dit_dah(3); dit_dah(3);}
  3411  06DF  3001               	movlw	1
  3412  06E0  00F1               	movwf	dit_dah@index
  3413  06E1  3000               	movlw	0
  3414  06E2  00F2               	movwf	dit_dah@index+1
  3415  06E3  318A  22AD  3186   	fcall	_dit_dah
  3416  06E6  3001               	movlw	1
  3417  06E7                     L18:	
  3418  06E7  00F1               	movwf	dit_dah@index
  3419  06E8  3000               	movlw	0
  3420  06E9  00F2               	movwf	dit_dah@index+1
  3421  06EA  318A  22AD  3186   	fcall	_dit_dah
  3422  06ED  3003               	movlw	3
  3423  06EE  2F02               	goto	L12
  3424  06EF                     l2607:	
  3425                           
  3426                           ;main.c: 347: else if (a=='3'){
  3427  06EF  3033               	movlw	51
  3428  06F0  0679               	xorwf	sendChar@a,w
  3429  06F1  1D03               	btfss	3,2
  3430  06F2  2F0A               	goto	l2611
  3431                           
  3432                           ;main.c: 348: dit_dah(1);dit_dah(1); dit_dah(1); dit_dah(3); dit_dah(3);}
  3433  06F3  3001               	movlw	1
  3434  06F4  00F1               	movwf	dit_dah@index
  3435  06F5  3000               	movlw	0
  3436  06F6  00F2               	movwf	dit_dah@index+1
  3437  06F7  318A  22AD  3186   	fcall	_dit_dah
  3438  06FA  3001               	movlw	1
  3439  06FB  00F1               	movwf	dit_dah@index
  3440  06FC  3000               	movlw	0
  3441  06FD  00F2               	movwf	dit_dah@index+1
  3442  06FE  318A  22AD  3186   	fcall	_dit_dah
  3443  0701  3001               	movlw	1
  3444  0702                     L12:	
  3445  0702  00F1               	movwf	dit_dah@index
  3446  0703  3000               	movlw	0
  3447  0704  00F2               	movwf	dit_dah@index+1
  3448  0705  318A  22AD  3186   	fcall	_dit_dah
  3449  0708  3003               	movlw	3
  3450  0709  2FAE               	goto	L2
  3451  070A                     l2611:	
  3452                           
  3453                           ;main.c: 349: else if (a=='4'){
  3454  070A  3034               	movlw	52
  3455  070B  0679               	xorwf	sendChar@a,w
  3456  070C  1903               	btfsc	3,2
  3457  070D  2F7D               	goto	L16
  3458                           
  3459                           ;main.c: 351: else if (a=='5'){
  3460                           
  3461                           ;main.c: 350: dit_dah(1);dit_dah(1); dit_dah(1); dit_dah(1); dit_dah(3);}
  3462  070E  3035               	movlw	53
  3463  070F  0679               	xorwf	sendChar@a,w
  3464  0710  1D03               	btfss	3,2
  3465  0711  2F14               	goto	l2619
  3466                           
  3467                           ;main.c: 352: dit_dah(1);dit_dah(1); dit_dah(1);dit_dah(1); dit_dah(1);}
  3468  0712  3001               	movlw	1
  3469  0713  2F19               	goto	L26
  3470  0714                     l2619:	
  3471                           
  3472                           ;main.c: 353: else if (a=='6'){
  3473  0714  3036               	movlw	54
  3474  0715  0679               	xorwf	sendChar@a,w
  3475  0716  1D03               	btfss	3,2
  3476  0717  2F21               	goto	l2623
  3477                           
  3478                           ;main.c: 354: dit_dah(3);dit_dah(1); dit_dah(1);dit_dah(1); dit_dah(1);}
  3479  0718  3003               	movlw	3
  3480  0719                     L26:	
  3481  0719  00F1               	movwf	dit_dah@index
  3482  071A  3000               	movlw	0
  3483  071B  00F2               	movwf	dit_dah@index+1
  3484  071C  318A  22AD  3186   	fcall	_dit_dah
  3485  071F  3001               	movlw	1
  3486  0720  2F2D               	goto	L24
  3487  0721                     l2623:	
  3488                           
  3489                           ;main.c: 355: else if (a=='7'){
  3490  0721  3037               	movlw	55
  3491  0722  0679               	xorwf	sendChar@a,w
  3492  0723  1D03               	btfss	3,2
  3493  0724  2F35               	goto	l2627
  3494                           
  3495                           ;main.c: 356: dit_dah(3);dit_dah(3); dit_dah(1);dit_dah(1); dit_dah(1);}
  3496  0725  3003               	movlw	3
  3497  0726  00F1               	movwf	dit_dah@index
  3498  0727  3000               	movlw	0
  3499  0728  00F2               	movwf	dit_dah@index+1
  3500  0729  318A  22AD  3186   	fcall	_dit_dah
  3501  072C  3003               	movlw	3
  3502  072D                     L24:	
  3503  072D  00F1               	movwf	dit_dah@index
  3504  072E  3000               	movlw	0
  3505  072F  00F2               	movwf	dit_dah@index+1
  3506  0730  318A  22AD  3186   	fcall	_dit_dah
  3507  0733  3001               	movlw	1
  3508  0734  2F48               	goto	L20
  3509  0735                     l2627:	
  3510                           
  3511                           ;main.c: 357: else if (a=='8'){
  3512  0735  3038               	movlw	56
  3513  0736  0679               	xorwf	sendChar@a,w
  3514  0737  1D03               	btfss	3,2
  3515  0738  2F50               	goto	l2631
  3516                           
  3517                           ;main.c: 358: dit_dah(3);dit_dah(3); dit_dah(3);dit_dah(1); dit_dah(1);}
  3518  0739  3003               	movlw	3
  3519  073A  00F1               	movwf	dit_dah@index
  3520  073B  3000               	movlw	0
  3521  073C  00F2               	movwf	dit_dah@index+1
  3522  073D  318A  22AD  3186   	fcall	_dit_dah
  3523  0740  3003               	movlw	3
  3524  0741  00F1               	movwf	dit_dah@index
  3525  0742  3000               	movlw	0
  3526  0743  00F2               	movwf	dit_dah@index+1
  3527  0744  318A  22AD  3186   	fcall	_dit_dah
  3528  0747  3003               	movlw	3
  3529  0748                     L20:	
  3530  0748  00F1               	movwf	dit_dah@index
  3531  0749  3000               	movlw	0
  3532  074A  00F2               	movwf	dit_dah@index+1
  3533  074B  318A  22AD  3186   	fcall	_dit_dah
  3534  074E  3001               	movlw	1
  3535  074F  2F6A               	goto	L14
  3536  0750                     l2631:	
  3537                           
  3538                           ;main.c: 359: else if (a=='9'){
  3539  0750  3039               	movlw	57
  3540  0751  0679               	xorwf	sendChar@a,w
  3541  0752  1D03               	btfss	3,2
  3542  0753  2F72               	goto	l2635
  3543                           
  3544                           ;main.c: 360: dit_dah(3);dit_dah(3); dit_dah(3);dit_dah(3); dit_dah(1);}
  3545  0754  3003               	movlw	3
  3546  0755  00F1               	movwf	dit_dah@index
  3547  0756  3000               	movlw	0
  3548  0757  00F2               	movwf	dit_dah@index+1
  3549  0758  318A  22AD  3186   	fcall	_dit_dah
  3550  075B  3003               	movlw	3
  3551  075C  00F1               	movwf	dit_dah@index
  3552  075D  3000               	movlw	0
  3553  075E  00F2               	movwf	dit_dah@index+1
  3554  075F  318A  22AD  3186   	fcall	_dit_dah
  3555  0762  3003               	movlw	3
  3556  0763  00F1               	movwf	dit_dah@index
  3557  0764  3000               	movlw	0
  3558  0765  00F2               	movwf	dit_dah@index+1
  3559  0766  318A  22AD  3186   	fcall	_dit_dah
  3560  0769  3003               	movlw	3
  3561  076A                     L14:	
  3562  076A  00F1               	movwf	dit_dah@index
  3563  076B  3000               	movlw	0
  3564  076C  00F2               	movwf	dit_dah@index+1
  3565  076D  318A  22AD  3186   	fcall	_dit_dah
  3566  0770  3001               	movlw	1
  3567  0771  2FB5               	goto	L3
  3568  0772                     l2635:	
  3569                           
  3570                           ;main.c: 361: else if (a=='-'){
  3571  0772  302D               	movlw	45
  3572  0773  0679               	xorwf	sendChar@a,w
  3573  0774  1D03               	btfss	3,2
  3574  0775  2F8D               	goto	l2639
  3575                           
  3576                           ;main.c: 362: dit_dah(3); dit_dah(1); dit_dah(1); dit_dah(1); dit_dah(1); dit_dah(3);
  3577  0776  3003               	movlw	3
  3578  0777  00F1               	movwf	dit_dah@index
  3579  0778  3000               	movlw	0
  3580  0779  00F2               	movwf	dit_dah@index+1
  3581  077A  318A  22AD  3186   	fcall	_dit_dah
  3582  077D                     L16:	
  3583  077D  3001               	movlw	1
  3584  077E  00F1               	movwf	dit_dah@index
  3585  077F  3000               	movlw	0
  3586  0780  00F2               	movwf	dit_dah@index+1
  3587  0781  318A  22AD  3186   	fcall	_dit_dah
  3588  0784  3001               	movlw	1
  3589  0785  00F1               	movwf	dit_dah@index
  3590  0786  3000               	movlw	0
  3591  0787  00F2               	movwf	dit_dah@index+1
  3592  0788  318A  22AD  3186   	fcall	_dit_dah
  3593  078B  3001               	movlw	1
  3594  078C  2FA7               	goto	L7
  3595  078D                     l2639:	
  3596                           ;main.c: 363: }
  3597                           
  3598                           
  3599                           ;main.c: 364: else if (a=='.'){
  3600  078D  302E               	movlw	46
  3601  078E  0679               	xorwf	sendChar@a,w
  3602  078F  1D03               	btfss	3,2
  3603  0790  2FBB               	goto	l2643
  3604                           
  3605                           ;main.c: 365: dit_dah(1);dit_dah(3); dit_dah(1); dit_dah(3); dit_dah(1); dit_dah(3);
  3606  0791  3001               	movlw	1
  3607  0792  00F1               	movwf	dit_dah@index
  3608  0793  3000               	movlw	0
  3609  0794  00F2               	movwf	dit_dah@index+1
  3610  0795  318A  22AD  3186   	fcall	_dit_dah
  3611  0798  3003               	movlw	3
  3612  0799  00F1               	movwf	dit_dah@index
  3613  079A  3000               	movlw	0
  3614  079B  00F2               	movwf	dit_dah@index+1
  3615  079C  318A  22AD  3186   	fcall	_dit_dah
  3616  079F  3001               	movlw	1
  3617  07A0  00F1               	movwf	dit_dah@index
  3618  07A1  3000               	movlw	0
  3619  07A2  00F2               	movwf	dit_dah@index+1
  3620  07A3  318A  22AD  3186   	fcall	_dit_dah
  3621  07A6  3003               	movlw	3
  3622  07A7                     L7:	
  3623  07A7  00F1               	movwf	dit_dah@index
  3624  07A8  3000               	movlw	0
  3625  07A9  00F2               	movwf	dit_dah@index+1
  3626  07AA  318A  22AD  3186   	fcall	_dit_dah
  3627  07AD  3001               	movlw	1
  3628  07AE                     L2:	
  3629  07AE  00F1               	movwf	dit_dah@index
  3630  07AF  3000               	movlw	0
  3631  07B0  00F2               	movwf	dit_dah@index+1
  3632  07B1  318A  22AD  3186   	fcall	_dit_dah
  3633  07B4  3003               	movlw	3
  3634  07B5                     L3:	
  3635  07B5  00F1               	movwf	dit_dah@index
  3636  07B6  3000               	movlw	0
  3637  07B7  00F2               	movwf	dit_dah@index+1
  3638  07B8  318A  22AD  3186   	fcall	_dit_dah
  3639  07BB                     l2643:	
  3640                           
  3641                           ;main.c: 366: }
  3642                           ;main.c: 371: for(i = 0; i < delay; ++i){
  3643  07BB  01F7               	clrf	sendChar@i
  3644  07BC  01F8               	clrf	sendChar@i+1
  3645  07BD                     l313:	
  3646  07BD  0878               	movf	sendChar@i+1,w
  3647  07BE  3A80               	xorlw	128
  3648  07BF  00F6               	movwf	??_sendChar
  3649  07C0  0021               	movlb	1	; select bank1
  3650  07C1  086C               	movf	(_delay+1)^(0+128),w
  3651  07C2  3A80               	xorlw	128
  3652  07C3  0276               	subwf	??_sendChar,w
  3653  07C4  1D03               	skipz
  3654  07C5  2FC8               	goto	u3225
  3655  07C6  086B               	movf	_delay^(0+128),w
  3656  07C7  0277               	subwf	sendChar@i,w
  3657  07C8                     u3225:	
  3658  07C8  1803               	btfsc	3,0
  3659  07C9  2FD0               	goto	l2647
  3660                           
  3661                           ;main.c: 372: __nop();
  3662  07CA  0000               	nop
  3663  07CB  3001               	movlw	1
  3664  07CC  07F7               	addwf	sendChar@i,f
  3665  07CD  3000               	movlw	0
  3666  07CE  3DF8               	addwfc	sendChar@i+1,f
  3667  07CF  2FBD               	goto	l313
  3668  07D0                     l2647:	
  3669                           
  3670                           ;main.c: 374: }
  3671                           ;main.c: 375: for(i = 0; i < delay; ++i){
  3672  07D0  01F7               	clrf	sendChar@i
  3673  07D1  01F8               	clrf	sendChar@i+1
  3674  07D2                     l316:	
  3675  07D2  0878               	movf	sendChar@i+1,w
  3676  07D3  3A80               	xorlw	128
  3677  07D4  00F6               	movwf	??_sendChar
  3678  07D5  0021               	movlb	1	; select bank1
  3679  07D6  086C               	movf	(_delay+1)^(0+128),w
  3680  07D7  3A80               	xorlw	128
  3681  07D8  0276               	subwf	??_sendChar,w
  3682  07D9  1D03               	skipz
  3683  07DA  2FDD               	goto	u3235
  3684  07DB  086B               	movf	_delay^(0+128),w
  3685  07DC  0277               	subwf	sendChar@i,w
  3686  07DD                     u3235:	
  3687  07DD  1803               	btfsc	3,0
  3688  07DE  0008               	return
  3689                           
  3690                           ;main.c: 376: __nop();
  3691  07DF  0000               	nop
  3692  07E0  3001               	movlw	1
  3693  07E1  07F7               	addwf	sendChar@i,f
  3694  07E2  3000               	movlw	0
  3695  07E3  3DF8               	addwfc	sendChar@i+1,f
  3696  07E4  2FD2               	goto	l316
  3697  07E5                     __end_of_sendChar:	
  3698                           
  3699                           	psect	text3
  3700  0AAD                     __ptext3:	
  3701 ;; *************** function _dit_dah *****************
  3702 ;; Defined at:
  3703 ;;		line 280 in file "main.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  index           2    1[COMMON] int 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  i               2    4[COMMON] int 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;Total ram usage:        5 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    4
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_sendChar
  3728 ;;		_key
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function _dit_dah
  3734  0AAD                     _dit_dah:	
  3735                           
  3736                           ;main.c: 283: int i;
  3737                           ;main.c: 284: LATC4=1;
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _dit_dah: [wreg+status,2+status,0]
  3741  0AAD  0022               	movlb	2	; select bank2
  3742  0AAE  160E               	bsf	14,4	;volatile
  3743                           
  3744                           ;main.c: 285: if (index==1)
  3745  0AAF  0371               	decf	dit_dah@index,w
  3746  0AB0  0472               	iorwf	dit_dah@index+1,w
  3747  0AB1  1D03               	btfss	3,2
  3748  0AB2  2ACE               	goto	l2337
  3749                           
  3750                           ;main.c: 286: {
  3751                           ;main.c: 287: for(i = 0; i < delay; ++i)
  3752  0AB3  01F4               	clrf	dit_dah@i
  3753  0AB4  01F5               	clrf	dit_dah@i+1
  3754  0AB5                     l271:	
  3755  0AB5  0875               	movf	dit_dah@i+1,w
  3756  0AB6  3A80               	xorlw	128
  3757  0AB7  00F3               	movwf	??_dit_dah
  3758  0AB8  0021               	movlb	1	; select bank1
  3759  0AB9  086C               	movf	(_delay+1)^(0+128),w
  3760  0ABA  3A80               	xorlw	128
  3761  0ABB  0273               	subwf	??_dit_dah,w
  3762  0ABC  1D03               	skipz
  3763  0ABD  2AC0               	goto	u2745
  3764  0ABE  086B               	movf	_delay^(0+128),w
  3765  0ABF  0274               	subwf	dit_dah@i,w
  3766  0AC0                     u2745:	
  3767  0AC0  1803               	btfsc	3,0
  3768  0AC1  2ACE               	goto	l2337
  3769                           
  3770                           ;main.c: 288: {
  3771                           ;main.c: 289: __nop();
  3772  0AC2  0000               	nop
  3773                           
  3774                           ;main.c: 290: __nop();
  3775  0AC3  0000               	nop
  3776                           
  3777                           ;main.c: 291: __nop();
  3778  0AC4  0000               	nop
  3779                           
  3780                           ;main.c: 292: __nop();
  3781  0AC5  0000               	nop
  3782                           
  3783                           ;main.c: 294: LATC4=~LATC4;
  3784  0AC6  3010               	movlw	16
  3785  0AC7  0022               	movlb	2	; select bank2
  3786  0AC8  068E               	xorwf	14,f
  3787  0AC9  3001               	movlw	1
  3788  0ACA  07F4               	addwf	dit_dah@i,f
  3789  0ACB  3000               	movlw	0
  3790  0ACC  3DF5               	addwfc	dit_dah@i+1,f
  3791  0ACD  2AB5               	goto	l271
  3792  0ACE                     l2337:	
  3793                           
  3794                           ;main.c: 295: }
  3795                           ;main.c: 296: }
  3796                           ;main.c: 297: if(index==3)
  3797  0ACE  3003               	movlw	3
  3798  0ACF  0671               	xorwf	dit_dah@index,w
  3799  0AD0  0472               	iorwf	dit_dah@index+1,w
  3800  0AD1  1D03               	btfss	3,2
  3801  0AD2  2B24               	goto	l274
  3802                           
  3803                           ;main.c: 298: {
  3804                           ;main.c: 299: for(i = 0; i < delay; ++i)
  3805  0AD3  01F4               	clrf	dit_dah@i
  3806  0AD4  01F5               	clrf	dit_dah@i+1
  3807  0AD5                     l275:	
  3808  0AD5  0875               	movf	dit_dah@i+1,w
  3809  0AD6  3A80               	xorlw	128
  3810  0AD7  00F3               	movwf	??_dit_dah
  3811  0AD8  0021               	movlb	1	; select bank1
  3812  0AD9  086C               	movf	(_delay+1)^(0+128),w
  3813  0ADA  3A80               	xorlw	128
  3814  0ADB  0273               	subwf	??_dit_dah,w
  3815  0ADC  1D03               	skipz
  3816  0ADD  2AE0               	goto	u2765
  3817  0ADE  086B               	movf	_delay^(0+128),w
  3818  0ADF  0274               	subwf	dit_dah@i,w
  3819  0AE0                     u2765:	
  3820  0AE0  1803               	btfsc	3,0
  3821  0AE1  2AEE               	goto	l2343
  3822                           
  3823                           ;main.c: 300: {
  3824                           ;main.c: 301: __nop();
  3825  0AE2  0000               	nop
  3826                           
  3827                           ;main.c: 302: __nop();
  3828  0AE3  0000               	nop
  3829                           
  3830                           ;main.c: 303: __nop();
  3831  0AE4  0000               	nop
  3832                           
  3833                           ;main.c: 304: __nop();
  3834  0AE5  0000               	nop
  3835                           
  3836                           ;main.c: 306: LATC4=~LATC4;
  3837  0AE6  3010               	movlw	16
  3838  0AE7  0022               	movlb	2	; select bank2
  3839  0AE8  068E               	xorwf	14,f
  3840  0AE9  3001               	movlw	1
  3841  0AEA  07F4               	addwf	dit_dah@i,f
  3842  0AEB  3000               	movlw	0
  3843  0AEC  3DF5               	addwfc	dit_dah@i+1,f
  3844  0AED  2AD5               	goto	l275
  3845  0AEE                     l2343:	
  3846                           
  3847                           ;main.c: 307: }
  3848                           ;main.c: 308: for(i = 0; i < delay; ++i)
  3849  0AEE  01F4               	clrf	dit_dah@i
  3850  0AEF  01F5               	clrf	dit_dah@i+1
  3851  0AF0                     l278:	
  3852  0AF0  0875               	movf	dit_dah@i+1,w
  3853  0AF1  3A80               	xorlw	128
  3854  0AF2  00F3               	movwf	??_dit_dah
  3855  0AF3  0021               	movlb	1	; select bank1
  3856  0AF4  086C               	movf	(_delay+1)^(0+128),w
  3857  0AF5  3A80               	xorlw	128
  3858  0AF6  0273               	subwf	??_dit_dah,w
  3859  0AF7  1D03               	skipz
  3860  0AF8  2AFB               	goto	u2775
  3861  0AF9  086B               	movf	_delay^(0+128),w
  3862  0AFA  0274               	subwf	dit_dah@i,w
  3863  0AFB                     u2775:	
  3864  0AFB  1803               	btfsc	3,0
  3865  0AFC  2B09               	goto	l2347
  3866                           
  3867                           ;main.c: 309: {
  3868                           ;main.c: 310: __nop();
  3869  0AFD  0000               	nop
  3870                           
  3871                           ;main.c: 311: __nop();
  3872  0AFE  0000               	nop
  3873                           
  3874                           ;main.c: 312: __nop();
  3875  0AFF  0000               	nop
  3876                           
  3877                           ;main.c: 313: __nop();
  3878  0B00  0000               	nop
  3879                           
  3880                           ;main.c: 315: LATC4=~LATC4;
  3881  0B01  3010               	movlw	16
  3882  0B02  0022               	movlb	2	; select bank2
  3883  0B03  068E               	xorwf	14,f
  3884  0B04  3001               	movlw	1
  3885  0B05  07F4               	addwf	dit_dah@i,f
  3886  0B06  3000               	movlw	0
  3887  0B07  3DF5               	addwfc	dit_dah@i+1,f
  3888  0B08  2AF0               	goto	l278
  3889  0B09                     l2347:	
  3890                           
  3891                           ;main.c: 316: }
  3892                           ;main.c: 317: for(i = 0; i < delay; ++i)
  3893  0B09  01F4               	clrf	dit_dah@i
  3894  0B0A  01F5               	clrf	dit_dah@i+1
  3895  0B0B                     l281:	
  3896  0B0B  0875               	movf	dit_dah@i+1,w
  3897  0B0C  3A80               	xorlw	128
  3898  0B0D  00F3               	movwf	??_dit_dah
  3899  0B0E  0021               	movlb	1	; select bank1
  3900  0B0F  086C               	movf	(_delay+1)^(0+128),w
  3901  0B10  3A80               	xorlw	128
  3902  0B11  0273               	subwf	??_dit_dah,w
  3903  0B12  1D03               	skipz
  3904  0B13  2B16               	goto	u2785
  3905  0B14  086B               	movf	_delay^(0+128),w
  3906  0B15  0274               	subwf	dit_dah@i,w
  3907  0B16                     u2785:	
  3908  0B16  1803               	btfsc	3,0
  3909  0B17  2B24               	goto	l274
  3910                           
  3911                           ;main.c: 318: {
  3912                           ;main.c: 319: __nop();
  3913  0B18  0000               	nop
  3914                           
  3915                           ;main.c: 320: __nop();
  3916  0B19  0000               	nop
  3917                           
  3918                           ;main.c: 321: __nop();
  3919  0B1A  0000               	nop
  3920                           
  3921                           ;main.c: 322: __nop();
  3922  0B1B  0000               	nop
  3923                           
  3924                           ;main.c: 324: LATC4=~LATC4;
  3925  0B1C  3010               	movlw	16
  3926  0B1D  0022               	movlb	2	; select bank2
  3927  0B1E  068E               	xorwf	14,f
  3928  0B1F  3001               	movlw	1
  3929  0B20  07F4               	addwf	dit_dah@i,f
  3930  0B21  3000               	movlw	0
  3931  0B22  3DF5               	addwfc	dit_dah@i+1,f
  3932  0B23  2B0B               	goto	l281
  3933  0B24                     l274:	
  3934                           
  3935                           ;main.c: 325: }
  3936                           ;main.c: 327: }
  3937                           ;main.c: 328: LATC4=0;
  3938  0B24  0022               	movlb	2	; select bank2
  3939  0B25  120E               	bcf	14,4	;volatile
  3940                           
  3941                           ;main.c: 329: for(i = 0; i < delay; ++i)
  3942  0B26  01F4               	clrf	dit_dah@i
  3943  0B27  01F5               	clrf	dit_dah@i+1
  3944  0B28                     l284:	
  3945  0B28  0875               	movf	dit_dah@i+1,w
  3946  0B29  3A80               	xorlw	128
  3947  0B2A  00F3               	movwf	??_dit_dah
  3948  0B2B  0021               	movlb	1	; select bank1
  3949  0B2C  086C               	movf	(_delay+1)^(0+128),w
  3950  0B2D  3A80               	xorlw	128
  3951  0B2E  0273               	subwf	??_dit_dah,w
  3952  0B2F  1D03               	skipz
  3953  0B30  2B33               	goto	u2795
  3954  0B31  086B               	movf	_delay^(0+128),w
  3955  0B32  0274               	subwf	dit_dah@i,w
  3956  0B33                     u2795:	
  3957  0B33  1803               	btfsc	3,0
  3958  0B34  0008               	return
  3959                           
  3960                           ;main.c: 330: {
  3961                           ;main.c: 331: __nop();
  3962  0B35  0000               	nop
  3963                           
  3964                           ;main.c: 332: __nop();
  3965  0B36  0000               	nop
  3966                           
  3967                           ;main.c: 333: __nop();
  3968  0B37  0000               	nop
  3969                           
  3970                           ;main.c: 334: __nop();
  3971  0B38  0000               	nop
  3972  0B39  3001               	movlw	1
  3973  0B3A  07F4               	addwf	dit_dah@i,f
  3974  0B3B  3000               	movlw	0
  3975  0B3C  3DF5               	addwfc	dit_dah@i+1,f
  3976  0B3D  2B28               	goto	l284
  3977  0B3E                     __end_of_dit_dah:	
  3978                           
  3979                           	psect	text4
  3980  16BE                     __ptext4:	
  3981 ;; *************** function _printf *****************
  3982 ;; Defined at:
  3983 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  3986 ;;		 -> STR_5(7), 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  pb              3   19[BANK0 ] struct __prbuf
  3989 ;;  ap              1   18[BANK0 ] PTR void [1]
  3990 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  2   15[BANK0 ] int 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4003 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;Total ram usage:        7 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    6
  4007 ;; This function calls:
  4008 ;;		__doprnt
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _printf
  4016  16BE                     _printf:	
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4020  16BE  0020               	movlb	0	; select bank0
  4021  16BF  01B3               	clrf	printf@pb
  4022  16C0  3003               	movlw	low _putch
  4023  16C1  00B4               	movwf	low ((printf@pb| 0+1))
  4024  16C2  3000               	movlw	high _putch
  4025  16C3  00B5               	movwf	(low ((printf@pb| 0+1))+1)
  4026  16C4  3031               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4027  16C5  00B1               	movwf	??_printf
  4028  16C6  0831               	movf	??_printf,w
  4029  16C7  00B2               	movwf	printf@ap
  4030                           
  4031                           ;	Return value of _printf is never used
  4032  16C8  0830               	movf	printf@f+1,w
  4033  16C9  00A3               	movwf	__doprnt@f+1
  4034  16CA  082F               	movf	printf@f,w
  4035  16CB  00A2               	movwf	__doprnt@f
  4036  16CC  3032               	movlw	(low (printf@ap| 0))& (0+255)
  4037  16CD  00B1               	movwf	??_printf
  4038  16CE  0831               	movf	??_printf,w
  4039  16CF  00A4               	movwf	__doprnt@ap
  4040  16D0  3033               	movlw	(low (printf@pb| 0))& (0+255)
  4041  16D1  3185  25A8         	fcall	__doprnt
  4042  16D3  0008               	return
  4043  16D4                     __end_of_printf:	
  4044                           
  4045                           	psect	text5
  4046  05A8                     __ptext5:	
  4047 ;; *************** function __doprnt *****************
  4048 ;; Defined at:
  4049 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  pb              1    wreg     PTR struct __prbuf
  4052 ;;		 -> sprintf@pb(3), printf@pb(3), 
  4053 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  4054 ;;		 -> STR_6(5), STR_5(7), 
  4055 ;;  ap              1    4[BANK0 ] PTR PTR void 
  4056 ;;		 -> sprintf@ap(1), printf@ap(1), 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  pb              1   14[BANK0 ] PTR struct __prbuf
  4059 ;;		 -> sprintf@pb(3), printf@pb(3), 
  4060 ;;  tmpval          4    0        struct .
  4061 ;;  val             2   11[BANK0 ] unsigned int 
  4062 ;;  cp              2    0        PTR const unsigned char 
  4063 ;;  len             2    0        unsigned int 
  4064 ;;  c               1   13[BANK0 ] char 
  4065 ;;  prec            1   10[BANK0 ] char 
  4066 ;;  flag            1    9[BANK0 ] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2    2[BANK0 ] int 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4076 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;Total ram usage:       13 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    5
  4083 ;; This function calls:
  4084 ;;		Absolute function
  4085 ;;		___lwdiv
  4086 ;;		___lwmod
  4087 ;;		_putch
  4088 ;; This function is called by:
  4089 ;;		_printf
  4090 ;;		_sprintf
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           
  4095                           ;psect for function __doprnt
  4096  05A8                     __doprnt:	
  4097                           
  4098                           ;incstack = 0
  4099                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4100                           ;__doprnt@pb stored from wreg
  4101  05A8  0020               	movlb	0	; select bank0
  4102  05A9  00AE               	movwf	__doprnt@pb
  4103  05AA                     l2417:	
  4104                           ;doprnt.c: 499: signed char c;
  4105                           ;doprnt.c: 506: signed char prec;
  4106                           ;doprnt.c: 508: unsigned char flag;
  4107                           ;doprnt.c: 523: union {
  4108                           ;doprnt.c: 524: unsigned long vd;
  4109                           ;doprnt.c: 525: double integ;
  4110                           ;doprnt.c: 526: } tmpval;
  4111                           ;doprnt.c: 528: unsigned int val;
  4112                           ;doprnt.c: 529: unsigned len;
  4113                           ;doprnt.c: 530: const char * cp;
  4114                           ;doprnt.c: 536: while(c = *f++) {
  4115                           
  4116  05AA  0020               	movlb	0	; select bank0
  4117  05AB  0823               	movf	__doprnt@f+1,w
  4118  05AC  00A6               	movwf	??__doprnt+1
  4119  05AD  0822               	movf	__doprnt@f,w
  4120  05AE  00A5               	movwf	??__doprnt
  4121  05AF  0AA2               	incf	__doprnt@f,f
  4122  05B0  1903               	skipnz
  4123  05B1  0AA3               	incf	__doprnt@f+1,f
  4124  05B2  0825               	movf	??__doprnt,w
  4125  05B3  0084               	movwf	4
  4126  05B4  0826               	movf	??__doprnt+1,w
  4127  05B5  0085               	movwf	5
  4128  05B6  0800               	movf	0,w	;code access
  4129  05B7  00A7               	movwf	??__doprnt+2
  4130  05B8  0827               	movf	??__doprnt+2,w
  4131  05B9  00AD               	movwf	__doprnt@c
  4132  05BA  082D               	movf	__doprnt@c,w
  4133  05BB  1903               	btfsc	3,2
  4134  05BC  2EC4               	goto	l2419
  4135                           
  4136                           ;doprnt.c: 538: if(c != '%')
  4137  05BD  3025               	movlw	37
  4138  05BE  062D               	xorwf	__doprnt@c,w
  4139  05BF  1903               	btfsc	3,2
  4140  05C0  2DE9               	goto	l2367
  4141                           
  4142                           ;doprnt.c: 540: {
  4143                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4144  05C1  0A2E               	incf	__doprnt@pb,w
  4145  05C2  0086               	movwf	6
  4146  05C3  0187               	clrf	7
  4147  05C4  0016               	moviw fsr1++
  4148  05C5  0401               	iorwf	1,w
  4149  05C6  1903               	btfsc	3,2
  4150  05C7  2DD5               	goto	l2363
  4151  05C8  082D               	movf	__doprnt@c,w
  4152  05C9  00A5               	movwf	??__doprnt
  4153  05CA  0825               	movf	??__doprnt,w
  4154  05CB  00F1               	movwf	putch@c
  4155  05CC  0A2E               	incf	__doprnt@pb,w
  4156  05CD  0086               	movwf	6
  4157  05CE  0187               	clrf	7
  4158  05CF  3F41               	moviw [1]fsr1
  4159  05D0  008A               	movwf	10
  4160  05D1  3F40               	moviw [0]fsr1
  4161  05D2  000A               	callw
  4162  05D3  3185               	pagesel	$
  4163  05D4  2DAA               	goto	l2417
  4164  05D5                     l2363:	
  4165  05D5  0020               	movlb	0	; select bank0
  4166  05D6  082D               	movf	__doprnt@c,w
  4167  05D7  00A5               	movwf	??__doprnt
  4168  05D8  082E               	movf	__doprnt@pb,w
  4169  05D9  0086               	movwf	6
  4170  05DA  0187               	clrf	7
  4171  05DB  0801               	movf	1,w
  4172  05DC  0086               	movwf	6
  4173  05DD  3001               	movlw	1	; select bank2/3
  4174  05DE  0087               	movwf	7
  4175  05DF  0825               	movf	??__doprnt,w
  4176  05E0  0081               	movwf	1
  4177  05E1  3001               	movlw	1
  4178  05E2  00A5               	movwf	??__doprnt
  4179  05E3  082E               	movf	__doprnt@pb,w
  4180  05E4  0086               	movwf	6
  4181  05E5  0187               	clrf	7
  4182  05E6  0825               	movf	??__doprnt,w
  4183  05E7  0781               	addwf	1,f
  4184                           
  4185                           ;doprnt.c: 542: continue;
  4186  05E8  2DAA               	goto	l2417
  4187  05E9                     l2367:	
  4188                           
  4189                           ;doprnt.c: 543: }
  4190                           ;doprnt.c: 548: flag = 0;
  4191  05E9  01A9               	clrf	__doprnt@flag
  4192                           
  4193                           ;doprnt.c: 822: }
  4194                           
  4195                           ;doprnt.c: 813: continue;
  4196                           
  4197                           ;doprnt.c: 802: default:
  4198                           
  4199                           ;doprnt.c: 698: case 'i':
  4200                           ;doprnt.c: 699: break;
  4201                           
  4202                           ;doprnt.c: 697: case 'd':
  4203                           
  4204                           ;doprnt.c: 638: goto alldone;
  4205                           
  4206                           ;doprnt.c: 637: case 0:
  4207                           
  4208                           ;doprnt.c: 635: switch(c = *f++) {
  4209  05EA  0823               	movf	__doprnt@f+1,w
  4210  05EB  00A6               	movwf	??__doprnt+1
  4211  05EC  0822               	movf	__doprnt@f,w
  4212  05ED  00A5               	movwf	??__doprnt
  4213  05EE  0AA2               	incf	__doprnt@f,f
  4214  05EF  1903               	skipnz
  4215  05F0  0AA3               	incf	__doprnt@f+1,f
  4216  05F1  0825               	movf	??__doprnt,w
  4217  05F2  0084               	movwf	4
  4218  05F3  0826               	movf	??__doprnt+1,w
  4219  05F4  0085               	movwf	5
  4220  05F5  0800               	movf	0,w	;code access
  4221  05F6  00AD               	movwf	__doprnt@c
  4222                           
  4223                           ; Switch size 1, requested type "space"
  4224                           ; Number of cases is 3, Range of values is 0 to 105
  4225                           ; switch strategies available:
  4226                           ; Name         Instructions Cycles
  4227                           ; simple_byte           10     6 (average)
  4228                           ; direct_byte          218     6 (fixed)
  4229                           ; jumptable            260     6 (fixed)
  4230                           ;	Chosen strategy is simple_byte
  4231  05F7  3A00               	xorlw	0	; case 0
  4232  05F8  1903               	skipnz
  4233  05F9  2EC4               	goto	l2419
  4234  05FA  3A64               	xorlw	100	; case 100
  4235  05FB  1903               	skipnz
  4236  05FC  2E01               	goto	l2373
  4237  05FD  3A0D               	xorlw	13	; case 105
  4238  05FE  1903               	skipnz
  4239  05FF  2E01               	goto	l2373
  4240  0600  2DAA               	goto	l2417
  4241  0601                     l2373:	
  4242                           
  4243                           ;doprnt.c: 1253: {
  4244                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4245  0601  0824               	movf	__doprnt@ap,w
  4246  0602  0086               	movwf	6
  4247  0603  0187               	clrf	7
  4248  0604  0801               	movf	1,w
  4249  0605  0084               	movwf	4
  4250  0606  0185               	clrf	5
  4251  0607  3002               	movlw	2
  4252  0608  0781               	addwf	1,f
  4253  0609  3F00               	moviw [0]fsr0
  4254  060A  00AB               	movwf	__doprnt@val
  4255  060B  3F01               	moviw [1]fsr0
  4256  060C  00AC               	movwf	__doprnt@val+1
  4257                           
  4258                           ;doprnt.c: 1261: if((int)val < 0) {
  4259  060D  1FAC               	btfss	__doprnt@val+1,7
  4260  060E  2E18               	goto	l2381
  4261                           
  4262                           ;doprnt.c: 1262: flag |= 0x03;
  4263  060F  3003               	movlw	3
  4264  0610  00A5               	movwf	??__doprnt
  4265  0611  0825               	movf	??__doprnt,w
  4266  0612  04A9               	iorwf	__doprnt@flag,f
  4267                           
  4268                           ;doprnt.c: 1263: val = -val;
  4269  0613  09AB               	comf	__doprnt@val,f
  4270  0614  09AC               	comf	__doprnt@val+1,f
  4271  0615  0AAB               	incf	__doprnt@val,f
  4272  0616  1903               	skipnz
  4273  0617  0AAC               	incf	__doprnt@val+1,f
  4274  0618                     l2381:	
  4275                           
  4276                           ;doprnt.c: 1264: }
  4277                           ;doprnt.c: 1266: }
  4278                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4279  0618  01AD               	clrf	__doprnt@c
  4280  0619  0AAD               	incf	__doprnt@c,f
  4281  061A  3005               	movlw	5
  4282  061B  062D               	xorwf	__doprnt@c,w
  4283  061C  1903               	btfsc	3,2
  4284  061D  2E3D               	goto	l2393
  4285  061E                     l2387:	
  4286                           
  4287                           ;doprnt.c: 1306: if(val < dpowers[c])
  4288  061E  082D               	movf	__doprnt@c,w
  4289  061F  00A5               	movwf	??__doprnt
  4290  0620  01A6               	clrf	??__doprnt+1
  4291  0621  35A5               	lslf	??__doprnt,f
  4292  0622  0DA6               	rlf	??__doprnt+1,f
  4293  0623  3089               	movlw	low (_dpowers| (0+32768))
  4294  0624  0725               	addwf	??__doprnt,w
  4295  0625  0084               	movwf	4
  4296  0626  3098               	movlw	high (_dpowers| (0+32768))
  4297  0627  3D26               	addwfc	??__doprnt+1,w
  4298  0628  0085               	movwf	5
  4299  0629  3F00               	moviw [0]fsr0
  4300  062A  00A7               	movwf	??__doprnt+2
  4301  062B  3F01               	moviw [1]fsr0
  4302  062C  00A8               	movwf	??__doprnt+3
  4303  062D  0828               	movf	??__doprnt+3,w
  4304  062E  022C               	subwf	__doprnt@val+1,w
  4305  062F  1D03               	skipz
  4306  0630  2E33               	goto	u2845
  4307  0631  0827               	movf	??__doprnt+2,w
  4308  0632  022B               	subwf	__doprnt@val,w
  4309  0633                     u2845:	
  4310  0633  1C03               	btfss	3,0
  4311  0634  2E3D               	goto	l2393
  4312                           
  4313                           ;doprnt.c: 1307: break;
  4314  0635  3001               	movlw	1
  4315  0636  00A5               	movwf	??__doprnt
  4316  0637  0825               	movf	??__doprnt,w
  4317  0638  07AD               	addwf	__doprnt@c,f
  4318  0639  3005               	movlw	5
  4319  063A  062D               	xorwf	__doprnt@c,w
  4320  063B  1D03               	btfss	3,2
  4321  063C  2E1E               	goto	l2387
  4322  063D                     l2393:	
  4323                           
  4324                           ;doprnt.c: 1422: {
  4325                           ;doprnt.c: 1438: if(flag & 0x03)
  4326  063D  0829               	movf	__doprnt@flag,w
  4327  063E  3903               	andlw	3
  4328  063F  1903               	btfsc	3,2
  4329  0640  2E68               	goto	l2403
  4330                           
  4331                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4332  0641  0A2E               	incf	__doprnt@pb,w
  4333  0642  0086               	movwf	6
  4334  0643  0187               	clrf	7
  4335  0644  0016               	moviw fsr1++
  4336  0645  0401               	iorwf	1,w
  4337  0646  1903               	btfsc	3,2
  4338  0647  2E55               	goto	l2399
  4339  0648  302D               	movlw	45
  4340  0649  00A5               	movwf	??__doprnt
  4341  064A  0825               	movf	??__doprnt,w
  4342  064B  00F1               	movwf	putch@c
  4343  064C  0A2E               	incf	__doprnt@pb,w
  4344  064D  0086               	movwf	6
  4345  064E  0187               	clrf	7
  4346  064F  3F41               	moviw [1]fsr1
  4347  0650  008A               	movwf	10
  4348  0651  3F40               	moviw [0]fsr1
  4349  0652  000A               	callw
  4350  0653  3185               	pagesel	$
  4351  0654  2E68               	goto	l2403
  4352  0655                     l2399:	
  4353  0655  302D               	movlw	45
  4354  0656  0020               	movlb	0	; select bank0
  4355  0657  00A5               	movwf	??__doprnt
  4356  0658  082E               	movf	__doprnt@pb,w
  4357  0659  0086               	movwf	6
  4358  065A  0187               	clrf	7
  4359  065B  0801               	movf	1,w
  4360  065C  0086               	movwf	6
  4361  065D  3001               	movlw	1	; select bank2/3
  4362  065E  0087               	movwf	7
  4363  065F  0825               	movf	??__doprnt,w
  4364  0660  0081               	movwf	1
  4365  0661  3001               	movlw	1
  4366  0662  00A5               	movwf	??__doprnt
  4367  0663  082E               	movf	__doprnt@pb,w
  4368  0664  0086               	movwf	6
  4369  0665  0187               	clrf	7
  4370  0666  0825               	movf	??__doprnt,w
  4371  0667  0781               	addwf	1,f
  4372  0668                     l2403:	
  4373                           
  4374                           ;doprnt.c: 1469: }
  4375                           ;doprnt.c: 1472: prec = c;
  4376  0668  0020               	movlb	0	; select bank0
  4377  0669  082D               	movf	__doprnt@c,w
  4378  066A  00A5               	movwf	??__doprnt
  4379  066B  0825               	movf	??__doprnt,w
  4380  066C  00AA               	movwf	__doprnt@prec
  4381  066D                     l2415:	
  4382                           ;doprnt.c: 1474: while(prec--) {
  4383                           
  4384  066D  30FF               	movlw	255
  4385  066E  0020               	movlb	0	; select bank0
  4386  066F  00A5               	movwf	??__doprnt
  4387  0670  0825               	movf	??__doprnt,w
  4388  0671  07AA               	addwf	__doprnt@prec,f
  4389  0672  0A2A               	incf	__doprnt@prec,w
  4390  0673  1903               	btfsc	3,2
  4391  0674  2DAA               	goto	l2417
  4392                           
  4393                           ;doprnt.c: 1478: {
  4394                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4395  0675  300A               	movlw	10
  4396  0676  00F9               	movwf	___lwmod@divisor
  4397  0677  3000               	movlw	0
  4398  0678  00FA               	movwf	___lwmod@divisor+1
  4399  0679  082A               	movf	__doprnt@prec,w
  4400  067A  00A5               	movwf	??__doprnt
  4401  067B  01A6               	clrf	??__doprnt+1
  4402  067C  35A5               	lslf	??__doprnt,f
  4403  067D  0DA6               	rlf	??__doprnt+1,f
  4404  067E  3089               	movlw	low (_dpowers| (0+32768))
  4405  067F  0725               	addwf	??__doprnt,w
  4406  0680  0084               	movwf	4
  4407  0681  3098               	movlw	high (_dpowers| (0+32768))
  4408  0682  3D26               	addwfc	??__doprnt+1,w
  4409  0683  0085               	movwf	5
  4410  0684  3F00               	moviw [0]fsr0
  4411  0685  00F1               	movwf	___lwdiv@divisor
  4412  0686  3F01               	moviw [1]fsr0
  4413  0687  00F2               	movwf	___lwdiv@divisor+1
  4414  0688  082C               	movf	__doprnt@val+1,w
  4415  0689  00F4               	movwf	___lwdiv@dividend+1
  4416  068A  082B               	movf	__doprnt@val,w
  4417  068B  00F3               	movwf	___lwdiv@dividend
  4418  068C  3197  27CC  3185   	fcall	___lwdiv
  4419  068F  0872               	movf	?___lwdiv+1,w
  4420  0690  00FC               	movwf	___lwmod@dividend+1
  4421  0691  0871               	movf	?___lwdiv,w
  4422  0692  00FB               	movwf	___lwmod@dividend
  4423  0693  3197  2770  3185   	fcall	___lwmod
  4424  0696  0879               	movf	?___lwmod,w
  4425  0697  3E30               	addlw	48
  4426  0698  0020               	movlb	0	; select bank0
  4427  0699  00A7               	movwf	??__doprnt+2
  4428  069A  0827               	movf	??__doprnt+2,w
  4429  069B  00AD               	movwf	__doprnt@c
  4430                           
  4431                           ;doprnt.c: 1523: }
  4432                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4433  069C  0A2E               	incf	__doprnt@pb,w
  4434  069D  0086               	movwf	6
  4435  069E  0187               	clrf	7
  4436  069F  0016               	moviw fsr1++
  4437  06A0  0401               	iorwf	1,w
  4438  06A1  1903               	btfsc	3,2
  4439  06A2  2EB0               	goto	l2411
  4440  06A3  082D               	movf	__doprnt@c,w
  4441  06A4  00A5               	movwf	??__doprnt
  4442  06A5  0825               	movf	??__doprnt,w
  4443  06A6  00F1               	movwf	putch@c
  4444  06A7  0A2E               	incf	__doprnt@pb,w
  4445  06A8  0086               	movwf	6
  4446  06A9  0187               	clrf	7
  4447  06AA  3F41               	moviw [1]fsr1
  4448  06AB  008A               	movwf	10
  4449  06AC  3F40               	moviw [0]fsr1
  4450  06AD  000A               	callw
  4451  06AE  3185               	pagesel	$
  4452  06AF  2E6D               	goto	l2415
  4453  06B0                     l2411:	
  4454  06B0  0020               	movlb	0	; select bank0
  4455  06B1  082D               	movf	__doprnt@c,w
  4456  06B2  00A5               	movwf	??__doprnt
  4457  06B3  082E               	movf	__doprnt@pb,w
  4458  06B4  0086               	movwf	6
  4459  06B5  0187               	clrf	7
  4460  06B6  0801               	movf	1,w
  4461  06B7  0086               	movwf	6
  4462  06B8  3001               	movlw	1	; select bank2/3
  4463  06B9  0087               	movwf	7
  4464  06BA  0825               	movf	??__doprnt,w
  4465  06BB  0081               	movwf	1
  4466  06BC  3001               	movlw	1
  4467  06BD  00A5               	movwf	??__doprnt
  4468  06BE  082E               	movf	__doprnt@pb,w
  4469  06BF  0086               	movwf	6
  4470  06C0  0187               	clrf	7
  4471  06C1  0825               	movf	??__doprnt,w
  4472  06C2  0781               	addwf	1,f
  4473  06C3  2E6D               	goto	l2415
  4474  06C4                     l2419:	
  4475                           ;doprnt.c: 1525: }
  4476                           ;doprnt.c: 1533: }
  4477                           ;doprnt.c: 1535: alldone:
  4478                           
  4479                           
  4480                           ;doprnt.c: 1540: return 0;
  4481  06C4  01A2               	clrf	?__doprnt
  4482  06C5  01A3               	clrf	?__doprnt+1
  4483  06C6  0008               	return
  4484  06C7                     __end_of__doprnt:	
  4485                           
  4486                           	psect	text6
  4487  0003                     __ptext6:	
  4488 ;; *************** function _putch *****************
  4489 ;; Defined at:
  4490 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\putch.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  c               1    1[COMMON] unsigned char 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		None
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4504 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;Total ram usage:        1 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    4
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_printf
  4515 ;;		__doprnt
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           
  4520                           ;psect for function _putch
  4521  0003                     _putch:	
  4522                           
  4523                           ;incstack = 0
  4524                           ; Regs used in _putch: []
  4525  0003  0008               	return
  4526  0004                     __end_of_putch:	
  4527                           
  4528                           	psect	text7
  4529  1770                     __ptext7:	
  4530 ;; *************** function ___lwmod *****************
  4531 ;; Defined at:
  4532 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  divisor         2    9[COMMON] unsigned int 
  4535 ;;  dividend        2   11[COMMON] unsigned int 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  counter         1    1[BANK0 ] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2    9[COMMON] unsigned int 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;Total ram usage:        6 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    4
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		__doprnt
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function ___lwmod
  4563  1770                     ___lwmod:	
  4564                           
  4565                           ;incstack = 0
  4566                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4567  1770  0879               	movf	___lwmod@divisor,w
  4568  1771  047A               	iorwf	___lwmod@divisor+1,w
  4569  1772  1903               	btfsc	3,2
  4570  1773  2F98               	goto	l2215
  4571  1774  0020               	movlb	0	; select bank0
  4572  1775  01A1               	clrf	___lwmod@counter
  4573  1776  0AA1               	incf	___lwmod@counter,f
  4574  1777                     l2205:	
  4575  1777  1BFA               	btfsc	___lwmod@divisor+1,7
  4576  1778  2F83               	goto	l2207
  4577  1779  3001               	movlw	1
  4578  177A                     u2585:	
  4579  177A  35F9               	lslf	___lwmod@divisor,f
  4580  177B  0DFA               	rlf	___lwmod@divisor+1,f
  4581  177C  0B89               	decfsz	9,f
  4582  177D  2F7A               	goto	u2585
  4583  177E  3001               	movlw	1
  4584  177F  00A0               	movwf	??___lwmod
  4585  1780  0820               	movf	??___lwmod,w
  4586  1781  07A1               	addwf	___lwmod@counter,f
  4587  1782  2F77               	goto	l2205
  4588  1783                     l2207:	
  4589  1783  087A               	movf	___lwmod@divisor+1,w
  4590  1784  027C               	subwf	___lwmod@dividend+1,w
  4591  1785  1D03               	skipz
  4592  1786  2F89               	goto	u2605
  4593  1787  0879               	movf	___lwmod@divisor,w
  4594  1788  027B               	subwf	___lwmod@dividend,w
  4595  1789                     u2605:	
  4596  1789  1C03               	skipc
  4597  178A  2F8F               	goto	l2211
  4598  178B  0879               	movf	___lwmod@divisor,w
  4599  178C  02FB               	subwf	___lwmod@dividend,f
  4600  178D  087A               	movf	___lwmod@divisor+1,w
  4601  178E  3BFC               	subwfb	___lwmod@dividend+1,f
  4602  178F                     l2211:	
  4603  178F  3001               	movlw	1
  4604  1790                     u2615:	
  4605  1790  36FA               	lsrf	___lwmod@divisor+1,f
  4606  1791  0CF9               	rrf	___lwmod@divisor,f
  4607  1792  0B89               	decfsz	9,f
  4608  1793  2F90               	goto	u2615
  4609  1794  3001               	movlw	1
  4610  1795  02A1               	subwf	___lwmod@counter,f
  4611  1796  1D03               	btfss	3,2
  4612  1797  2F83               	goto	l2207
  4613  1798                     l2215:	
  4614  1798  087C               	movf	___lwmod@dividend+1,w
  4615  1799  00FA               	movwf	?___lwmod+1
  4616  179A  087B               	movf	___lwmod@dividend,w
  4617  179B  00F9               	movwf	?___lwmod
  4618  179C  0008               	return
  4619  179D                     __end_of___lwmod:	
  4620                           
  4621                           	psect	text8
  4622  17CC                     __ptext8:	
  4623 ;; *************** function ___lwdiv *****************
  4624 ;; Defined at:
  4625 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  divisor         2    1[COMMON] unsigned int 
  4628 ;;  dividend        2    3[COMMON] unsigned int 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  quotient        2    6[COMMON] unsigned int 
  4631 ;;  counter         1    8[COMMON] unsigned char 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  2    1[COMMON] unsigned int 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;Total ram usage:        8 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    4
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		__doprnt
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           
  4656                           ;psect for function ___lwdiv
  4657  17CC                     ___lwdiv:	
  4658                           
  4659                           ;incstack = 0
  4660                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4661  17CC  01F6               	clrf	___lwdiv@quotient
  4662  17CD  01F7               	clrf	___lwdiv@quotient+1
  4663  17CE  0871               	movf	___lwdiv@divisor,w
  4664  17CF  0472               	iorwf	___lwdiv@divisor+1,w
  4665  17D0  1903               	btfsc	3,2
  4666  17D1  2FFB               	goto	l2193
  4667  17D2  01F8               	clrf	___lwdiv@counter
  4668  17D3  0AF8               	incf	___lwdiv@counter,f
  4669  17D4                     l2181:	
  4670  17D4  1BF2               	btfsc	___lwdiv@divisor+1,7
  4671  17D5  2FE0               	goto	l2183
  4672  17D6  3001               	movlw	1
  4673  17D7                     u2515:	
  4674  17D7  35F1               	lslf	___lwdiv@divisor,f
  4675  17D8  0DF2               	rlf	___lwdiv@divisor+1,f
  4676  17D9  0B89               	decfsz	9,f
  4677  17DA  2FD7               	goto	u2515
  4678  17DB  3001               	movlw	1
  4679  17DC  00F5               	movwf	??___lwdiv
  4680  17DD  0875               	movf	??___lwdiv,w
  4681  17DE  07F8               	addwf	___lwdiv@counter,f
  4682  17DF  2FD4               	goto	l2181
  4683  17E0                     l2183:	
  4684  17E0  3001               	movlw	1
  4685  17E1                     u2535:	
  4686  17E1  35F6               	lslf	___lwdiv@quotient,f
  4687  17E2  0DF7               	rlf	___lwdiv@quotient+1,f
  4688  17E3  0B89               	decfsz	9,f
  4689  17E4  2FE1               	goto	u2535
  4690  17E5  0872               	movf	___lwdiv@divisor+1,w
  4691  17E6  0274               	subwf	___lwdiv@dividend+1,w
  4692  17E7  1D03               	skipz
  4693  17E8  2FEB               	goto	u2545
  4694  17E9  0871               	movf	___lwdiv@divisor,w
  4695  17EA  0273               	subwf	___lwdiv@dividend,w
  4696  17EB                     u2545:	
  4697  17EB  1C03               	skipc
  4698  17EC  2FF2               	goto	l2189
  4699  17ED  0871               	movf	___lwdiv@divisor,w
  4700  17EE  02F3               	subwf	___lwdiv@dividend,f
  4701  17EF  0872               	movf	___lwdiv@divisor+1,w
  4702  17F0  3BF4               	subwfb	___lwdiv@dividend+1,f
  4703  17F1  1476               	bsf	___lwdiv@quotient,0
  4704  17F2                     l2189:	
  4705  17F2  3001               	movlw	1
  4706  17F3                     u2555:	
  4707  17F3  36F2               	lsrf	___lwdiv@divisor+1,f
  4708  17F4  0CF1               	rrf	___lwdiv@divisor,f
  4709  17F5  0B89               	decfsz	9,f
  4710  17F6  2FF3               	goto	u2555
  4711  17F7  3001               	movlw	1
  4712  17F8  02F8               	subwf	___lwdiv@counter,f
  4713  17F9  1D03               	btfss	3,2
  4714  17FA  2FE0               	goto	l2183
  4715  17FB                     l2193:	
  4716  17FB  0877               	movf	___lwdiv@quotient+1,w
  4717  17FC  00F2               	movwf	?___lwdiv+1
  4718  17FD  0876               	movf	___lwdiv@quotient,w
  4719  17FE  00F1               	movwf	?___lwdiv
  4720  17FF  0008               	return
  4721  1800                     __end_of___lwdiv:	
  4722                           
  4723                           	psect	text9
  4724  0EF7                     __ptext9:	
  4725 ;; *************** function _pow *****************
  4726 ;; Defined at:
  4727 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\pow.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  x               3   20[BANK1 ] unsigned int 
  4730 ;;  y               3   23[BANK1 ] unsigned int 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  yi              4   34[BANK1 ] unsigned long 
  4733 ;;  sign            1   33[BANK1 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  3   20[BANK1 ] unsigned char 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4743 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;Total ram usage:       18 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    8
  4750 ;; This function calls:
  4751 ;;		___ftge
  4752 ;;		___ftmul
  4753 ;;		___ftneg
  4754 ;;		___fttol
  4755 ;;		___lltoft
  4756 ;;		_exp
  4757 ;;		_log
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _pow
  4765  0EF7                     _pow:	
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in _pow: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4769  0EF7  0021               	movlb	1	; select bank1
  4770  0EF8  01C1               	clrf	pow@sign^(0+128)
  4771  0EF9  0836               	movf	(pow@x+2)^(0+128),w
  4772  0EFA  0435               	iorwf	(pow@x+1)^(0+128),w
  4773  0EFB  0434               	iorwf	pow@x^(0+128),w
  4774  0EFC  1D03               	skipz
  4775  0EFD  2F1C               	goto	l2821
  4776  0EFE  3000               	movlw	0
  4777  0EFF  00F1               	movwf	___ftge@ff1
  4778  0F00  3000               	movlw	0
  4779  0F01  00F2               	movwf	___ftge@ff1+1
  4780  0F02  3000               	movlw	0
  4781  0F03  00F3               	movwf	___ftge@ff1+2
  4782  0F04  0837               	movf	pow@y^(0+128),w
  4783  0F05  00F4               	movwf	___ftge@ff2
  4784  0F06  0838               	movf	(pow@y+1)^(0+128),w
  4785  0F07  00F5               	movwf	___ftge@ff2+1
  4786  0F08  0839               	movf	(pow@y+2)^(0+128),w
  4787  0F09  00F6               	movwf	___ftge@ff2+2
  4788  0F0A  3188  2022  318E   	fcall	___ftge
  4789  0F0D  1C03               	btfss	3,0
  4790  0F0E  2F14               	goto	l719
  4791  0F0F  3021               	movlw	33
  4792  0F10  0022               	movlb	2	; select bank2
  4793  0F11  00C1               	movwf	_errno^(0+256)
  4794  0F12  3000               	movlw	0
  4795  0F13  00C2               	movwf	(_errno^(0+256)+1)
  4796  0F14                     l719:	
  4797  0F14  3000               	movlw	0
  4798  0F15  0021               	movlb	1	; select bank1
  4799  0F16  00B4               	movwf	?_pow^(0+128)
  4800  0F17  3000               	movlw	0
  4801  0F18  00B5               	movwf	(?_pow+1)^(0+128)
  4802  0F19  3000               	movlw	0
  4803  0F1A  00B6               	movwf	(?_pow+2)^(0+128)
  4804  0F1B  0008               	return
  4805  0F1C                     l2821:	
  4806  0F1C  0839               	movf	(pow@y+2)^(0+128),w
  4807  0F1D  0438               	iorwf	(pow@y+1)^(0+128),w
  4808  0F1E  0437               	iorwf	pow@y^(0+128),w
  4809  0F1F  1D03               	skipz
  4810  0F20  2F28               	goto	l2827
  4811  0F21  3000               	movlw	0
  4812  0F22  00B4               	movwf	?_pow^(0+128)
  4813  0F23  3080               	movlw	128
  4814  0F24  00B5               	movwf	(?_pow+1)^(0+128)
  4815  0F25  303F               	movlw	63
  4816  0F26  00B6               	movwf	(?_pow+2)^(0+128)
  4817  0F27  0008               	return
  4818  0F28                     l2827:	
  4819  0F28  0834               	movf	pow@x^(0+128),w
  4820  0F29  00F1               	movwf	___ftge@ff1
  4821  0F2A  0835               	movf	(pow@x+1)^(0+128),w
  4822  0F2B  00F2               	movwf	___ftge@ff1+1
  4823  0F2C  0836               	movf	(pow@x+2)^(0+128),w
  4824  0F2D  00F3               	movwf	___ftge@ff1+2
  4825  0F2E  3000               	movlw	0
  4826  0F2F  00F4               	movwf	___ftge@ff2
  4827  0F30  3000               	movlw	0
  4828  0F31  00F5               	movwf	___ftge@ff2+1
  4829  0F32  3000               	movlw	0
  4830  0F33  00F6               	movwf	___ftge@ff2+2
  4831  0F34  3188  2022  318E   	fcall	___ftge
  4832  0F37  1803               	btfsc	3,0
  4833  0F38  2F9C               	goto	l2839
  4834  0F39  0021               	movlb	1	; select bank1
  4835  0F3A  0837               	movf	pow@y^(0+128),w
  4836  0F3B  0020               	movlb	0	; select bank0
  4837  0F3C  00B2               	movwf	___fttol@f1
  4838  0F3D  0021               	movlb	1	; select bank1
  4839  0F3E  0838               	movf	(pow@y+1)^(0+128),w
  4840  0F3F  0020               	movlb	0	; select bank0
  4841  0F40  00B3               	movwf	___fttol@f1+1
  4842  0F41  0021               	movlb	1	; select bank1
  4843  0F42  0839               	movf	(pow@y+2)^(0+128),w
  4844  0F43  0020               	movlb	0	; select bank0
  4845  0F44  00B4               	movwf	___fttol@f1+2
  4846  0F45  318A  2226  318E   	fcall	___fttol
  4847  0F48  0020               	movlb	0	; select bank0
  4848  0F49  0835               	movf	?___fttol+3,w
  4849  0F4A  0021               	movlb	1	; select bank1
  4850  0F4B  00C5               	movwf	(pow@yi+3)^(0+128)
  4851  0F4C  0020               	movlb	0	; select bank0
  4852  0F4D  0834               	movf	?___fttol+2,w
  4853  0F4E  0021               	movlb	1	; select bank1
  4854  0F4F  00C4               	movwf	(pow@yi+2)^(0+128)
  4855  0F50  0020               	movlb	0	; select bank0
  4856  0F51  0833               	movf	?___fttol+1,w
  4857  0F52  0021               	movlb	1	; select bank1
  4858  0F53  00C3               	movwf	(pow@yi+1)^(0+128)
  4859  0F54  0020               	movlb	0	; select bank0
  4860  0F55  0832               	movf	?___fttol,w
  4861  0F56  0021               	movlb	1	; select bank1
  4862  0F57  00C2               	movwf	pow@yi^(0+128)
  4863  0F58  0845               	movf	(pow@yi+3)^(0+128),w
  4864  0F59  00FC               	movwf	___lltoft@c+3
  4865  0F5A  0844               	movf	(pow@yi+2)^(0+128),w
  4866  0F5B  00FB               	movwf	___lltoft@c+2
  4867  0F5C  0843               	movf	(pow@yi+1)^(0+128),w
  4868  0F5D  00FA               	movwf	___lltoft@c+1
  4869  0F5E  0842               	movf	pow@yi^(0+128),w
  4870  0F5F  00F9               	movwf	___lltoft@c
  4871  0F60  3197  2747  318E   	fcall	___lltoft
  4872  0F63  0021               	movlb	1	; select bank1
  4873  0F64  0839               	movf	(pow@y+2)^(0+128),w
  4874  0F65  067B               	xorwf	?___lltoft+2,w
  4875  0F66  1D03               	skipz
  4876  0F67  2F6E               	goto	u3475
  4877  0F68  0838               	movf	(pow@y+1)^(0+128),w
  4878  0F69  067A               	xorwf	?___lltoft+1,w
  4879  0F6A  1D03               	skipz
  4880  0F6B  2F6E               	goto	u3475
  4881  0F6C  0837               	movf	pow@y^(0+128),w
  4882  0F6D  0679               	xorwf	?___lltoft,w
  4883  0F6E                     u3475:	
  4884  0F6E  1903               	skipnz
  4885  0F6F  2F7D               	goto	l2835
  4886  0F70  3021               	movlw	33
  4887  0F71  0022               	movlb	2	; select bank2
  4888  0F72  00C1               	movwf	_errno^(0+256)
  4889  0F73  3000               	movlw	0
  4890  0F74  00C2               	movwf	(_errno^(0+256)+1)
  4891  0F75  3000               	movlw	0
  4892  0F76  0021               	movlb	1	; select bank1
  4893  0F77  00B4               	movwf	?_pow^(0+128)
  4894  0F78  3000               	movlw	0
  4895  0F79  00B5               	movwf	(?_pow+1)^(0+128)
  4896  0F7A  3000               	movlw	0
  4897  0F7B  00B6               	movwf	(?_pow+2)^(0+128)
  4898  0F7C  0008               	return
  4899  0F7D                     l2835:	
  4900  0F7D  0842               	movf	pow@yi^(0+128),w
  4901  0F7E  3901               	andlw	1
  4902  0F7F  00BA               	movwf	??_pow^(0+128)
  4903  0F80  083A               	movf	??_pow^(0+128),w
  4904  0F81  00C1               	movwf	pow@sign^(0+128)
  4905  0F82  0834               	movf	pow@x^(0+128),w
  4906  0F83  0020               	movlb	0	; select bank0
  4907  0F84  00C8               	movwf	___ftneg@f1
  4908  0F85  0021               	movlb	1	; select bank1
  4909  0F86  0835               	movf	(pow@x+1)^(0+128),w
  4910  0F87  0020               	movlb	0	; select bank0
  4911  0F88  00C9               	movwf	___ftneg@f1+1
  4912  0F89  0021               	movlb	1	; select bank1
  4913  0F8A  0836               	movf	(pow@x+2)^(0+128),w
  4914  0F8B  0020               	movlb	0	; select bank0
  4915  0F8C  00CA               	movwf	___ftneg@f1+2
  4916  0F8D  3196  266B  318E   	fcall	___ftneg
  4917  0F90  0020               	movlb	0	; select bank0
  4918  0F91  0848               	movf	?___ftneg,w
  4919  0F92  0021               	movlb	1	; select bank1
  4920  0F93  00B4               	movwf	pow@x^(0+128)
  4921  0F94  0020               	movlb	0	; select bank0
  4922  0F95  0849               	movf	?___ftneg+1,w
  4923  0F96  0021               	movlb	1	; select bank1
  4924  0F97  00B5               	movwf	(pow@x+1)^(0+128)
  4925  0F98  0020               	movlb	0	; select bank0
  4926  0F99  084A               	movf	?___ftneg+2,w
  4927  0F9A  0021               	movlb	1	; select bank1
  4928  0F9B  00B6               	movwf	(pow@x+2)^(0+128)
  4929  0F9C                     l2839:	
  4930  0F9C  0021               	movlb	1	; select bank1
  4931  0F9D  0834               	movf	pow@x^(0+128),w
  4932  0F9E  00A3               	movwf	log@x^(0+128)
  4933  0F9F  0835               	movf	(pow@x+1)^(0+128),w
  4934  0FA0  00A4               	movwf	(log@x+1)^(0+128)
  4935  0FA1  0836               	movf	(pow@x+2)^(0+128),w
  4936  0FA2  00A5               	movwf	(log@x+2)^(0+128)
  4937  0FA3  318D  2535  318E   	fcall	_log
  4938  0FA6  0021               	movlb	1	; select bank1
  4939  0FA7  0823               	movf	?_log^(0+128),w
  4940  0FA8  00BB               	movwf	_pow$889^(0+128)
  4941  0FA9  0824               	movf	(?_log+1)^(0+128),w
  4942  0FAA  00BC               	movwf	(_pow$889+1)^(0+128)
  4943  0FAB  0825               	movf	(?_log+2)^(0+128),w
  4944  0FAC  00BD               	movwf	(_pow$889+2)^(0+128)
  4945  0FAD  0837               	movf	pow@y^(0+128),w
  4946  0FAE  0020               	movlb	0	; select bank0
  4947  0FAF  00CB               	movwf	___ftmul@f1
  4948  0FB0  0021               	movlb	1	; select bank1
  4949  0FB1  0838               	movf	(pow@y+1)^(0+128),w
  4950  0FB2  0020               	movlb	0	; select bank0
  4951  0FB3  00CC               	movwf	___ftmul@f1+1
  4952  0FB4  0021               	movlb	1	; select bank1
  4953  0FB5  0839               	movf	(pow@y+2)^(0+128),w
  4954  0FB6  0020               	movlb	0	; select bank0
  4955  0FB7  00CD               	movwf	___ftmul@f1+2
  4956  0FB8  0021               	movlb	1	; select bank1
  4957  0FB9  083B               	movf	_pow$889^(0+128),w
  4958  0FBA  0020               	movlb	0	; select bank0
  4959  0FBB  00CE               	movwf	___ftmul@f2
  4960  0FBC  0021               	movlb	1	; select bank1
  4961  0FBD  083C               	movf	(_pow$889+1)^(0+128),w
  4962  0FBE  0020               	movlb	0	; select bank0
  4963  0FBF  00CF               	movwf	___ftmul@f2+1
  4964  0FC0  0021               	movlb	1	; select bank1
  4965  0FC1  083D               	movf	(_pow$889+2)^(0+128),w
  4966  0FC2  0020               	movlb	0	; select bank0
  4967  0FC3  00D0               	movwf	___ftmul@f2+2
  4968  0FC4  318C  2481  318E   	fcall	___ftmul
  4969  0FC7  0020               	movlb	0	; select bank0
  4970  0FC8  084B               	movf	?___ftmul,w
  4971  0FC9  0021               	movlb	1	; select bank1
  4972  0FCA  00BE               	movwf	_pow$890^(0+128)
  4973  0FCB  0020               	movlb	0	; select bank0
  4974  0FCC  084C               	movf	?___ftmul+1,w
  4975  0FCD  0021               	movlb	1	; select bank1
  4976  0FCE  00BF               	movwf	(_pow$890+1)^(0+128)
  4977  0FCF  0020               	movlb	0	; select bank0
  4978  0FD0  084D               	movf	?___ftmul+2,w
  4979  0FD1  0021               	movlb	1	; select bank1
  4980  0FD2  00C0               	movwf	(_pow$890+2)^(0+128)
  4981  0FD3  083E               	movf	_pow$890^(0+128),w
  4982  0FD4  00AA               	movwf	exp@x^(0+128)
  4983  0FD5  083F               	movf	(_pow$890+1)^(0+128),w
  4984  0FD6  00AB               	movwf	(exp@x+1)^(0+128)
  4985  0FD7  0840               	movf	(_pow$890+2)^(0+128),w
  4986  0FD8  00AC               	movwf	(exp@x+2)^(0+128)
  4987  0FD9  3184  244A  318E   	fcall	_exp
  4988  0FDC  0021               	movlb	1	; select bank1
  4989  0FDD  082A               	movf	?_exp^(0+128),w
  4990  0FDE  00B4               	movwf	pow@x^(0+128)
  4991  0FDF  082B               	movf	(?_exp+1)^(0+128),w
  4992  0FE0  00B5               	movwf	(pow@x+1)^(0+128)
  4993  0FE1  082C               	movf	(?_exp+2)^(0+128),w
  4994  0FE2  00B6               	movwf	(pow@x+2)^(0+128)
  4995  0FE3  0841               	movf	pow@sign^(0+128),w
  4996  0FE4  1903               	btfsc	3,2
  4997  0FE5  0008               	return
  4998  0FE6  0834               	movf	pow@x^(0+128),w
  4999  0FE7  0020               	movlb	0	; select bank0
  5000  0FE8  00C8               	movwf	___ftneg@f1
  5001  0FE9  0021               	movlb	1	; select bank1
  5002  0FEA  0835               	movf	(pow@x+1)^(0+128),w
  5003  0FEB  0020               	movlb	0	; select bank0
  5004  0FEC  00C9               	movwf	___ftneg@f1+1
  5005  0FED  0021               	movlb	1	; select bank1
  5006  0FEE  0836               	movf	(pow@x+2)^(0+128),w
  5007  0FEF  0020               	movlb	0	; select bank0
  5008  0FF0  00CA               	movwf	___ftneg@f1+2
  5009  0FF1  3196  266B         	fcall	___ftneg
  5010  0FF3  0020               	movlb	0	; select bank0
  5011  0FF4  0848               	movf	?___ftneg,w
  5012  0FF5  0021               	movlb	1	; select bank1
  5013  0FF6  00B4               	movwf	?_pow^(0+128)
  5014  0FF7  0020               	movlb	0	; select bank0
  5015  0FF8  0849               	movf	?___ftneg+1,w
  5016  0FF9  0021               	movlb	1	; select bank1
  5017  0FFA  00B5               	movwf	(?_pow+1)^(0+128)
  5018  0FFB  0020               	movlb	0	; select bank0
  5019  0FFC  084A               	movf	?___ftneg+2,w
  5020  0FFD  0021               	movlb	1	; select bank1
  5021  0FFE  00B6               	movwf	(?_pow+2)^(0+128)
  5022  0FFF  0008               	return
  5023  1000                     __end_of_pow:	
  5024                           
  5025                           	psect	text10
  5026  0D35                     __ptext10:	
  5027 ;; *************** function _log *****************
  5028 ;; Defined at:
  5029 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\log.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  x               3    3[BANK1 ] unsigned char 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  exponent        2    6[BANK1 ] int 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  3    3[BANK1 ] int 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5043 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;Total ram usage:        6 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    7
  5050 ;; This function calls:
  5051 ;;		___awtoft
  5052 ;;		___ftadd
  5053 ;;		___ftge
  5054 ;;		___ftmul
  5055 ;;		_eval_poly
  5056 ;;		_frexp
  5057 ;; This function is called by:
  5058 ;;		_pow
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           
  5063                           ;psect for function _log
  5064  0D35                     _log:	
  5065                           
  5066                           ;incstack = 0
  5067                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5068  0D35  0021               	movlb	1	; select bank1
  5069  0D36  0823               	movf	log@x^(0+128),w
  5070  0D37  00F1               	movwf	___ftge@ff1
  5071  0D38  0824               	movf	(log@x+1)^(0+128),w
  5072  0D39  00F2               	movwf	___ftge@ff1+1
  5073  0D3A  0825               	movf	(log@x+2)^(0+128),w
  5074  0D3B  00F3               	movwf	___ftge@ff1+2
  5075  0D3C  3000               	movlw	0
  5076  0D3D  00F4               	movwf	___ftge@ff2
  5077  0D3E  3000               	movlw	0
  5078  0D3F  00F5               	movwf	___ftge@ff2+1
  5079  0D40  3000               	movlw	0
  5080  0D41  00F6               	movwf	___ftge@ff2+2
  5081  0D42  3188  2022  318D   	fcall	___ftge
  5082  0D45  1803               	btfsc	3,0
  5083  0D46  2D54               	goto	l2795
  5084  0D47  3021               	movlw	33
  5085  0D48  0022               	movlb	2	; select bank2
  5086  0D49  00C1               	movwf	_errno^(0+256)
  5087  0D4A  3000               	movlw	0
  5088  0D4B  00C2               	movwf	(_errno^(0+256)+1)
  5089  0D4C  3000               	movlw	0
  5090  0D4D  0021               	movlb	1	; select bank1
  5091  0D4E  00A3               	movwf	?_log^(0+128)
  5092  0D4F  3000               	movlw	0
  5093  0D50  00A4               	movwf	(?_log+1)^(0+128)
  5094  0D51  3000               	movlw	0
  5095  0D52  00A5               	movwf	(?_log+2)^(0+128)
  5096  0D53  0008               	return
  5097  0D54                     l2795:	
  5098  0D54  0021               	movlb	1	; select bank1
  5099  0D55  0825               	movf	(log@x+2)^(0+128),w
  5100  0D56  0424               	iorwf	(log@x+1)^(0+128),w
  5101  0D57  0423               	iorwf	log@x^(0+128),w
  5102  0D58  1D03               	skipz
  5103  0D59  2D67               	goto	l2801
  5104  0D5A  3022               	movlw	34
  5105  0D5B  0022               	movlb	2	; select bank2
  5106  0D5C  00C1               	movwf	_errno^(0+256)
  5107  0D5D  3000               	movlw	0
  5108  0D5E  00C2               	movwf	(_errno^(0+256)+1)
  5109  0D5F  3000               	movlw	0
  5110  0D60  0021               	movlb	1	; select bank1
  5111  0D61  00A3               	movwf	?_log^(0+128)
  5112  0D62  3000               	movlw	0
  5113  0D63  00A4               	movwf	(?_log+1)^(0+128)
  5114  0D64  3000               	movlw	0
  5115  0D65  00A5               	movwf	(?_log+2)^(0+128)
  5116  0D66  0008               	return
  5117  0D67                     l2801:	
  5118  0D67  3000               	movlw	0
  5119  0D68  0020               	movlb	0	; select bank0
  5120  0D69  00DB               	movwf	___ftadd@f1
  5121  0D6A  3080               	movlw	128
  5122  0D6B  00DC               	movwf	___ftadd@f1+1
  5123  0D6C  30BF               	movlw	191
  5124  0D6D  00DD               	movwf	___ftadd@f1+2
  5125  0D6E  3000               	movlw	0
  5126  0D6F  00CB               	movwf	___ftmul@f1
  5127  0D70  3000               	movlw	0
  5128  0D71  00CC               	movwf	___ftmul@f1+1
  5129  0D72  3040               	movlw	64
  5130  0D73  00CD               	movwf	___ftmul@f1+2
  5131  0D74  30A6               	movlw	(low (log@exponent| 0))& (0+255)
  5132  0D75  00EF               	movwf	??_log
  5133  0D76  086F               	movf	??_log,w
  5134  0D77  00F4               	movwf	frexp@eptr
  5135  0D78  0021               	movlb	1	; select bank1
  5136  0D79  0823               	movf	log@x^(0+128),w
  5137  0D7A  00F1               	movwf	frexp@value
  5138  0D7B  0824               	movf	(log@x+1)^(0+128),w
  5139  0D7C  00F2               	movwf	frexp@value+1
  5140  0D7D  0825               	movf	(log@x+2)^(0+128),w
  5141  0D7E  00F3               	movwf	frexp@value+2
  5142  0D7F  3188  205D  318D   	fcall	_frexp
  5143  0D82  0871               	movf	?_frexp,w
  5144  0D83  0020               	movlb	0	; select bank0
  5145  0D84  00CE               	movwf	___ftmul@f2
  5146  0D85  0872               	movf	?_frexp+1,w
  5147  0D86  00CF               	movwf	___ftmul@f2+1
  5148  0D87  0873               	movf	?_frexp+2,w
  5149  0D88  00D0               	movwf	___ftmul@f2+2
  5150  0D89  318C  2481  318D   	fcall	___ftmul
  5151  0D8C  0020               	movlb	0	; select bank0
  5152  0D8D  084B               	movf	?___ftmul,w
  5153  0D8E  00DE               	movwf	___ftadd@f2
  5154  0D8F  084C               	movf	?___ftmul+1,w
  5155  0D90  00DF               	movwf	___ftadd@f2+1
  5156  0D91  084D               	movf	?___ftmul+2,w
  5157  0D92  00E0               	movwf	___ftadd@f2+2
  5158  0D93  318E  2601  318D   	fcall	___ftadd
  5159  0D96  0020               	movlb	0	; select bank0
  5160  0D97  085B               	movf	?___ftadd,w
  5161  0D98  0021               	movlb	1	; select bank1
  5162  0D99  00A3               	movwf	log@x^(0+128)
  5163  0D9A  0020               	movlb	0	; select bank0
  5164  0D9B  085C               	movf	?___ftadd+1,w
  5165  0D9C  0021               	movlb	1	; select bank1
  5166  0D9D  00A4               	movwf	(log@x+1)^(0+128)
  5167  0D9E  0020               	movlb	0	; select bank0
  5168  0D9F  085D               	movf	?___ftadd+2,w
  5169  0DA0  0021               	movlb	1	; select bank1
  5170  0DA1  00A5               	movwf	(log@x+2)^(0+128)
  5171  0DA2  30FF               	movlw	255
  5172  0DA3  07A6               	addwf	log@exponent^(0+128),f
  5173  0DA4  30FF               	movlw	255
  5174  0DA5  3DA7               	addwfc	(log@exponent+1)^(0+128),f
  5175  0DA6  0823               	movf	log@x^(0+128),w
  5176  0DA7  0020               	movlb	0	; select bank0
  5177  0DA8  00E8               	movwf	eval_poly@x
  5178  0DA9  0021               	movlb	1	; select bank1
  5179  0DAA  0824               	movf	(log@x+1)^(0+128),w
  5180  0DAB  0020               	movlb	0	; select bank0
  5181  0DAC  00E9               	movwf	eval_poly@x+1
  5182  0DAD  0021               	movlb	1	; select bank1
  5183  0DAE  0825               	movf	(log@x+2)^(0+128),w
  5184  0DAF  0020               	movlb	0	; select bank0
  5185  0DB0  00EA               	movwf	eval_poly@x+2
  5186  0DB1  3049               	movlw	low (log@coeff| (0+32768))
  5187  0DB2  00EB               	movwf	eval_poly@d
  5188  0DB3  3098               	movlw	high (log@coeff| (0+32768))
  5189  0DB4  00EC               	movwf	eval_poly@d+1
  5190  0DB5  3008               	movlw	8
  5191  0DB6  00ED               	movwf	eval_poly@n
  5192  0DB7  3000               	movlw	0
  5193  0DB8  00EE               	movwf	eval_poly@n+1
  5194  0DB9  3189  2139  318D   	fcall	_eval_poly
  5195  0DBC  0020               	movlb	0	; select bank0
  5196  0DBD  0868               	movf	?_eval_poly,w
  5197  0DBE  0021               	movlb	1	; select bank1
  5198  0DBF  00A3               	movwf	log@x^(0+128)
  5199  0DC0  0020               	movlb	0	; select bank0
  5200  0DC1  0869               	movf	?_eval_poly+1,w
  5201  0DC2  0021               	movlb	1	; select bank1
  5202  0DC3  00A4               	movwf	(log@x+1)^(0+128)
  5203  0DC4  0020               	movlb	0	; select bank0
  5204  0DC5  086A               	movf	?_eval_poly+2,w
  5205  0DC6  0021               	movlb	1	; select bank1
  5206  0DC7  00A5               	movwf	(log@x+2)^(0+128)
  5207  0DC8  0823               	movf	log@x^(0+128),w
  5208  0DC9  0020               	movlb	0	; select bank0
  5209  0DCA  00DB               	movwf	___ftadd@f1
  5210  0DCB  0021               	movlb	1	; select bank1
  5211  0DCC  0824               	movf	(log@x+1)^(0+128),w
  5212  0DCD  0020               	movlb	0	; select bank0
  5213  0DCE  00DC               	movwf	___ftadd@f1+1
  5214  0DCF  0021               	movlb	1	; select bank1
  5215  0DD0  0825               	movf	(log@x+2)^(0+128),w
  5216  0DD1  0020               	movlb	0	; select bank0
  5217  0DD2  00DD               	movwf	___ftadd@f1+2
  5218  0DD3  3072               	movlw	114
  5219  0DD4  00CB               	movwf	___ftmul@f1
  5220  0DD5  3031               	movlw	49
  5221  0DD6  00CC               	movwf	___ftmul@f1+1
  5222  0DD7  303F               	movlw	63
  5223  0DD8  00CD               	movwf	___ftmul@f1+2
  5224  0DD9  0021               	movlb	1	; select bank1
  5225  0DDA  0827               	movf	(log@exponent+1)^(0+128),w
  5226  0DDB  00FA               	movwf	___awtoft@c+1
  5227  0DDC  0826               	movf	log@exponent^(0+128),w
  5228  0DDD  00F9               	movwf	___awtoft@c
  5229  0DDE  3188  2001  318D   	fcall	___awtoft
  5230  0DE1  0879               	movf	?___awtoft,w
  5231  0DE2  0020               	movlb	0	; select bank0
  5232  0DE3  00CE               	movwf	___ftmul@f2
  5233  0DE4  087A               	movf	?___awtoft+1,w
  5234  0DE5  00CF               	movwf	___ftmul@f2+1
  5235  0DE6  087B               	movf	?___awtoft+2,w
  5236  0DE7  00D0               	movwf	___ftmul@f2+2
  5237  0DE8  318C  2481  318D   	fcall	___ftmul
  5238  0DEB  0020               	movlb	0	; select bank0
  5239  0DEC  084B               	movf	?___ftmul,w
  5240  0DED  00DE               	movwf	___ftadd@f2
  5241  0DEE  084C               	movf	?___ftmul+1,w
  5242  0DEF  00DF               	movwf	___ftadd@f2+1
  5243  0DF0  084D               	movf	?___ftmul+2,w
  5244  0DF1  00E0               	movwf	___ftadd@f2+2
  5245  0DF2  318E  2601         	fcall	___ftadd
  5246  0DF4  0020               	movlb	0	; select bank0
  5247  0DF5  085B               	movf	?___ftadd,w
  5248  0DF6  0021               	movlb	1	; select bank1
  5249  0DF7  00A3               	movwf	?_log^(0+128)
  5250  0DF8  0020               	movlb	0	; select bank0
  5251  0DF9  085C               	movf	?___ftadd+1,w
  5252  0DFA  0021               	movlb	1	; select bank1
  5253  0DFB  00A4               	movwf	(?_log+1)^(0+128)
  5254  0DFC  0020               	movlb	0	; select bank0
  5255  0DFD  085D               	movf	?___ftadd+2,w
  5256  0DFE  0021               	movlb	1	; select bank1
  5257  0DFF  00A5               	movwf	(?_log+2)^(0+128)
  5258  0E00  0008               	return
  5259  0E01                     __end_of_log:	
  5260                           
  5261                           	psect	text11
  5262  044A                     __ptext11:	
  5263 ;; *************** function _exp *****************
  5264 ;; Defined at:
  5265 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\exp.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  x               3   10[BANK1 ] int 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  exponent        2   17[BANK1 ] int 
  5270 ;;  sign            1   19[BANK1 ] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  3   10[BANK1 ] unsigned char 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5280 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;Total ram usage:       10 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    7
  5287 ;; This function calls:
  5288 ;;		___awtoft
  5289 ;;		___ftdiv
  5290 ;;		___ftge
  5291 ;;		___ftmul
  5292 ;;		___ftneg
  5293 ;;		___ftsub
  5294 ;;		___fttol
  5295 ;;		_eval_poly
  5296 ;;		_floor
  5297 ;;		_ldexp
  5298 ;; This function is called by:
  5299 ;;		_pow
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           
  5304                           ;psect for function _exp
  5305  044A                     _exp:	
  5306                           
  5307                           ;incstack = 0
  5308                           ; Regs used in _exp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5309  044A  0021               	movlb	1	; select bank1
  5310  044B  082C               	movf	(exp@x+2)^(0+128),w
  5311  044C  042B               	iorwf	(exp@x+1)^(0+128),w
  5312  044D  042A               	iorwf	exp@x^(0+128),w
  5313  044E  1D03               	skipz
  5314  044F  2C57               	goto	l2461
  5315  0450  3000               	movlw	0
  5316  0451  00AA               	movwf	?_exp^(0+128)
  5317  0452  3080               	movlw	128
  5318  0453  00AB               	movwf	(?_exp+1)^(0+128)
  5319  0454  303F               	movlw	63
  5320  0455  00AC               	movwf	(?_exp+2)^(0+128)
  5321  0456  0008               	return
  5322  0457                     l2461:	
  5323  0457  3072               	movlw	114
  5324  0458  00F1               	movwf	___ftge@ff1
  5325  0459  3031               	movlw	49
  5326  045A  00F2               	movwf	___ftge@ff1+1
  5327  045B  3044               	movlw	68
  5328  045C  00F3               	movwf	___ftge@ff1+2
  5329  045D  082A               	movf	exp@x^(0+128),w
  5330  045E  00F4               	movwf	___ftge@ff2
  5331  045F  082B               	movf	(exp@x+1)^(0+128),w
  5332  0460  00F5               	movwf	___ftge@ff2+1
  5333  0461  082C               	movf	(exp@x+2)^(0+128),w
  5334  0462  00F6               	movwf	___ftge@ff2+2
  5335  0463  3188  2022  3184   	fcall	___ftge
  5336  0466  1803               	btfsc	3,0
  5337  0467  2C75               	goto	l2467
  5338  0468  3022               	movlw	34
  5339  0469  0022               	movlb	2	; select bank2
  5340  046A  00C1               	movwf	_errno^(0+256)
  5341  046B  3000               	movlw	0
  5342  046C  00C2               	movwf	(_errno^(0+256)+1)
  5343  046D  30FF               	movlw	255
  5344  046E  0021               	movlb	1	; select bank1
  5345  046F  00AA               	movwf	?_exp^(0+128)
  5346  0470  307F               	movlw	127
  5347  0471  00AB               	movwf	(?_exp+1)^(0+128)
  5348  0472  307F               	movlw	127
  5349  0473  00AC               	movwf	(?_exp+2)^(0+128)
  5350  0474  0008               	return
  5351  0475                     l2467:	
  5352  0475  0021               	movlb	1	; select bank1
  5353  0476  082A               	movf	exp@x^(0+128),w
  5354  0477  00F1               	movwf	___ftge@ff1
  5355  0478  082B               	movf	(exp@x+1)^(0+128),w
  5356  0479  00F2               	movwf	___ftge@ff1+1
  5357  047A  082C               	movf	(exp@x+2)^(0+128),w
  5358  047B  00F3               	movwf	___ftge@ff1+2
  5359  047C  3049               	movlw	73
  5360  047D  00F4               	movwf	___ftge@ff2
  5361  047E  303A               	movlw	58
  5362  047F  00F5               	movwf	___ftge@ff2+1
  5363  0480  30C4               	movlw	196
  5364  0481  00F6               	movwf	___ftge@ff2+2
  5365  0482  3188  2022  3184   	fcall	___ftge
  5366  0485  1803               	btfsc	3,0
  5367  0486  2C94               	goto	l2473
  5368  0487  3022               	movlw	34
  5369  0488  0022               	movlb	2	; select bank2
  5370  0489  00C1               	movwf	_errno^(0+256)
  5371  048A  3000               	movlw	0
  5372  048B  00C2               	movwf	(_errno^(0+256)+1)
  5373  048C  3000               	movlw	0
  5374  048D  0021               	movlb	1	; select bank1
  5375  048E  00AA               	movwf	?_exp^(0+128)
  5376  048F  3000               	movlw	0
  5377  0490  00AB               	movwf	(?_exp+1)^(0+128)
  5378  0491  3000               	movlw	0
  5379  0492  00AC               	movwf	(?_exp+2)^(0+128)
  5380  0493  0008               	return
  5381  0494                     l2473:	
  5382  0494  0021               	movlb	1	; select bank1
  5383  0495  082A               	movf	exp@x^(0+128),w
  5384  0496  00F1               	movwf	___ftge@ff1
  5385  0497  082B               	movf	(exp@x+1)^(0+128),w
  5386  0498  00F2               	movwf	___ftge@ff1+1
  5387  0499  082C               	movf	(exp@x+2)^(0+128),w
  5388  049A  00F3               	movwf	___ftge@ff1+2
  5389  049B  3000               	movlw	0
  5390  049C  00F4               	movwf	___ftge@ff2
  5391  049D  3000               	movlw	0
  5392  049E  00F5               	movwf	___ftge@ff2+1
  5393  049F  3000               	movlw	0
  5394  04A0  00F6               	movwf	___ftge@ff2+2
  5395  04A1  3188  2022  3184   	fcall	___ftge
  5396  04A4  1803               	btfsc	3,0
  5397  04A5  2CA8               	goto	u2980
  5398  04A6  3001               	movlw	1
  5399  04A7  2CA9               	goto	u2990
  5400  04A8                     u2980:	
  5401  04A8  3000               	movlw	0
  5402  04A9                     u2990:	
  5403  04A9  0021               	movlb	1	; select bank1
  5404  04AA  00AD               	movwf	??_exp^(0+128)
  5405  04AB  082D               	movf	??_exp^(0+128),w
  5406  04AC  00B3               	movwf	exp@sign^(0+128)
  5407  04AD  0833               	movf	exp@sign^(0+128),w
  5408  04AE  1903               	btfsc	3,2
  5409  04AF  2CCA               	goto	l2479
  5410  04B0  082A               	movf	exp@x^(0+128),w
  5411  04B1  0020               	movlb	0	; select bank0
  5412  04B2  00C8               	movwf	___ftneg@f1
  5413  04B3  0021               	movlb	1	; select bank1
  5414  04B4  082B               	movf	(exp@x+1)^(0+128),w
  5415  04B5  0020               	movlb	0	; select bank0
  5416  04B6  00C9               	movwf	___ftneg@f1+1
  5417  04B7  0021               	movlb	1	; select bank1
  5418  04B8  082C               	movf	(exp@x+2)^(0+128),w
  5419  04B9  0020               	movlb	0	; select bank0
  5420  04BA  00CA               	movwf	___ftneg@f1+2
  5421  04BB  3196  266B  3184   	fcall	___ftneg
  5422  04BE  0020               	movlb	0	; select bank0
  5423  04BF  0848               	movf	?___ftneg,w
  5424  04C0  0021               	movlb	1	; select bank1
  5425  04C1  00AA               	movwf	exp@x^(0+128)
  5426  04C2  0020               	movlb	0	; select bank0
  5427  04C3  0849               	movf	?___ftneg+1,w
  5428  04C4  0021               	movlb	1	; select bank1
  5429  04C5  00AB               	movwf	(exp@x+1)^(0+128)
  5430  04C6  0020               	movlb	0	; select bank0
  5431  04C7  084A               	movf	?___ftneg+2,w
  5432  04C8  0021               	movlb	1	; select bank1
  5433  04C9  00AC               	movwf	(exp@x+2)^(0+128)
  5434  04CA                     l2479:	
  5435  04CA  30AA               	movlw	170
  5436  04CB  0020               	movlb	0	; select bank0
  5437  04CC  00CB               	movwf	___ftmul@f1
  5438  04CD  30B8               	movlw	184
  5439  04CE  00CC               	movwf	___ftmul@f1+1
  5440  04CF  303F               	movlw	63
  5441  04D0  00CD               	movwf	___ftmul@f1+2
  5442  04D1  0021               	movlb	1	; select bank1
  5443  04D2  082A               	movf	exp@x^(0+128),w
  5444  04D3  0020               	movlb	0	; select bank0
  5445  04D4  00CE               	movwf	___ftmul@f2
  5446  04D5  0021               	movlb	1	; select bank1
  5447  04D6  082B               	movf	(exp@x+1)^(0+128),w
  5448  04D7  0020               	movlb	0	; select bank0
  5449  04D8  00CF               	movwf	___ftmul@f2+1
  5450  04D9  0021               	movlb	1	; select bank1
  5451  04DA  082C               	movf	(exp@x+2)^(0+128),w
  5452  04DB  0020               	movlb	0	; select bank0
  5453  04DC  00D0               	movwf	___ftmul@f2+2
  5454  04DD  318C  2481  3184   	fcall	___ftmul
  5455  04E0  0020               	movlb	0	; select bank0
  5456  04E1  084B               	movf	?___ftmul,w
  5457  04E2  0021               	movlb	1	; select bank1
  5458  04E3  00AA               	movwf	exp@x^(0+128)
  5459  04E4  0020               	movlb	0	; select bank0
  5460  04E5  084C               	movf	?___ftmul+1,w
  5461  04E6  0021               	movlb	1	; select bank1
  5462  04E7  00AB               	movwf	(exp@x+1)^(0+128)
  5463  04E8  0020               	movlb	0	; select bank0
  5464  04E9  084D               	movf	?___ftmul+2,w
  5465  04EA  0021               	movlb	1	; select bank1
  5466  04EB  00AC               	movwf	(exp@x+2)^(0+128)
  5467  04EC  082A               	movf	exp@x^(0+128),w
  5468  04ED  0020               	movlb	0	; select bank0
  5469  04EE  00E8               	movwf	floor@x
  5470  04EF  0021               	movlb	1	; select bank1
  5471  04F0  082B               	movf	(exp@x+1)^(0+128),w
  5472  04F1  0020               	movlb	0	; select bank0
  5473  04F2  00E9               	movwf	floor@x+1
  5474  04F3  0021               	movlb	1	; select bank1
  5475  04F4  082C               	movf	(exp@x+2)^(0+128),w
  5476  04F5  0020               	movlb	0	; select bank0
  5477  04F6  00EA               	movwf	floor@x+2
  5478  04F7  318B  233E  3184   	fcall	_floor
  5479  04FA  0020               	movlb	0	; select bank0
  5480  04FB  0868               	movf	?_floor,w
  5481  04FC  0021               	movlb	1	; select bank1
  5482  04FD  00AE               	movwf	_exp$891^(0+128)
  5483  04FE  0020               	movlb	0	; select bank0
  5484  04FF  0869               	movf	?_floor+1,w
  5485  0500  0021               	movlb	1	; select bank1
  5486  0501  00AF               	movwf	(_exp$891+1)^(0+128)
  5487  0502  0020               	movlb	0	; select bank0
  5488  0503  086A               	movf	?_floor+2,w
  5489  0504  0021               	movlb	1	; select bank1
  5490  0505  00B0               	movwf	(_exp$891+2)^(0+128)
  5491  0506  082E               	movf	_exp$891^(0+128),w
  5492  0507  0020               	movlb	0	; select bank0
  5493  0508  00B2               	movwf	___fttol@f1
  5494  0509  0021               	movlb	1	; select bank1
  5495  050A  082F               	movf	(_exp$891+1)^(0+128),w
  5496  050B  0020               	movlb	0	; select bank0
  5497  050C  00B3               	movwf	___fttol@f1+1
  5498  050D  0021               	movlb	1	; select bank1
  5499  050E  0830               	movf	(_exp$891+2)^(0+128),w
  5500  050F  0020               	movlb	0	; select bank0
  5501  0510  00B4               	movwf	___fttol@f1+2
  5502  0511  318A  2226  3184   	fcall	___fttol
  5503  0514  0020               	movlb	0	; select bank0
  5504  0515  0833               	movf	?___fttol+1,w
  5505  0516  0021               	movlb	1	; select bank1
  5506  0517  00B2               	movwf	(exp@exponent+1)^(0+128)
  5507  0518  0020               	movlb	0	; select bank0
  5508  0519  0832               	movf	?___fttol,w
  5509  051A  0021               	movlb	1	; select bank1
  5510  051B  00B1               	movwf	exp@exponent^(0+128)
  5511  051C  0832               	movf	(exp@exponent+1)^(0+128),w
  5512  051D  00FA               	movwf	___awtoft@c+1
  5513  051E  0831               	movf	exp@exponent^(0+128),w
  5514  051F  00F9               	movwf	___awtoft@c
  5515  0520  3188  2001  3184   	fcall	___awtoft
  5516  0523  0879               	movf	?___awtoft,w
  5517  0524  0020               	movlb	0	; select bank0
  5518  0525  00E8               	movwf	___ftsub@f2
  5519  0526  087A               	movf	?___awtoft+1,w
  5520  0527  00E9               	movwf	___ftsub@f2+1
  5521  0528  087B               	movf	?___awtoft+2,w
  5522  0529  00EA               	movwf	___ftsub@f2+2
  5523  052A  0021               	movlb	1	; select bank1
  5524  052B  082A               	movf	exp@x^(0+128),w
  5525  052C  0020               	movlb	0	; select bank0
  5526  052D  00EB               	movwf	___ftsub@f1
  5527  052E  0021               	movlb	1	; select bank1
  5528  052F  082B               	movf	(exp@x+1)^(0+128),w
  5529  0530  0020               	movlb	0	; select bank0
  5530  0531  00EC               	movwf	___ftsub@f1+1
  5531  0532  0021               	movlb	1	; select bank1
  5532  0533  082C               	movf	(exp@x+2)^(0+128),w
  5533  0534  0020               	movlb	0	; select bank0
  5534  0535  00ED               	movwf	___ftsub@f1+2
  5535  0536  3197  270B  3184   	fcall	___ftsub
  5536  0539  0020               	movlb	0	; select bank0
  5537  053A  0868               	movf	?___ftsub,w
  5538  053B  0021               	movlb	1	; select bank1
  5539  053C  00AA               	movwf	exp@x^(0+128)
  5540  053D  0020               	movlb	0	; select bank0
  5541  053E  0869               	movf	?___ftsub+1,w
  5542  053F  0021               	movlb	1	; select bank1
  5543  0540  00AB               	movwf	(exp@x+1)^(0+128)
  5544  0541  0020               	movlb	0	; select bank0
  5545  0542  086A               	movf	?___ftsub+2,w
  5546  0543  0021               	movlb	1	; select bank1
  5547  0544  00AC               	movwf	(exp@x+2)^(0+128)
  5548  0545  082A               	movf	exp@x^(0+128),w
  5549  0546  0020               	movlb	0	; select bank0
  5550  0547  00E8               	movwf	eval_poly@x
  5551  0548  0021               	movlb	1	; select bank1
  5552  0549  082B               	movf	(exp@x+1)^(0+128),w
  5553  054A  0020               	movlb	0	; select bank0
  5554  054B  00E9               	movwf	eval_poly@x+1
  5555  054C  0021               	movlb	1	; select bank1
  5556  054D  082C               	movf	(exp@x+2)^(0+128),w
  5557  054E  0020               	movlb	0	; select bank0
  5558  054F  00EA               	movwf	eval_poly@x+2
  5559  0550  302B               	movlw	low (exp@coeff| (0+32768))
  5560  0551  00EB               	movwf	eval_poly@d
  5561  0552  3098               	movlw	high (exp@coeff| (0+32768))
  5562  0553  00EC               	movwf	eval_poly@d+1
  5563  0554  3009               	movlw	9
  5564  0555  00ED               	movwf	eval_poly@n
  5565  0556  3000               	movlw	0
  5566  0557  00EE               	movwf	eval_poly@n+1
  5567  0558  3189  2139  3184   	fcall	_eval_poly
  5568  055B  0020               	movlb	0	; select bank0
  5569  055C  0868               	movf	?_eval_poly,w
  5570  055D  0021               	movlb	1	; select bank1
  5571  055E  00A3               	movwf	ldexp@value^(0+128)
  5572  055F  0020               	movlb	0	; select bank0
  5573  0560  0869               	movf	?_eval_poly+1,w
  5574  0561  0021               	movlb	1	; select bank1
  5575  0562  00A4               	movwf	(ldexp@value+1)^(0+128)
  5576  0563  0020               	movlb	0	; select bank0
  5577  0564  086A               	movf	?_eval_poly+2,w
  5578  0565  0021               	movlb	1	; select bank1
  5579  0566  00A5               	movwf	(ldexp@value+2)^(0+128)
  5580  0567  0832               	movf	(exp@exponent+1)^(0+128),w
  5581  0568  00A7               	movwf	(ldexp@newexp+1)^(0+128)
  5582  0569  0831               	movf	exp@exponent^(0+128),w
  5583  056A  00A6               	movwf	ldexp@newexp^(0+128)
  5584  056B  3189  21AD  3184   	fcall	_ldexp
  5585  056E  0021               	movlb	1	; select bank1
  5586  056F  0823               	movf	?_ldexp^(0+128),w
  5587  0570  00AA               	movwf	exp@x^(0+128)
  5588  0571  0824               	movf	(?_ldexp+1)^(0+128),w
  5589  0572  00AB               	movwf	(exp@x+1)^(0+128)
  5590  0573  0825               	movf	(?_ldexp+2)^(0+128),w
  5591  0574  00AC               	movwf	(exp@x+2)^(0+128)
  5592  0575  0833               	movf	exp@sign^(0+128),w
  5593  0576  1903               	btfsc	3,2
  5594  0577  0008               	return
  5595  0578  0A2A               	incf	exp@x^(0+128),w
  5596  0579  307F               	movlw	127
  5597  057A  1903               	skipnz
  5598  057B  062B               	xorwf	(exp@x+1)^(0+128),w
  5599  057C  307F               	movlw	127
  5600  057D  1903               	skipnz
  5601  057E  062C               	xorwf	(exp@x+2)^(0+128),w
  5602  057F  1D03               	btfss	3,2
  5603  0580  2D88               	goto	l2497
  5604  0581  3000               	movlw	0
  5605  0582  00AA               	movwf	?_exp^(0+128)
  5606  0583  3000               	movlw	0
  5607  0584  00AB               	movwf	(?_exp+1)^(0+128)
  5608  0585  3000               	movlw	0
  5609  0586  00AC               	movwf	(?_exp+2)^(0+128)
  5610  0587  0008               	return
  5611  0588                     l2497:	
  5612  0588  082A               	movf	exp@x^(0+128),w
  5613  0589  0020               	movlb	0	; select bank0
  5614  058A  00A2               	movwf	___ftdiv@f2
  5615  058B  0021               	movlb	1	; select bank1
  5616  058C  082B               	movf	(exp@x+1)^(0+128),w
  5617  058D  0020               	movlb	0	; select bank0
  5618  058E  00A3               	movwf	___ftdiv@f2+1
  5619  058F  0021               	movlb	1	; select bank1
  5620  0590  082C               	movf	(exp@x+2)^(0+128),w
  5621  0591  0020               	movlb	0	; select bank0
  5622  0592  00A4               	movwf	___ftdiv@f2+2
  5623  0593  3000               	movlw	0
  5624  0594  00A5               	movwf	___ftdiv@f1
  5625  0595  3080               	movlw	128
  5626  0596  00A6               	movwf	___ftdiv@f1+1
  5627  0597  303F               	movlw	63
  5628  0598  00A7               	movwf	___ftdiv@f1+2
  5629  0599  318B  23D8         	fcall	___ftdiv
  5630  059B  0020               	movlb	0	; select bank0
  5631  059C  0822               	movf	?___ftdiv,w
  5632  059D  0021               	movlb	1	; select bank1
  5633  059E  00AA               	movwf	?_exp^(0+128)
  5634  059F  0020               	movlb	0	; select bank0
  5635  05A0  0823               	movf	?___ftdiv+1,w
  5636  05A1  0021               	movlb	1	; select bank1
  5637  05A2  00AB               	movwf	(?_exp+1)^(0+128)
  5638  05A3  0020               	movlb	0	; select bank0
  5639  05A4  0824               	movf	?___ftdiv+2,w
  5640  05A5  0021               	movlb	1	; select bank1
  5641  05A6  00AC               	movwf	(?_exp+2)^(0+128)
  5642  05A7  0008               	return
  5643  05A8                     __end_of_exp:	
  5644                           
  5645                           	psect	text12
  5646  09AD                     __ptext12:	
  5647 ;; *************** function _ldexp *****************
  5648 ;; Defined at:
  5649 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\frexp.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  value           3    3[BANK1 ] unsigned char 
  5652 ;;  newexp          2    6[BANK1 ] int 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  3    3[BANK1 ] int 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, pclath, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5664 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;Total ram usage:        7 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    5
  5671 ;; This function calls:
  5672 ;;		___ftge
  5673 ;; This function is called by:
  5674 ;;		_exp
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _ldexp
  5680  09AD                     _ldexp:	
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in _ldexp: [wreg+status,2+status,0+pclath+cstack]
  5684  09AD  0021               	movlb	1	; select bank1
  5685  09AE  0825               	movf	(ldexp@value+2)^(0+128),w
  5686  09AF  0424               	iorwf	(ldexp@value+1)^(0+128),w
  5687  09B0  0423               	iorwf	ldexp@value^(0+128),w
  5688  09B1  1D03               	skipz
  5689  09B2  29BA               	goto	l2263
  5690  09B3  3000               	movlw	0
  5691  09B4  00A3               	movwf	?_ldexp^(0+128)
  5692  09B5  3000               	movlw	0
  5693  09B6  00A4               	movwf	(?_ldexp+1)^(0+128)
  5694  09B7  3000               	movlw	0
  5695  09B8  00A5               	movwf	(?_ldexp+2)^(0+128)
  5696  09B9  0008               	return
  5697  09BA                     l2263:	
  5698  09BA  0825               	movf	(ldexp@value^(0+128)+2),w
  5699  09BB  397F               	andlw	127
  5700  09BC  00A8               	movwf	??_ldexp^(0+128)
  5701  09BD  01A9               	clrf	(??_ldexp^(0+128)+1)
  5702  09BE  35A8               	lslf	??_ldexp^(0+128),f
  5703  09BF  0DA9               	rlf	(??_ldexp^(0+128)+1),f
  5704  09C0  0828               	movf	??_ldexp^(0+128),w
  5705  09C1  07A6               	addwf	ldexp@newexp^(0+128),f
  5706  09C2  0829               	movf	(??_ldexp+1)^(0+128),w
  5707  09C3  3DA7               	addwfc	(ldexp@newexp+1)^(0+128),f
  5708  09C4  0D24               	rlf	(ldexp@value^(0+128)+1),w
  5709  09C5  0D24               	rlf	(ldexp@value^(0+128)+1),w
  5710  09C6  3901               	andlw	1
  5711  09C7  00A8               	movwf	??_ldexp^(0+128)
  5712  09C8  01A9               	clrf	(??_ldexp^(0+128)+1)
  5713  09C9  0828               	movf	??_ldexp^(0+128),w
  5714  09CA  07A6               	addwf	ldexp@newexp^(0+128),f
  5715  09CB  0829               	movf	(??_ldexp+1)^(0+128),w
  5716  09CC  3DA7               	addwfc	(ldexp@newexp+1)^(0+128),f
  5717  09CD  1FA7               	btfss	(ldexp@newexp+1)^(0+128),7
  5718  09CE  29DC               	goto	l2273
  5719  09CF  3022               	movlw	34
  5720  09D0  0022               	movlb	2	; select bank2
  5721  09D1  00C1               	movwf	_errno^(0+256)
  5722  09D2  3000               	movlw	0
  5723  09D3  00C2               	movwf	(_errno^(0+256)+1)
  5724  09D4  3000               	movlw	0
  5725  09D5  0021               	movlb	1	; select bank1
  5726  09D6  00A3               	movwf	?_ldexp^(0+128)
  5727  09D7  3000               	movlw	0
  5728  09D8  00A4               	movwf	(?_ldexp+1)^(0+128)
  5729  09D9  3000               	movlw	0
  5730  09DA  00A5               	movwf	(?_ldexp+2)^(0+128)
  5731  09DB  0008               	return
  5732  09DC                     l2273:	
  5733  09DC  0827               	movf	(ldexp@newexp+1)^(0+128),w
  5734  09DD  3A80               	xorlw	128
  5735  09DE  00A8               	movwf	??_ldexp^(0+128)
  5736  09DF  3081               	movlw	129
  5737  09E0  0228               	subwf	??_ldexp^(0+128),w
  5738  09E1  1D03               	skipz
  5739  09E2  29E5               	goto	u2705
  5740  09E3  3000               	movlw	0
  5741  09E4  0226               	subwf	ldexp@newexp^(0+128),w
  5742  09E5                     u2705:	
  5743  09E5  1C03               	skipc
  5744  09E6  2A0E               	goto	l2289
  5745  09E7  3022               	movlw	34
  5746  09E8  0022               	movlb	2	; select bank2
  5747  09E9  00C1               	movwf	_errno^(0+256)
  5748  09EA  3000               	movlw	0
  5749  09EB  00C2               	movwf	(_errno^(0+256)+1)
  5750  09EC  0021               	movlb	1	; select bank1
  5751  09ED  0823               	movf	ldexp@value^(0+128),w
  5752  09EE  00F1               	movwf	___ftge@ff1
  5753  09EF  0824               	movf	(ldexp@value+1)^(0+128),w
  5754  09F0  00F2               	movwf	___ftge@ff1+1
  5755  09F1  0825               	movf	(ldexp@value+2)^(0+128),w
  5756  09F2  00F3               	movwf	___ftge@ff1+2
  5757  09F3  3000               	movlw	0
  5758  09F4  00F4               	movwf	___ftge@ff2
  5759  09F5  3000               	movlw	0
  5760  09F6  00F5               	movwf	___ftge@ff2+1
  5761  09F7  3000               	movlw	0
  5762  09F8  00F6               	movwf	___ftge@ff2+2
  5763  09F9  3188  2022  3189   	fcall	___ftge
  5764  09FC  1803               	btfsc	3,0
  5765  09FD  2A06               	goto	l2285
  5766  09FE  30FF               	movlw	255
  5767  09FF  0021               	movlb	1	; select bank1
  5768  0A00  00A3               	movwf	?_ldexp^(0+128)
  5769  0A01  307F               	movlw	127
  5770  0A02  00A4               	movwf	(?_ldexp+1)^(0+128)
  5771  0A03  30FF               	movlw	255
  5772  0A04  00A5               	movwf	(?_ldexp+2)^(0+128)
  5773  0A05  0008               	return
  5774  0A06                     l2285:	
  5775  0A06  30FF               	movlw	255
  5776  0A07  0021               	movlb	1	; select bank1
  5777  0A08  00A3               	movwf	?_ldexp^(0+128)
  5778  0A09  307F               	movlw	127
  5779  0A0A  00A4               	movwf	(?_ldexp+1)^(0+128)
  5780  0A0B  307F               	movlw	127
  5781  0A0C  00A5               	movwf	(?_ldexp+2)^(0+128)
  5782  0A0D  0008               	return
  5783  0A0E                     l2289:	
  5784  0A0E  0021               	movlb	1	; select bank1
  5785  0A0F  0827               	movf	(ldexp@newexp+1)^(0+128),w
  5786  0A10  00A9               	movwf	(??_ldexp^(0+128)+1)
  5787  0A11  0826               	movf	ldexp@newexp^(0+128),w
  5788  0A12  00A8               	movwf	??_ldexp^(0+128)
  5789  0A13  0D29               	rlf	(??_ldexp^(0+128)+1),w
  5790  0A14  0CA9               	rrf	(??_ldexp^(0+128)+1),f
  5791  0A15  0CA8               	rrf	??_ldexp^(0+128),f
  5792  0A16  0825               	movf	(ldexp@value^(0+128)+2),w
  5793  0A17  0628               	xorwf	??_ldexp^(0+128),w
  5794  0A18  3980               	andlw	-128
  5795  0A19  0628               	xorwf	??_ldexp^(0+128),w
  5796  0A1A  00A5               	movwf	(ldexp@value^(0+128)+2)
  5797  0A1B  0826               	movf	ldexp@newexp^(0+128),w
  5798  0A1C  3901               	andlw	1
  5799  0A1D  00A8               	movwf	??_ldexp^(0+128)
  5800  0A1E  0CA8               	rrf	??_ldexp^(0+128),f
  5801  0A1F  0CA8               	rrf	??_ldexp^(0+128),f
  5802  0A20  0824               	movf	(ldexp@value^(0+128)+1),w
  5803  0A21  0628               	xorwf	??_ldexp^(0+128),w
  5804  0A22  397F               	andlw	-129
  5805  0A23  0628               	xorwf	??_ldexp^(0+128),w
  5806  0A24  00A4               	movwf	(ldexp@value^(0+128)+1)
  5807  0A25  0008               	return
  5808  0A26                     __end_of_ldexp:	
  5809                           
  5810                           	psect	text13
  5811  0B3E                     __ptext13:	
  5812 ;; *************** function _floor *****************
  5813 ;; Defined at:
  5814 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\floor.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  x               3   72[BANK0 ] int 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  i               3    0[BANK1 ] int 
  5819 ;;  expon           2    3[BANK1 ] int 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  3   72[BANK0 ] int 
  5822 ;; Registers used:
  5823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5829 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Totals:         0       4       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;Total ram usage:        9 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    6
  5836 ;; This function calls:
  5837 ;;		___altoft
  5838 ;;		___ftadd
  5839 ;;		___ftge
  5840 ;;		___fttol
  5841 ;;		_frexp
  5842 ;; This function is called by:
  5843 ;;		_exp
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _floor
  5849  0B3E                     _floor:	
  5850                           
  5851                           ;incstack = 0
  5852                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5853  0B3E  0020               	movlb	0	; select bank0
  5854  0B3F  0868               	movf	floor@x,w
  5855  0B40  00F1               	movwf	frexp@value
  5856  0B41  0869               	movf	floor@x+1,w
  5857  0B42  00F2               	movwf	frexp@value+1
  5858  0B43  086A               	movf	floor@x+2,w
  5859  0B44  00F3               	movwf	frexp@value+2
  5860  0B45  30A3               	movlw	(low (floor@expon| 0))& (0+255)
  5861  0B46  00EB               	movwf	??_floor
  5862  0B47  086B               	movf	??_floor,w
  5863  0B48  00F4               	movwf	frexp@eptr
  5864  0B49  3188  205D  318B   	fcall	_frexp
  5865  0B4C  0021               	movlb	1	; select bank1
  5866  0B4D  1FA4               	btfss	(floor@expon+1)^(0+128),7
  5867  0B4E  2B71               	goto	l2233
  5868  0B4F  0020               	movlb	0	; select bank0
  5869  0B50  0868               	movf	floor@x,w
  5870  0B51  00F1               	movwf	___ftge@ff1
  5871  0B52  0869               	movf	floor@x+1,w
  5872  0B53  00F2               	movwf	___ftge@ff1+1
  5873  0B54  086A               	movf	floor@x+2,w
  5874  0B55  00F3               	movwf	___ftge@ff1+2
  5875  0B56  3000               	movlw	0
  5876  0B57  00F4               	movwf	___ftge@ff2
  5877  0B58  3000               	movlw	0
  5878  0B59  00F5               	movwf	___ftge@ff2+1
  5879  0B5A  3000               	movlw	0
  5880  0B5B  00F6               	movwf	___ftge@ff2+2
  5881  0B5C  3188  2022  318B   	fcall	___ftge
  5882  0B5F  1803               	btfsc	3,0
  5883  0B60  2B69               	goto	l2229
  5884  0B61  3000               	movlw	0
  5885  0B62  0020               	movlb	0	; select bank0
  5886  0B63  00E8               	movwf	?_floor
  5887  0B64  3080               	movlw	128
  5888  0B65  00E9               	movwf	?_floor+1
  5889  0B66  30BF               	movlw	191
  5890  0B67  00EA               	movwf	?_floor+2
  5891  0B68  0008               	return
  5892  0B69                     l2229:	
  5893  0B69  3000               	movlw	0
  5894  0B6A  0020               	movlb	0	; select bank0
  5895  0B6B  00E8               	movwf	?_floor
  5896  0B6C  3000               	movlw	0
  5897  0B6D  00E9               	movwf	?_floor+1
  5898  0B6E  3000               	movlw	0
  5899  0B6F  00EA               	movwf	?_floor+2
  5900  0B70  0008               	return
  5901  0B71                     l2233:	
  5902  0B71  3000               	movlw	0
  5903  0B72  0021               	movlb	1	; select bank1
  5904  0B73  0224               	subwf	(floor@expon+1)^(0+128),w
  5905  0B74  3015               	movlw	21
  5906  0B75  1903               	skipnz
  5907  0B76  0223               	subwf	floor@expon^(0+128),w
  5908  0B77  1803               	btfsc	3,0
  5909  0B78  0008               	return
  5910  0B79  0020               	movlb	0	; select bank0
  5911  0B7A  0868               	movf	floor@x,w
  5912  0B7B  00B2               	movwf	___fttol@f1
  5913  0B7C  0869               	movf	floor@x+1,w
  5914  0B7D  00B3               	movwf	___fttol@f1+1
  5915  0B7E  086A               	movf	floor@x+2,w
  5916  0B7F  00B4               	movwf	___fttol@f1+2
  5917  0B80  318A  2226  318B   	fcall	___fttol
  5918  0B83  0020               	movlb	0	; select bank0
  5919  0B84  0835               	movf	?___fttol+3,w
  5920  0B85  00C3               	movwf	___altoft@c+3
  5921  0B86  0834               	movf	?___fttol+2,w
  5922  0B87  00C2               	movwf	___altoft@c+2
  5923  0B88  0833               	movf	?___fttol+1,w
  5924  0B89  00C1               	movwf	___altoft@c+1
  5925  0B8A  0832               	movf	?___fttol,w
  5926  0B8B  00C0               	movwf	___altoft@c
  5927  0B8C  3188  2098  318B   	fcall	___altoft
  5928  0B8F  0020               	movlb	0	; select bank0
  5929  0B90  0840               	movf	?___altoft,w
  5930  0B91  0021               	movlb	1	; select bank1
  5931  0B92  00A0               	movwf	floor@i^(0+128)
  5932  0B93  0020               	movlb	0	; select bank0
  5933  0B94  0841               	movf	?___altoft+1,w
  5934  0B95  0021               	movlb	1	; select bank1
  5935  0B96  00A1               	movwf	(floor@i+1)^(0+128)
  5936  0B97  0020               	movlb	0	; select bank0
  5937  0B98  0842               	movf	?___altoft+2,w
  5938  0B99  0021               	movlb	1	; select bank1
  5939  0B9A  00A2               	movwf	(floor@i+2)^(0+128)
  5940  0B9B  0020               	movlb	0	; select bank0
  5941  0B9C  0868               	movf	floor@x,w
  5942  0B9D  00F1               	movwf	___ftge@ff1
  5943  0B9E  0869               	movf	floor@x+1,w
  5944  0B9F  00F2               	movwf	___ftge@ff1+1
  5945  0BA0  086A               	movf	floor@x+2,w
  5946  0BA1  00F3               	movwf	___ftge@ff1+2
  5947  0BA2  0021               	movlb	1	; select bank1
  5948  0BA3  0820               	movf	floor@i^(0+128),w
  5949  0BA4  00F4               	movwf	___ftge@ff2
  5950  0BA5  0821               	movf	(floor@i+1)^(0+128),w
  5951  0BA6  00F5               	movwf	___ftge@ff2+1
  5952  0BA7  0822               	movf	(floor@i+2)^(0+128),w
  5953  0BA8  00F6               	movwf	___ftge@ff2+2
  5954  0BA9  3188  2022  318B   	fcall	___ftge
  5955  0BAC  1803               	btfsc	3,0
  5956  0BAD  2BCB               	goto	l2243
  5957  0BAE  3000               	movlw	0
  5958  0BAF  0020               	movlb	0	; select bank0
  5959  0BB0  00DB               	movwf	___ftadd@f1
  5960  0BB1  3080               	movlw	128
  5961  0BB2  00DC               	movwf	___ftadd@f1+1
  5962  0BB3  30BF               	movlw	191
  5963  0BB4  00DD               	movwf	___ftadd@f1+2
  5964  0BB5  0021               	movlb	1	; select bank1
  5965  0BB6  0820               	movf	floor@i^(0+128),w
  5966  0BB7  0020               	movlb	0	; select bank0
  5967  0BB8  00DE               	movwf	___ftadd@f2
  5968  0BB9  0021               	movlb	1	; select bank1
  5969  0BBA  0821               	movf	(floor@i+1)^(0+128),w
  5970  0BBB  0020               	movlb	0	; select bank0
  5971  0BBC  00DF               	movwf	___ftadd@f2+1
  5972  0BBD  0021               	movlb	1	; select bank1
  5973  0BBE  0822               	movf	(floor@i+2)^(0+128),w
  5974  0BBF  0020               	movlb	0	; select bank0
  5975  0BC0  00E0               	movwf	___ftadd@f2+2
  5976  0BC1  318E  2601         	fcall	___ftadd
  5977  0BC3  0020               	movlb	0	; select bank0
  5978  0BC4  085B               	movf	?___ftadd,w
  5979  0BC5  00E8               	movwf	?_floor
  5980  0BC6  085C               	movf	?___ftadd+1,w
  5981  0BC7  00E9               	movwf	?_floor+1
  5982  0BC8  085D               	movf	?___ftadd+2,w
  5983  0BC9  00EA               	movwf	?_floor+2
  5984  0BCA  0008               	return
  5985  0BCB                     l2243:	
  5986  0BCB  0021               	movlb	1	; select bank1
  5987  0BCC  0820               	movf	floor@i^(0+128),w
  5988  0BCD  0020               	movlb	0	; select bank0
  5989  0BCE  00E8               	movwf	?_floor
  5990  0BCF  0021               	movlb	1	; select bank1
  5991  0BD0  0821               	movf	(floor@i+1)^(0+128),w
  5992  0BD1  0020               	movlb	0	; select bank0
  5993  0BD2  00E9               	movwf	?_floor+1
  5994  0BD3  0021               	movlb	1	; select bank1
  5995  0BD4  0822               	movf	(floor@i+2)^(0+128),w
  5996  0BD5  0020               	movlb	0	; select bank0
  5997  0BD6  00EA               	movwf	?_floor+2
  5998  0BD7  0008               	return
  5999  0BD8                     __end_of_floor:	
  6000                           
  6001                           	psect	text14
  6002  085D                     __ptext14:	
  6003 ;; *************** function _frexp *****************
  6004 ;; Defined at:
  6005 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\frexp.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  value           3    1[COMMON] int 
  6008 ;;  eptr            1    4[COMMON] PTR int 
  6009 ;;		 -> log@exponent(2), floor@expon(2), 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  3    1[COMMON] PTR int 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;Total ram usage:        6 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    4
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_floor
  6032 ;;		_log
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           
  6037                           ;psect for function _frexp
  6038  085D                     _frexp:	
  6039                           
  6040                           ;incstack = 0
  6041                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6042  085D  0873               	movf	frexp@value+2,w
  6043  085E  0472               	iorwf	frexp@value+1,w
  6044  085F  0471               	iorwf	frexp@value,w
  6045  0860  1D03               	skipz
  6046  0861  286F               	goto	l2087
  6047  0862  0874               	movf	frexp@eptr,w
  6048  0863  0086               	movwf	6
  6049  0864  0187               	clrf	7
  6050  0865  3000               	movlw	0
  6051  0866  3FC0               	movwi [0]fsr1
  6052  0867  3FC1               	movwi [1]fsr1
  6053  0868  3000               	movlw	0
  6054  0869  00F1               	movwf	?_frexp
  6055  086A  3000               	movlw	0
  6056  086B  00F2               	movwf	?_frexp+1
  6057  086C  3000               	movlw	0
  6058  086D  00F3               	movwf	?_frexp+2
  6059  086E  0008               	return
  6060  086F                     l2087:	
  6061  086F  0873               	movf	frexp@value+2,w
  6062  0870  397F               	andlw	127
  6063  0871  00F5               	movwf	??_frexp
  6064  0872  01F6               	clrf	??_frexp+1
  6065  0873  35F5               	lslf	??_frexp,f
  6066  0874  0DF6               	rlf	??_frexp+1,f
  6067  0875  0874               	movf	frexp@eptr,w
  6068  0876  0086               	movwf	6
  6069  0877  0187               	clrf	7
  6070  0878  0875               	movf	??_frexp,w
  6071  0879  3FC0               	movwi [0]fsr1
  6072  087A  0876               	movf	??_frexp+1,w
  6073  087B  3FC1               	movwi [1]fsr1
  6074  087C  0D72               	rlf	frexp@value+1,w
  6075  087D  0D72               	rlf	frexp@value+1,w
  6076  087E  3901               	andlw	1
  6077  087F  00F5               	movwf	??_frexp
  6078  0880  01F6               	clrf	??_frexp+1
  6079  0881  0874               	movf	frexp@eptr,w
  6080  0882  0086               	movwf	6
  6081  0883  0187               	clrf	7
  6082  0884  0875               	movf	??_frexp,w
  6083  0885  0481               	iorwf	1,f
  6084  0886  3141               	addfsr 1,1
  6085  0887  0876               	movf	??_frexp+1,w
  6086  0888  0481               	iorwf	1,f
  6087  0889  0874               	movf	frexp@eptr,w
  6088  088A  0086               	movwf	6
  6089  088B  0187               	clrf	7
  6090  088C  3082               	movlw	130
  6091  088D  0781               	addwf	1,f
  6092  088E  3141               	addfsr 1,1
  6093  088F  30FF               	movlw	255
  6094  0890  3D81               	addwfc	1,f
  6095  0891  317F               	addfsr 1,-1
  6096  0892  0873               	movf	frexp@value+2,w
  6097  0893  3980               	andlw	-128
  6098  0894  383F               	iorlw	63
  6099  0895  00F3               	movwf	frexp@value+2
  6100  0896  13F2               	bcf	frexp@value+1,7
  6101  0897  0008               	return
  6102  0898                     __end_of_frexp:	
  6103                           
  6104                           	psect	text15
  6105  0A26                     __ptext15:	
  6106 ;; *************** function ___fttol *****************
  6107 ;; Defined at:
  6108 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  f1              3   18[BANK0 ] float 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  lval            4   27[BANK0 ] unsigned long 
  6113 ;;  exp1            1   31[BANK0 ] unsigned char 
  6114 ;;  sign1           1   26[BANK0 ] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  4   18[BANK0 ] long 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6124 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;Total ram usage:       14 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    4
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;;		_pow
  6136 ;;		_exp
  6137 ;;		_floor
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function ___fttol
  6143  0A26                     ___fttol:	
  6144                           
  6145                           ;incstack = 0
  6146                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6147  0A26  0020               	movlb	0	; select bank0
  6148  0A27  0832               	movf	___fttol@f1,w
  6149  0A28  00B6               	movwf	??___fttol
  6150  0A29  0833               	movf	___fttol@f1+1,w
  6151  0A2A  00B7               	movwf	??___fttol+1
  6152  0A2B  0834               	movf	___fttol@f1+2,w
  6153  0A2C  00B8               	movwf	??___fttol+2
  6154  0A2D  1003               	clrc
  6155  0A2E  0D37               	rlf	??___fttol+1,w
  6156  0A2F  0D38               	rlf	??___fttol+2,w
  6157  0A30  00B9               	movwf	??___fttol+3
  6158  0A31  0839               	movf	??___fttol+3,w
  6159  0A32  00BF               	movwf	___fttol@exp1
  6160  0A33  083F               	movf	___fttol@exp1,w
  6161  0A34  1D03               	btfss	3,2
  6162  0A35  2A3F               	goto	l2043
  6163  0A36  3000               	movlw	0
  6164  0A37  00B5               	movwf	?___fttol+3
  6165  0A38  3000               	movlw	0
  6166  0A39  00B4               	movwf	?___fttol+2
  6167  0A3A  3000               	movlw	0
  6168  0A3B  00B3               	movwf	?___fttol+1
  6169  0A3C  3000               	movlw	0
  6170  0A3D  00B2               	movwf	?___fttol
  6171  0A3E  0008               	return
  6172  0A3F                     l2043:	
  6173  0A3F  0832               	movf	___fttol@f1,w
  6174  0A40  00B6               	movwf	??___fttol
  6175  0A41  0833               	movf	___fttol@f1+1,w
  6176  0A42  00B7               	movwf	??___fttol+1
  6177  0A43  0834               	movf	___fttol@f1+2,w
  6178  0A44  00B8               	movwf	??___fttol+2
  6179  0A45  3017               	movlw	23
  6180  0A46                     u2295:	
  6181  0A46  36B8               	lsrf	??___fttol+2,f
  6182  0A47  0CB7               	rrf	??___fttol+1,f
  6183  0A48  0CB6               	rrf	??___fttol,f
  6184  0A49  0B89               	decfsz	9,f
  6185  0A4A  2A46               	goto	u2295
  6186  0A4B  0836               	movf	??___fttol,w
  6187  0A4C  00B9               	movwf	??___fttol+3
  6188  0A4D  0839               	movf	??___fttol+3,w
  6189  0A4E  00BA               	movwf	___fttol@sign1
  6190  0A4F  17B3               	bsf	___fttol@f1+1,7
  6191  0A50  30FF               	movlw	255
  6192  0A51  05B2               	andwf	___fttol@f1,f
  6193  0A52  30FF               	movlw	255
  6194  0A53  05B3               	andwf	___fttol@f1+1,f
  6195  0A54  3000               	movlw	0
  6196  0A55  05B4               	andwf	___fttol@f1+2,f
  6197  0A56  0832               	movf	___fttol@f1,w
  6198  0A57  00BB               	movwf	___fttol@lval
  6199  0A58  0833               	movf	___fttol@f1+1,w
  6200  0A59  00BC               	movwf	___fttol@lval+1
  6201  0A5A  0834               	movf	___fttol@f1+2,w
  6202  0A5B  00BD               	movwf	___fttol@lval+2
  6203  0A5C  01BE               	clrf	___fttol@lval+3
  6204  0A5D  308E               	movlw	142
  6205  0A5E  02BF               	subwf	___fttol@exp1,f
  6206  0A5F  1FBF               	btfss	___fttol@exp1,7
  6207  0A60  2A7D               	goto	l2063
  6208  0A61  083F               	movf	___fttol@exp1,w
  6209  0A62  3A80               	xorlw	128
  6210  0A63  3E8F               	addlw	143
  6211  0A64  1803               	skipnc
  6212  0A65  2A6F               	goto	l2061
  6213  0A66  3000               	movlw	0
  6214  0A67  00B5               	movwf	?___fttol+3
  6215  0A68  3000               	movlw	0
  6216  0A69  00B4               	movwf	?___fttol+2
  6217  0A6A  3000               	movlw	0
  6218  0A6B  00B3               	movwf	?___fttol+1
  6219  0A6C  3000               	movlw	0
  6220  0A6D  00B2               	movwf	?___fttol
  6221  0A6E  0008               	return
  6222  0A6F                     l2061:	
  6223  0A6F  3001               	movlw	1
  6224  0A70                     u2325:	
  6225  0A70  36BE               	lsrf	___fttol@lval+3,f
  6226  0A71  0CBD               	rrf	___fttol@lval+2,f
  6227  0A72  0CBC               	rrf	___fttol@lval+1,f
  6228  0A73  0CBB               	rrf	___fttol@lval,f
  6229  0A74  0B89               	decfsz	9,f
  6230  0A75  2A70               	goto	u2325
  6231  0A76  3001               	movlw	1
  6232  0A77  00B6               	movwf	??___fttol
  6233  0A78  0836               	movf	??___fttol,w
  6234  0A79  07BF               	addwf	___fttol@exp1,f
  6235  0A7A  1903               	btfsc	3,2
  6236  0A7B  2A96               	goto	l2071
  6237  0A7C  2A6F               	goto	l2061
  6238  0A7D                     l2063:	
  6239  0A7D  3018               	movlw	24
  6240  0A7E  023F               	subwf	___fttol@exp1,w
  6241  0A7F  1C03               	skipc
  6242  0A80  2A93               	goto	l607
  6243  0A81  3000               	movlw	0
  6244  0A82  00B5               	movwf	?___fttol+3
  6245  0A83  3000               	movlw	0
  6246  0A84  00B4               	movwf	?___fttol+2
  6247  0A85  3000               	movlw	0
  6248  0A86  00B3               	movwf	?___fttol+1
  6249  0A87  3000               	movlw	0
  6250  0A88  00B2               	movwf	?___fttol
  6251  0A89  0008               	return
  6252  0A8A                     l2069:	
  6253  0A8A  3001               	movlw	1
  6254  0A8B                     u2355:	
  6255  0A8B  35BB               	lslf	___fttol@lval,f
  6256  0A8C  0DBC               	rlf	___fttol@lval+1,f
  6257  0A8D  0DBD               	rlf	___fttol@lval+2,f
  6258  0A8E  0DBE               	rlf	___fttol@lval+3,f
  6259  0A8F  0B89               	decfsz	9,f
  6260  0A90  2A8B               	goto	u2355
  6261  0A91  3001               	movlw	1
  6262  0A92  02BF               	subwf	___fttol@exp1,f
  6263  0A93                     l607:	
  6264  0A93  083F               	movf	___fttol@exp1,w
  6265  0A94  1D03               	btfss	3,2
  6266  0A95  2A8A               	goto	l2069
  6267  0A96                     l2071:	
  6268  0A96  083A               	movf	___fttol@sign1,w
  6269  0A97  1903               	btfsc	3,2
  6270  0A98  2AA4               	goto	l2075
  6271  0A99  09BB               	comf	___fttol@lval,f
  6272  0A9A  09BC               	comf	___fttol@lval+1,f
  6273  0A9B  09BD               	comf	___fttol@lval+2,f
  6274  0A9C  09BE               	comf	___fttol@lval+3,f
  6275  0A9D  0ABB               	incf	___fttol@lval,f
  6276  0A9E  1903               	skipnz
  6277  0A9F  0ABC               	incf	___fttol@lval+1,f
  6278  0AA0  1903               	skipnz
  6279  0AA1  0ABD               	incf	___fttol@lval+2,f
  6280  0AA2  1903               	skipnz
  6281  0AA3  0ABE               	incf	___fttol@lval+3,f
  6282  0AA4                     l2075:	
  6283  0AA4  083E               	movf	___fttol@lval+3,w
  6284  0AA5  00B5               	movwf	?___fttol+3
  6285  0AA6  083D               	movf	___fttol@lval+2,w
  6286  0AA7  00B4               	movwf	?___fttol+2
  6287  0AA8  083C               	movf	___fttol@lval+1,w
  6288  0AA9  00B3               	movwf	?___fttol+1
  6289  0AAA  083B               	movf	___fttol@lval,w
  6290  0AAB  00B2               	movwf	?___fttol
  6291  0AAC  0008               	return
  6292  0AAD                     __end_of___fttol:	
  6293                           
  6294                           	psect	text16
  6295  0822                     __ptext16:	
  6296 ;; *************** function ___ftge *****************
  6297 ;; Defined at:
  6298 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  ff1             3    1[COMMON] float 
  6301 ;;  ff2             3    4[COMMON] float 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;		None               void
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6313 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;Total ram usage:        9 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    4
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_pow
  6324 ;;		_exp
  6325 ;;		_floor
  6326 ;;		_ldexp
  6327 ;;		_log
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           
  6332                           ;psect for function ___ftge
  6333  0822                     ___ftge:	
  6334                           
  6335                           ;incstack = 0
  6336                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6337  0822  1FF3               	btfss	___ftge@ff1+2,7
  6338  0823  2838               	goto	l1971
  6339  0824  0971               	comf	___ftge@ff1,w
  6340  0825  00F7               	movwf	??___ftge
  6341  0826  0972               	comf	___ftge@ff1+1,w
  6342  0827  00F8               	movwf	??___ftge+1
  6343  0828  0973               	comf	___ftge@ff1+2,w
  6344  0829  00F9               	movwf	??___ftge+2
  6345  082A  0AF7               	incf	??___ftge,f
  6346  082B  1903               	skipnz
  6347  082C  0AF8               	incf	??___ftge+1,f
  6348  082D  1903               	skipnz
  6349  082E  0AF9               	incf	??___ftge+2,f
  6350  082F  3000               	movlw	0
  6351  0830  0777               	addwf	??___ftge,w
  6352  0831  00F1               	movwf	___ftge@ff1
  6353  0832  3000               	movlw	0
  6354  0833  3D78               	addwfc	??___ftge+1,w
  6355  0834  00F2               	movwf	___ftge@ff1+1
  6356  0835  3080               	movlw	128
  6357  0836  3D79               	addwfc	??___ftge+2,w
  6358  0837  00F3               	movwf	___ftge@ff1+2
  6359  0838                     l1971:	
  6360  0838  1FF6               	btfss	___ftge@ff2+2,7
  6361  0839  284E               	goto	l1975
  6362  083A  0974               	comf	___ftge@ff2,w
  6363  083B  00F7               	movwf	??___ftge
  6364  083C  0975               	comf	___ftge@ff2+1,w
  6365  083D  00F8               	movwf	??___ftge+1
  6366  083E  0976               	comf	___ftge@ff2+2,w
  6367  083F  00F9               	movwf	??___ftge+2
  6368  0840  0AF7               	incf	??___ftge,f
  6369  0841  1903               	skipnz
  6370  0842  0AF8               	incf	??___ftge+1,f
  6371  0843  1903               	skipnz
  6372  0844  0AF9               	incf	??___ftge+2,f
  6373  0845  3000               	movlw	0
  6374  0846  0777               	addwf	??___ftge,w
  6375  0847  00F4               	movwf	___ftge@ff2
  6376  0848  3000               	movlw	0
  6377  0849  3D78               	addwfc	??___ftge+1,w
  6378  084A  00F5               	movwf	___ftge@ff2+1
  6379  084B  3080               	movlw	128
  6380  084C  3D79               	addwfc	??___ftge+2,w
  6381  084D  00F6               	movwf	___ftge@ff2+2
  6382  084E                     l1975:	
  6383  084E  3080               	movlw	128
  6384  084F  06F3               	xorwf	___ftge@ff1+2,f
  6385  0850  3080               	movlw	128
  6386  0851  06F6               	xorwf	___ftge@ff2+2,f
  6387  0852  0876               	movf	___ftge@ff2+2,w
  6388  0853  0273               	subwf	___ftge@ff1+2,w
  6389  0854  1D03               	skipz
  6390  0855  0008               	return
  6391  0856  0875               	movf	___ftge@ff2+1,w
  6392  0857  0272               	subwf	___ftge@ff1+1,w
  6393  0858  1D03               	skipz
  6394  0859  0008               	return
  6395  085A  0874               	movf	___ftge@ff2,w
  6396  085B  0271               	subwf	___ftge@ff1,w
  6397  085C  0008               	return
  6398  085D                     __end_of___ftge:	
  6399                           
  6400                           	psect	text17
  6401  0898                     __ptext17:	
  6402 ;; *************** function ___altoft *****************
  6403 ;; Defined at:
  6404 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\altoft.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  c               4   32[BANK0 ] long 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  sign            1   39[BANK0 ] unsigned char 
  6409 ;;  exp             1   38[BANK0 ] unsigned char 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  3   32[BANK0 ] float 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, pclath, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;Total ram usage:        8 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    5
  6426 ;; This function calls:
  6427 ;;		___ftpack
  6428 ;; This function is called by:
  6429 ;;		_main
  6430 ;;		_floor
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           
  6435                           ;psect for function ___altoft
  6436  0898                     ___altoft:	
  6437                           
  6438                           ;incstack = 0
  6439                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  6440  0898  0020               	movlb	0	; select bank0
  6441  0899  01C7               	clrf	___altoft@sign
  6442  089A  308E               	movlw	142
  6443  089B  00C4               	movwf	??___altoft
  6444  089C  0844               	movf	??___altoft,w
  6445  089D  00C6               	movwf	___altoft@exp
  6446  089E  1FC3               	btfss	___altoft@c+3,7
  6447  089F  28AD               	goto	l1891
  6448  08A0  09C0               	comf	___altoft@c,f
  6449  08A1  09C1               	comf	___altoft@c+1,f
  6450  08A2  09C2               	comf	___altoft@c+2,f
  6451  08A3  09C3               	comf	___altoft@c+3,f
  6452  08A4  0AC0               	incf	___altoft@c,f
  6453  08A5  1903               	skipnz
  6454  08A6  0AC1               	incf	___altoft@c+1,f
  6455  08A7  1903               	skipnz
  6456  08A8  0AC2               	incf	___altoft@c+2,f
  6457  08A9  1903               	skipnz
  6458  08AA  0AC3               	incf	___altoft@c+3,f
  6459  08AB  01C7               	clrf	___altoft@sign
  6460  08AC  0AC7               	incf	___altoft@sign,f
  6461  08AD                     l1891:	
  6462  08AD  30FF               	movlw	255
  6463  08AE  0543               	andwf	___altoft@c+3,w
  6464  08AF  1903               	btfsc	3,2
  6465  08B0  28BD               	goto	l1893
  6466  08B1  3001               	movlw	1
  6467  08B2                     u1885:	
  6468  08B2  36C3               	lsrf	___altoft@c+3,f
  6469  08B3  0CC2               	rrf	___altoft@c+2,f
  6470  08B4  0CC1               	rrf	___altoft@c+1,f
  6471  08B5  0CC0               	rrf	___altoft@c,f
  6472  08B6  0B89               	decfsz	9,f
  6473  08B7  28B2               	goto	u1885
  6474  08B8  3001               	movlw	1
  6475  08B9  00C4               	movwf	??___altoft
  6476  08BA  0844               	movf	??___altoft,w
  6477  08BB  07C6               	addwf	___altoft@exp,f
  6478  08BC  28AD               	goto	l1891
  6479  08BD                     l1893:	
  6480  08BD  0840               	movf	___altoft@c,w
  6481  08BE  00F1               	movwf	___ftpack@arg
  6482  08BF  0841               	movf	___altoft@c+1,w
  6483  08C0  00F2               	movwf	___ftpack@arg+1
  6484  08C1  0842               	movf	___altoft@c+2,w
  6485  08C2  00F3               	movwf	___ftpack@arg+2
  6486  08C3  0846               	movf	___altoft@exp,w
  6487  08C4  00C4               	movwf	??___altoft
  6488  08C5  0844               	movf	??___altoft,w
  6489  08C6  00F4               	movwf	___ftpack@exp
  6490  08C7  0847               	movf	___altoft@sign,w
  6491  08C8  00C5               	movwf	??___altoft+1
  6492  08C9  0845               	movf	??___altoft+1,w
  6493  08CA  00F5               	movwf	___ftpack@sign
  6494  08CB  3188  20D5         	fcall	___ftpack
  6495  08CD  0871               	movf	?___ftpack,w
  6496  08CE  0020               	movlb	0	; select bank0
  6497  08CF  00C0               	movwf	?___altoft
  6498  08D0  0872               	movf	?___ftpack+1,w
  6499  08D1  00C1               	movwf	?___altoft+1
  6500  08D2  0873               	movf	?___ftpack+2,w
  6501  08D3  00C2               	movwf	?___altoft+2
  6502  08D4  0008               	return
  6503  08D5                     __end_of___altoft:	
  6504                           
  6505                           	psect	text18
  6506  0939                     __ptext18:	
  6507 ;; *************** function _eval_poly *****************
  6508 ;; Defined at:
  6509 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\evalpoly.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  x               3   72[BANK0 ] float 
  6512 ;;  d               2   75[BANK0 ] PTR const 
  6513 ;;		 -> log@coeff(27), exp@coeff(30), 
  6514 ;;  n               2   77[BANK0 ] int 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  res             3    0[BANK1 ] int 
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  3   72[BANK0 ] int 
  6519 ;; Registers used:
  6520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6526 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Totals:         0       7       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;Total ram usage:       10 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; Hardware stack levels required when called:    6
  6533 ;; This function calls:
  6534 ;;		___ftadd
  6535 ;;		___ftmul
  6536 ;;		___wmul
  6537 ;; This function is called by:
  6538 ;;		_exp
  6539 ;;		_log
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           
  6544                           ;psect for function _eval_poly
  6545  0939                     _eval_poly:	
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6549  0939  0020               	movlb	0	; select bank0
  6550  093A  086E               	movf	eval_poly@n+1,w
  6551  093B  00F2               	movwf	___wmul@multiplier+1
  6552  093C  086D               	movf	eval_poly@n,w
  6553  093D  00F1               	movwf	___wmul@multiplier
  6554  093E  3003               	movlw	3
  6555  093F  00F3               	movwf	___wmul@multiplicand
  6556  0940  3000               	movlw	0
  6557  0941  00F4               	movwf	___wmul@multiplicand+1
  6558  0942  3187  27E5  3189   	fcall	___wmul
  6559  0945  0020               	movlb	0	; select bank0
  6560  0946  086B               	movf	eval_poly@d,w
  6561  0947  0771               	addwf	?___wmul,w
  6562  0948  0084               	movwf	4
  6563  0949  086C               	movf	eval_poly@d+1,w
  6564  094A  3D72               	addwfc	?___wmul+1,w
  6565  094B  0085               	movwf	5
  6566  094C  3F00               	moviw [0]fsr0
  6567  094D  0021               	movlb	1	; select bank1
  6568  094E  00A0               	movwf	eval_poly@res^(0+128)
  6569  094F  3F01               	moviw [1]fsr0
  6570  0950  00A1               	movwf	(eval_poly@res+1)^(0+128)
  6571  0951  3F02               	moviw [2]fsr0
  6572  0952                     L28:	
  6573  0952  00A2               	movwf	(eval_poly@res+2)^(0+128)
  6574  0953  0020               	movlb	0	; select bank0
  6575  0954  086D               	movf	eval_poly@n,w
  6576  0955  046E               	iorwf	eval_poly@n+1,w
  6577  0956  1903               	btfsc	3,2
  6578  0957  29A0               	goto	l2253
  6579  0958  30FF               	movlw	255
  6580  0959  0020               	movlb	0	; select bank0
  6581  095A  07ED               	addwf	eval_poly@n,f
  6582  095B  30FF               	movlw	255
  6583  095C  3DEE               	addwfc	eval_poly@n+1,f
  6584  095D  086E               	movf	eval_poly@n+1,w
  6585  095E  00F2               	movwf	___wmul@multiplier+1
  6586  095F  086D               	movf	eval_poly@n,w
  6587  0960  00F1               	movwf	___wmul@multiplier
  6588  0961  3003               	movlw	3
  6589  0962  00F3               	movwf	___wmul@multiplicand
  6590  0963  3000               	movlw	0
  6591  0964  00F4               	movwf	___wmul@multiplicand+1
  6592  0965  3187  27E5  3189   	fcall	___wmul
  6593  0968  0020               	movlb	0	; select bank0
  6594  0969  086B               	movf	eval_poly@d,w
  6595  096A  0771               	addwf	?___wmul,w
  6596  096B  0084               	movwf	4
  6597  096C  086C               	movf	eval_poly@d+1,w
  6598  096D  3D72               	addwfc	?___wmul+1,w
  6599  096E  0085               	movwf	5
  6600  096F  3F00               	moviw [0]fsr0
  6601  0970  00DB               	movwf	___ftadd@f1
  6602  0971  3F01               	moviw [1]fsr0
  6603  0972  00DC               	movwf	___ftadd@f1+1
  6604  0973  3F02               	moviw [2]fsr0
  6605  0974  00DD               	movwf	___ftadd@f1+2
  6606  0975  0021               	movlb	1	; select bank1
  6607  0976  0820               	movf	eval_poly@res^(0+128),w
  6608  0977  0020               	movlb	0	; select bank0
  6609  0978  00CB               	movwf	___ftmul@f1
  6610  0979  0021               	movlb	1	; select bank1
  6611  097A  0821               	movf	(eval_poly@res+1)^(0+128),w
  6612  097B  0020               	movlb	0	; select bank0
  6613  097C  00CC               	movwf	___ftmul@f1+1
  6614  097D  0021               	movlb	1	; select bank1
  6615  097E  0822               	movf	(eval_poly@res+2)^(0+128),w
  6616  097F  0020               	movlb	0	; select bank0
  6617  0980  00CD               	movwf	___ftmul@f1+2
  6618  0981  0868               	movf	eval_poly@x,w
  6619  0982  00CE               	movwf	___ftmul@f2
  6620  0983  0869               	movf	eval_poly@x+1,w
  6621  0984  00CF               	movwf	___ftmul@f2+1
  6622  0985  086A               	movf	eval_poly@x+2,w
  6623  0986  00D0               	movwf	___ftmul@f2+2
  6624  0987  318C  2481  3189   	fcall	___ftmul
  6625  098A  0020               	movlb	0	; select bank0
  6626  098B  084B               	movf	?___ftmul,w
  6627  098C  00DE               	movwf	___ftadd@f2
  6628  098D  084C               	movf	?___ftmul+1,w
  6629  098E  00DF               	movwf	___ftadd@f2+1
  6630  098F  084D               	movf	?___ftmul+2,w
  6631  0990  00E0               	movwf	___ftadd@f2+2
  6632  0991  318E  2601  3189   	fcall	___ftadd
  6633  0994  0020               	movlb	0	; select bank0
  6634  0995  085B               	movf	?___ftadd,w
  6635  0996  0021               	movlb	1	; select bank1
  6636  0997  00A0               	movwf	eval_poly@res^(0+128)
  6637  0998  0020               	movlb	0	; select bank0
  6638  0999  085C               	movf	?___ftadd+1,w
  6639  099A  0021               	movlb	1	; select bank1
  6640  099B  00A1               	movwf	(eval_poly@res+1)^(0+128)
  6641  099C  0020               	movlb	0	; select bank0
  6642  099D  085D               	movf	?___ftadd+2,w
  6643  099E  0021               	movlb	1	; select bank1
  6644  099F  2952               	goto	L28
  6645  09A0                     l2253:	
  6646  09A0  0021               	movlb	1	; select bank1
  6647  09A1  0820               	movf	eval_poly@res^(0+128),w
  6648  09A2  0020               	movlb	0	; select bank0
  6649  09A3  00E8               	movwf	?_eval_poly
  6650  09A4  0021               	movlb	1	; select bank1
  6651  09A5  0821               	movf	(eval_poly@res+1)^(0+128),w
  6652  09A6  0020               	movlb	0	; select bank0
  6653  09A7  00E9               	movwf	?_eval_poly+1
  6654  09A8  0021               	movlb	1	; select bank1
  6655  09A9  0822               	movf	(eval_poly@res+2)^(0+128),w
  6656  09AA  0020               	movlb	0	; select bank0
  6657  09AB  00EA               	movwf	?_eval_poly+2
  6658  09AC  0008               	return
  6659  09AD                     __end_of_eval_poly:	
  6660                           
  6661                           	psect	text19
  6662  07E5                     __ptext19:	
  6663 ;; *************** function ___wmul *****************
  6664 ;; Defined at:
  6665 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  multiplier      2    1[COMMON] unsigned int 
  6668 ;;  multiplicand    2    3[COMMON] unsigned int 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  product         2    5[COMMON] unsigned int 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  2    1[COMMON] unsigned int 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2, status,0
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6684 ;;Total ram usage:        6 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    4
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_eval_poly
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           
  6695                           ;psect for function ___wmul
  6696  07E5                     ___wmul:	
  6697                           
  6698                           ;incstack = 0
  6699                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6700  07E5  01F5               	clrf	___wmul@product
  6701  07E6  01F6               	clrf	___wmul@product+1
  6702  07E7                     l1869:	
  6703  07E7  1C71               	btfss	___wmul@multiplier,0
  6704  07E8  2FED               	goto	l355
  6705  07E9  0873               	movf	___wmul@multiplicand,w
  6706  07EA  07F5               	addwf	___wmul@product,f
  6707  07EB  0874               	movf	___wmul@multiplicand+1,w
  6708  07EC  3DF6               	addwfc	___wmul@product+1,f
  6709  07ED                     l355:	
  6710  07ED  3001               	movlw	1
  6711  07EE                     u1845:	
  6712  07EE  35F3               	lslf	___wmul@multiplicand,f
  6713  07EF  0DF4               	rlf	___wmul@multiplicand+1,f
  6714  07F0  0B89               	decfsz	9,f
  6715  07F1  2FEE               	goto	u1845
  6716  07F2  3001               	movlw	1
  6717  07F3                     u1855:	
  6718  07F3  36F2               	lsrf	___wmul@multiplier+1,f
  6719  07F4  0CF1               	rrf	___wmul@multiplier,f
  6720  07F5  0B89               	decfsz	9,f
  6721  07F6  2FF3               	goto	u1855
  6722  07F7  0871               	movf	___wmul@multiplier,w
  6723  07F8  0472               	iorwf	___wmul@multiplier+1,w
  6724  07F9  1D03               	btfss	3,2
  6725  07FA  2FE7               	goto	l1869
  6726  07FB  0876               	movf	___wmul@product+1,w
  6727  07FC  00F2               	movwf	?___wmul+1
  6728  07FD  0875               	movf	___wmul@product,w
  6729  07FE  00F1               	movwf	?___wmul
  6730  07FF  0008               	return
  6731  0800                     __end_of___wmul:	
  6732                           
  6733                           	psect	text20
  6734  0C81                     __ptext20:	
  6735 ;; *************** function ___ftmul *****************
  6736 ;; Defined at:
  6737 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  f1              3   43[BANK0 ] float 
  6740 ;;  f2              3   46[BANK0 ] float 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  f3_as_produc    3   54[BANK0 ] unsigned um
  6743 ;;  sign            1   58[BANK0 ] unsigned char 
  6744 ;;  cntr            1   57[BANK0 ] unsigned char 
  6745 ;;  exp             1   53[BANK0 ] unsigned char 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  3   43[BANK0 ] float 
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0, pclath, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6755 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;Total ram usage:       16 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    5
  6762 ;; This function calls:
  6763 ;;		___ftpack
  6764 ;; This function is called by:
  6765 ;;		_main
  6766 ;;		_pow
  6767 ;;		_exp
  6768 ;;		_log
  6769 ;;		_eval_poly
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           
  6774                           ;psect for function ___ftmul
  6775  0C81                     ___ftmul:	
  6776                           
  6777                           ;incstack = 0
  6778                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6779  0C81  0020               	movlb	0	; select bank0
  6780  0C82  084B               	movf	___ftmul@f1,w
  6781  0C83  00D1               	movwf	??___ftmul
  6782  0C84  084C               	movf	___ftmul@f1+1,w
  6783  0C85  00D2               	movwf	??___ftmul+1
  6784  0C86  084D               	movf	___ftmul@f1+2,w
  6785  0C87  00D3               	movwf	??___ftmul+2
  6786  0C88  1003               	clrc
  6787  0C89  0D52               	rlf	??___ftmul+1,w
  6788  0C8A  0D53               	rlf	??___ftmul+2,w
  6789  0C8B  00D4               	movwf	??___ftmul+3
  6790  0C8C  0854               	movf	??___ftmul+3,w
  6791  0C8D  00D5               	movwf	___ftmul@exp
  6792  0C8E  0855               	movf	___ftmul@exp,w
  6793  0C8F  1D03               	btfss	3,2
  6794  0C90  2C98               	goto	l1993
  6795  0C91  3000               	movlw	0
  6796  0C92  00CB               	movwf	?___ftmul
  6797  0C93  3000               	movlw	0
  6798  0C94  00CC               	movwf	?___ftmul+1
  6799  0C95  3000               	movlw	0
  6800  0C96  00CD               	movwf	?___ftmul+2
  6801  0C97  0008               	return
  6802  0C98                     l1993:	
  6803  0C98  084E               	movf	___ftmul@f2,w
  6804  0C99  00D1               	movwf	??___ftmul
  6805  0C9A  084F               	movf	___ftmul@f2+1,w
  6806  0C9B  00D2               	movwf	??___ftmul+1
  6807  0C9C  0850               	movf	___ftmul@f2+2,w
  6808  0C9D  00D3               	movwf	??___ftmul+2
  6809  0C9E  1003               	clrc
  6810  0C9F  0D52               	rlf	??___ftmul+1,w
  6811  0CA0  0D53               	rlf	??___ftmul+2,w
  6812  0CA1  00D4               	movwf	??___ftmul+3
  6813  0CA2  0854               	movf	??___ftmul+3,w
  6814  0CA3  00DA               	movwf	___ftmul@sign
  6815  0CA4  085A               	movf	___ftmul@sign,w
  6816  0CA5  1D03               	btfss	3,2
  6817  0CA6  2CAE               	goto	l1999
  6818  0CA7  3000               	movlw	0
  6819  0CA8  00CB               	movwf	?___ftmul
  6820  0CA9  3000               	movlw	0
  6821  0CAA  00CC               	movwf	?___ftmul+1
  6822  0CAB  3000               	movlw	0
  6823  0CAC  00CD               	movwf	?___ftmul+2
  6824  0CAD  0008               	return
  6825  0CAE                     l1999:	
  6826  0CAE  085A               	movf	___ftmul@sign,w
  6827  0CAF  3E7B               	addlw	123
  6828  0CB0  00D1               	movwf	??___ftmul
  6829  0CB1  0851               	movf	??___ftmul,w
  6830  0CB2  07D5               	addwf	___ftmul@exp,f
  6831  0CB3  084B               	movf	___ftmul@f1,w
  6832  0CB4  00D1               	movwf	??___ftmul
  6833  0CB5  084C               	movf	___ftmul@f1+1,w
  6834  0CB6  00D2               	movwf	??___ftmul+1
  6835  0CB7  084D               	movf	___ftmul@f1+2,w
  6836  0CB8  00D3               	movwf	??___ftmul+2
  6837  0CB9  3010               	movlw	16
  6838  0CBA                     u2185:	
  6839  0CBA  36D3               	lsrf	??___ftmul+2,f
  6840  0CBB  0CD2               	rrf	??___ftmul+1,f
  6841  0CBC  0CD1               	rrf	??___ftmul,f
  6842  0CBD  0B89               	decfsz	9,f
  6843  0CBE  2CBA               	goto	u2185
  6844  0CBF  0851               	movf	??___ftmul,w
  6845  0CC0  00D4               	movwf	??___ftmul+3
  6846  0CC1  0854               	movf	??___ftmul+3,w
  6847  0CC2  00DA               	movwf	___ftmul@sign
  6848  0CC3  084E               	movf	___ftmul@f2,w
  6849  0CC4  00D1               	movwf	??___ftmul
  6850  0CC5  084F               	movf	___ftmul@f2+1,w
  6851  0CC6  00D2               	movwf	??___ftmul+1
  6852  0CC7  0850               	movf	___ftmul@f2+2,w
  6853  0CC8  00D3               	movwf	??___ftmul+2
  6854  0CC9  3010               	movlw	16
  6855  0CCA                     u2195:	
  6856  0CCA  36D3               	lsrf	??___ftmul+2,f
  6857  0CCB  0CD2               	rrf	??___ftmul+1,f
  6858  0CCC  0CD1               	rrf	??___ftmul,f
  6859  0CCD  0B89               	decfsz	9,f
  6860  0CCE  2CCA               	goto	u2195
  6861  0CCF  0851               	movf	??___ftmul,w
  6862  0CD0  00D4               	movwf	??___ftmul+3
  6863  0CD1  0854               	movf	??___ftmul+3,w
  6864  0CD2  06DA               	xorwf	___ftmul@sign,f
  6865  0CD3  3080               	movlw	128
  6866  0CD4  00D1               	movwf	??___ftmul
  6867  0CD5  0851               	movf	??___ftmul,w
  6868  0CD6  05DA               	andwf	___ftmul@sign,f
  6869  0CD7  17CC               	bsf	___ftmul@f1+1,7
  6870  0CD8  17CF               	bsf	___ftmul@f2+1,7
  6871  0CD9  30FF               	movlw	255
  6872  0CDA  05CE               	andwf	___ftmul@f2,f
  6873  0CDB  30FF               	movlw	255
  6874  0CDC  05CF               	andwf	___ftmul@f2+1,f
  6875  0CDD  3000               	movlw	0
  6876  0CDE  05D0               	andwf	___ftmul@f2+2,f
  6877  0CDF  3000               	movlw	0
  6878  0CE0  00D6               	movwf	___ftmul@f3_as_product
  6879  0CE1  3000               	movlw	0
  6880  0CE2  00D7               	movwf	___ftmul@f3_as_product+1
  6881  0CE3  3000               	movlw	0
  6882  0CE4  00D8               	movwf	___ftmul@f3_as_product+2
  6883  0CE5  3007               	movlw	7
  6884  0CE6  00D1               	movwf	??___ftmul
  6885  0CE7  0851               	movf	??___ftmul,w
  6886  0CE8  00D9               	movwf	___ftmul@cntr
  6887  0CE9                     l2011:	
  6888  0CE9  1C4B               	btfss	___ftmul@f1,0
  6889  0CEA  2CF1               	goto	l2015
  6890  0CEB  084E               	movf	___ftmul@f2,w
  6891  0CEC  07D6               	addwf	___ftmul@f3_as_product,f
  6892  0CED  084F               	movf	___ftmul@f2+1,w
  6893  0CEE  3DD7               	addwfc	___ftmul@f3_as_product+1,f
  6894  0CEF  0850               	movf	___ftmul@f2+2,w
  6895  0CF0  3DD8               	addwfc	___ftmul@f3_as_product+2,f
  6896  0CF1                     l2015:	
  6897  0CF1  3001               	movlw	1
  6898  0CF2                     u2215:	
  6899  0CF2  36CD               	lsrf	___ftmul@f1+2,f
  6900  0CF3  0CCC               	rrf	___ftmul@f1+1,f
  6901  0CF4  0CCB               	rrf	___ftmul@f1,f
  6902  0CF5  0B89               	decfsz	9,f
  6903  0CF6  2CF2               	goto	u2215
  6904  0CF7  3001               	movlw	1
  6905  0CF8                     u2225:	
  6906  0CF8  35CE               	lslf	___ftmul@f2,f
  6907  0CF9  0DCF               	rlf	___ftmul@f2+1,f
  6908  0CFA  0DD0               	rlf	___ftmul@f2+2,f
  6909  0CFB  0B89               	decfsz	9,f
  6910  0CFC  2CF8               	goto	u2225
  6911  0CFD  3001               	movlw	1
  6912  0CFE  02D9               	subwf	___ftmul@cntr,f
  6913  0CFF  1D03               	btfss	3,2
  6914  0D00  2CE9               	goto	l2011
  6915  0D01  3009               	movlw	9
  6916  0D02  00D1               	movwf	??___ftmul
  6917  0D03  0851               	movf	??___ftmul,w
  6918  0D04  00D9               	movwf	___ftmul@cntr
  6919  0D05                     l2023:	
  6920  0D05  1C4B               	btfss	___ftmul@f1,0
  6921  0D06  2D0D               	goto	l2027
  6922  0D07  084E               	movf	___ftmul@f2,w
  6923  0D08  07D6               	addwf	___ftmul@f3_as_product,f
  6924  0D09  084F               	movf	___ftmul@f2+1,w
  6925  0D0A  3DD7               	addwfc	___ftmul@f3_as_product+1,f
  6926  0D0B  0850               	movf	___ftmul@f2+2,w
  6927  0D0C  3DD8               	addwfc	___ftmul@f3_as_product+2,f
  6928  0D0D                     l2027:	
  6929  0D0D  3001               	movlw	1
  6930  0D0E                     u2255:	
  6931  0D0E  36CD               	lsrf	___ftmul@f1+2,f
  6932  0D0F  0CCC               	rrf	___ftmul@f1+1,f
  6933  0D10  0CCB               	rrf	___ftmul@f1,f
  6934  0D11  0B89               	decfsz	9,f
  6935  0D12  2D0E               	goto	u2255
  6936  0D13  3001               	movlw	1
  6937  0D14                     u2265:	
  6938  0D14  36D8               	lsrf	___ftmul@f3_as_product+2,f
  6939  0D15  0CD7               	rrf	___ftmul@f3_as_product+1,f
  6940  0D16  0CD6               	rrf	___ftmul@f3_as_product,f
  6941  0D17  0B89               	decfsz	9,f
  6942  0D18  2D14               	goto	u2265
  6943  0D19  3001               	movlw	1
  6944  0D1A  02D9               	subwf	___ftmul@cntr,f
  6945  0D1B  1D03               	btfss	3,2
  6946  0D1C  2D05               	goto	l2023
  6947  0D1D  0856               	movf	___ftmul@f3_as_product,w
  6948  0D1E  00F1               	movwf	___ftpack@arg
  6949  0D1F  0857               	movf	___ftmul@f3_as_product+1,w
  6950  0D20  00F2               	movwf	___ftpack@arg+1
  6951  0D21  0858               	movf	___ftmul@f3_as_product+2,w
  6952  0D22  00F3               	movwf	___ftpack@arg+2
  6953  0D23  0855               	movf	___ftmul@exp,w
  6954  0D24  00D1               	movwf	??___ftmul
  6955  0D25  0851               	movf	??___ftmul,w
  6956  0D26  00F4               	movwf	___ftpack@exp
  6957  0D27  085A               	movf	___ftmul@sign,w
  6958  0D28  00D2               	movwf	??___ftmul+1
  6959  0D29  0852               	movf	??___ftmul+1,w
  6960  0D2A  00F5               	movwf	___ftpack@sign
  6961  0D2B  3188  20D5         	fcall	___ftpack
  6962  0D2D  0871               	movf	?___ftpack,w
  6963  0D2E  0020               	movlb	0	; select bank0
  6964  0D2F  00CB               	movwf	?___ftmul
  6965  0D30  0872               	movf	?___ftpack+1,w
  6966  0D31  00CC               	movwf	?___ftmul+1
  6967  0D32  0873               	movf	?___ftpack+2,w
  6968  0D33  00CD               	movwf	?___ftmul+2
  6969  0D34  0008               	return
  6970  0D35                     __end_of___ftmul:	
  6971                           
  6972                           	psect	text21
  6973  170B                     __ptext21:	
  6974 ;; *************** function ___ftsub *****************
  6975 ;; Defined at:
  6976 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  f2              3   72[BANK0 ] float 
  6979 ;;  f1              3   75[BANK0 ] float 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  3   72[BANK0 ] float 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6991 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;Total ram usage:        6 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    6
  6998 ;; This function calls:
  6999 ;;		___ftadd
  7000 ;; This function is called by:
  7001 ;;		_exp
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function ___ftsub
  7007  170B                     ___ftsub:	
  7008                           
  7009                           ;incstack = 0
  7010                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7011  170B  0020               	movlb	0	; select bank0
  7012  170C  086A               	movf	___ftsub@f2+2,w
  7013  170D  0469               	iorwf	___ftsub@f2+1,w
  7014  170E  0468               	iorwf	___ftsub@f2,w
  7015  170F  1903               	skipnz
  7016  1710  2F13               	goto	l2167
  7017  1711  3080               	movlw	128
  7018  1712  06EA               	xorwf	___ftsub@f2+2,f
  7019  1713                     l2167:	
  7020  1713  086B               	movf	___ftsub@f1,w
  7021  1714  00DB               	movwf	___ftadd@f1
  7022  1715  086C               	movf	___ftsub@f1+1,w
  7023  1716  00DC               	movwf	___ftadd@f1+1
  7024  1717  086D               	movf	___ftsub@f1+2,w
  7025  1718  00DD               	movwf	___ftadd@f1+2
  7026  1719  0868               	movf	___ftsub@f2,w
  7027  171A  00DE               	movwf	___ftadd@f2
  7028  171B  0869               	movf	___ftsub@f2+1,w
  7029  171C  00DF               	movwf	___ftadd@f2+1
  7030  171D  086A               	movf	___ftsub@f2+2,w
  7031  171E  00E0               	movwf	___ftadd@f2+2
  7032  171F  318E  2601         	fcall	___ftadd
  7033  1721  0020               	movlb	0	; select bank0
  7034  1722  085B               	movf	?___ftadd,w
  7035  1723  00E8               	movwf	?___ftsub
  7036  1724  085C               	movf	?___ftadd+1,w
  7037  1725  00E9               	movwf	?___ftsub+1
  7038  1726  085D               	movf	?___ftadd+2,w
  7039  1727  00EA               	movwf	?___ftsub+2
  7040  1728  0008               	return
  7041  1729                     __end_of___ftsub:	
  7042                           
  7043                           	psect	text22
  7044  0E01                     __ptext22:	
  7045 ;; *************** function ___ftadd *****************
  7046 ;; Defined at:
  7047 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  f1              3   59[BANK0 ] float 
  7050 ;;  f2              3   62[BANK0 ] float 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  exp1            1   71[BANK0 ] unsigned char 
  7053 ;;  exp2            1   70[BANK0 ] unsigned char 
  7054 ;;  sign            1   69[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  3   59[BANK0 ] float 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0, pclath, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:       13 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    5
  7071 ;; This function calls:
  7072 ;;		___ftpack
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;;		___ftsub
  7076 ;;		_floor
  7077 ;;		_log
  7078 ;;		_eval_poly
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function ___ftadd
  7084  0E01                     ___ftadd:	
  7085                           
  7086                           ;incstack = 0
  7087                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7088  0E01  0020               	movlb	0	; select bank0
  7089  0E02  085B               	movf	___ftadd@f1,w
  7090  0E03  00E1               	movwf	??___ftadd
  7091  0E04  085C               	movf	___ftadd@f1+1,w
  7092  0E05  00E2               	movwf	??___ftadd+1
  7093  0E06  085D               	movf	___ftadd@f1+2,w
  7094  0E07  00E3               	movwf	??___ftadd+2
  7095  0E08  1003               	clrc
  7096  0E09  0D62               	rlf	??___ftadd+1,w
  7097  0E0A  0D63               	rlf	??___ftadd+2,w
  7098  0E0B  00E4               	movwf	??___ftadd+3
  7099  0E0C  0864               	movf	??___ftadd+3,w
  7100  0E0D  00E7               	movwf	___ftadd@exp1
  7101  0E0E  085E               	movf	___ftadd@f2,w
  7102  0E0F  00E1               	movwf	??___ftadd
  7103  0E10  085F               	movf	___ftadd@f2+1,w
  7104  0E11  00E2               	movwf	??___ftadd+1
  7105  0E12  0860               	movf	___ftadd@f2+2,w
  7106  0E13  00E3               	movwf	??___ftadd+2
  7107  0E14  1003               	clrc
  7108  0E15  0D62               	rlf	??___ftadd+1,w
  7109  0E16  0D63               	rlf	??___ftadd+2,w
  7110  0E17  00E4               	movwf	??___ftadd+3
  7111  0E18  0864               	movf	??___ftadd+3,w
  7112  0E19  00E6               	movwf	___ftadd@exp2
  7113  0E1A  0867               	movf	___ftadd@exp1,w
  7114  0E1B  1903               	btfsc	3,2
  7115  0E1C  2E29               	goto	l1903
  7116  0E1D  0866               	movf	___ftadd@exp2,w
  7117  0E1E  0267               	subwf	___ftadd@exp1,w
  7118  0E1F  1803               	skipnc
  7119  0E20  2E30               	goto	l1907
  7120  0E21  0367               	decf	___ftadd@exp1,w
  7121  0E22  3AFF               	xorlw	255
  7122  0E23  0766               	addwf	___ftadd@exp2,w
  7123  0E24  00E1               	movwf	??___ftadd
  7124  0E25  3019               	movlw	25
  7125  0E26  0261               	subwf	??___ftadd,w
  7126  0E27  1C03               	skipc
  7127  0E28  2E30               	goto	l1907
  7128  0E29                     l1903:	
  7129  0E29  085E               	movf	___ftadd@f2,w
  7130  0E2A  00DB               	movwf	?___ftadd
  7131  0E2B  085F               	movf	___ftadd@f2+1,w
  7132  0E2C  00DC               	movwf	?___ftadd+1
  7133  0E2D  0860               	movf	___ftadd@f2+2,w
  7134  0E2E  00DD               	movwf	?___ftadd+2
  7135  0E2F  0008               	return
  7136  0E30                     l1907:	
  7137  0E30  0866               	movf	___ftadd@exp2,w
  7138  0E31  1903               	btfsc	3,2
  7139  0E32  0008               	return
  7140  0E33  0867               	movf	___ftadd@exp1,w
  7141  0E34  0266               	subwf	___ftadd@exp2,w
  7142  0E35  1803               	skipnc
  7143  0E36  2E3F               	goto	l1913
  7144  0E37  0366               	decf	___ftadd@exp2,w
  7145  0E38  3AFF               	xorlw	255
  7146  0E39  0767               	addwf	___ftadd@exp1,w
  7147  0E3A  00E1               	movwf	??___ftadd
  7148  0E3B  3019               	movlw	25
  7149  0E3C  0261               	subwf	??___ftadd,w
  7150  0E3D  1803               	btfsc	3,0
  7151  0E3E  0008               	return
  7152  0E3F                     l1913:	
  7153  0E3F  3006               	movlw	6
  7154  0E40  00E1               	movwf	??___ftadd
  7155  0E41  0861               	movf	??___ftadd,w
  7156  0E42  00E5               	movwf	___ftadd@sign
  7157  0E43  1BDD               	btfsc	___ftadd@f1+2,7
  7158  0E44  17E5               	bsf	___ftadd@sign,7
  7159  0E45  1BE0               	btfsc	___ftadd@f2+2,7
  7160  0E46  1765               	bsf	___ftadd@sign,6
  7161  0E47  17DC               	bsf	___ftadd@f1+1,7
  7162  0E48  30FF               	movlw	255
  7163  0E49  05DB               	andwf	___ftadd@f1,f
  7164  0E4A  30FF               	movlw	255
  7165  0E4B  05DC               	andwf	___ftadd@f1+1,f
  7166  0E4C  3000               	movlw	0
  7167  0E4D  05DD               	andwf	___ftadd@f1+2,f
  7168  0E4E  17DF               	bsf	___ftadd@f2+1,7
  7169  0E4F  30FF               	movlw	255
  7170  0E50  05DE               	andwf	___ftadd@f2,f
  7171  0E51  30FF               	movlw	255
  7172  0E52  05DF               	andwf	___ftadd@f2+1,f
  7173  0E53  3000               	movlw	0
  7174  0E54  05E0               	andwf	___ftadd@f2+2,f
  7175  0E55  0866               	movf	___ftadd@exp2,w
  7176  0E56  0267               	subwf	___ftadd@exp1,w
  7177  0E57  1803               	skipnc
  7178  0E58  2E7B               	goto	l1935
  7179  0E59                     l1925:	
  7180  0E59  3001               	movlw	1
  7181  0E5A                     u1995:	
  7182  0E5A  35DE               	lslf	___ftadd@f2,f
  7183  0E5B  0DDF               	rlf	___ftadd@f2+1,f
  7184  0E5C  0DE0               	rlf	___ftadd@f2+2,f
  7185  0E5D  0B89               	decfsz	9,f
  7186  0E5E  2E5A               	goto	u1995
  7187  0E5F  3001               	movlw	1
  7188  0E60  02E6               	subwf	___ftadd@exp2,f
  7189  0E61  0866               	movf	___ftadd@exp2,w
  7190  0E62  0667               	xorwf	___ftadd@exp1,w
  7191  0E63  1903               	skipnz
  7192  0E64  2E76               	goto	l1933
  7193  0E65  3001               	movlw	1
  7194  0E66  02E5               	subwf	___ftadd@sign,f
  7195  0E67  0865               	movf	___ftadd@sign,w
  7196  0E68  3907               	andlw	7
  7197  0E69  1903               	btfsc	3,2
  7198  0E6A  2E76               	goto	l1933
  7199  0E6B  2E59               	goto	l1925
  7200  0E6C                     l1931:	
  7201  0E6C  3001               	movlw	1
  7202  0E6D                     u2025:	
  7203  0E6D  36DD               	lsrf	___ftadd@f1+2,f
  7204  0E6E  0CDC               	rrf	___ftadd@f1+1,f
  7205  0E6F  0CDB               	rrf	___ftadd@f1,f
  7206  0E70  0B89               	decfsz	9,f
  7207  0E71  2E6D               	goto	u2025
  7208  0E72  3001               	movlw	1
  7209  0E73  00E1               	movwf	??___ftadd
  7210  0E74  0861               	movf	??___ftadd,w
  7211  0E75  07E7               	addwf	___ftadd@exp1,f
  7212  0E76                     l1933:	
  7213  0E76  0867               	movf	___ftadd@exp1,w
  7214  0E77  0666               	xorwf	___ftadd@exp2,w
  7215  0E78  1903               	btfsc	3,2
  7216  0E79  2EA0               	goto	l547
  7217  0E7A  2E6C               	goto	l1931
  7218  0E7B                     l1935:	
  7219  0E7B  0867               	movf	___ftadd@exp1,w
  7220  0E7C  0266               	subwf	___ftadd@exp2,w
  7221  0E7D  1803               	skipnc
  7222  0E7E  2EA0               	goto	l547
  7223  0E7F                     l1937:	
  7224  0E7F  3001               	movlw	1
  7225  0E80                     u2055:	
  7226  0E80  35DB               	lslf	___ftadd@f1,f
  7227  0E81  0DDC               	rlf	___ftadd@f1+1,f
  7228  0E82  0DDD               	rlf	___ftadd@f1+2,f
  7229  0E83  0B89               	decfsz	9,f
  7230  0E84  2E80               	goto	u2055
  7231  0E85  3001               	movlw	1
  7232  0E86  02E7               	subwf	___ftadd@exp1,f
  7233  0E87  0866               	movf	___ftadd@exp2,w
  7234  0E88  0667               	xorwf	___ftadd@exp1,w
  7235  0E89  1903               	skipnz
  7236  0E8A  2E9C               	goto	l1945
  7237  0E8B  3001               	movlw	1
  7238  0E8C  02E5               	subwf	___ftadd@sign,f
  7239  0E8D  0865               	movf	___ftadd@sign,w
  7240  0E8E  3907               	andlw	7
  7241  0E8F  1903               	btfsc	3,2
  7242  0E90  2E9C               	goto	l1945
  7243  0E91  2E7F               	goto	l1937
  7244  0E92                     l1943:	
  7245  0E92  3001               	movlw	1
  7246  0E93                     u2085:	
  7247  0E93  36E0               	lsrf	___ftadd@f2+2,f
  7248  0E94  0CDF               	rrf	___ftadd@f2+1,f
  7249  0E95  0CDE               	rrf	___ftadd@f2,f
  7250  0E96  0B89               	decfsz	9,f
  7251  0E97  2E93               	goto	u2085
  7252  0E98  3001               	movlw	1
  7253  0E99  00E1               	movwf	??___ftadd
  7254  0E9A  0861               	movf	??___ftadd,w
  7255  0E9B  07E6               	addwf	___ftadd@exp2,f
  7256  0E9C                     l1945:	
  7257  0E9C  0867               	movf	___ftadd@exp1,w
  7258  0E9D  0666               	xorwf	___ftadd@exp2,w
  7259  0E9E  1D03               	skipz
  7260  0E9F  2E92               	goto	l1943
  7261  0EA0                     l547:	
  7262  0EA0  1FE5               	btfss	___ftadd@sign,7
  7263  0EA1  2EB2               	goto	l1949
  7264  0EA2  30FF               	movlw	255
  7265  0EA3  06DB               	xorwf	___ftadd@f1,f
  7266  0EA4  30FF               	movlw	255
  7267  0EA5  06DC               	xorwf	___ftadd@f1+1,f
  7268  0EA6  30FF               	movlw	255
  7269  0EA7  06DD               	xorwf	___ftadd@f1+2,f
  7270  0EA8  3001               	movlw	1
  7271  0EA9  07DB               	addwf	___ftadd@f1,f
  7272  0EAA  3000               	movlw	0
  7273  0EAB  1803               	skipnc
  7274  0EAC  3001               	movlw	1
  7275  0EAD  07DC               	addwf	___ftadd@f1+1,f
  7276  0EAE  3000               	movlw	0
  7277  0EAF  1803               	skipnc
  7278  0EB0  3001               	movlw	1
  7279  0EB1  07DD               	addwf	___ftadd@f1+2,f
  7280  0EB2                     l1949:	
  7281  0EB2  1F65               	btfss	___ftadd@sign,6
  7282  0EB3  2EC4               	goto	l1953
  7283  0EB4  30FF               	movlw	255
  7284  0EB5  06DE               	xorwf	___ftadd@f2,f
  7285  0EB6  30FF               	movlw	255
  7286  0EB7  06DF               	xorwf	___ftadd@f2+1,f
  7287  0EB8  30FF               	movlw	255
  7288  0EB9  06E0               	xorwf	___ftadd@f2+2,f
  7289  0EBA  3001               	movlw	1
  7290  0EBB  07DE               	addwf	___ftadd@f2,f
  7291  0EBC  3000               	movlw	0
  7292  0EBD  1803               	skipnc
  7293  0EBE  3001               	movlw	1
  7294  0EBF  07DF               	addwf	___ftadd@f2+1,f
  7295  0EC0  3000               	movlw	0
  7296  0EC1  1803               	skipnc
  7297  0EC2  3001               	movlw	1
  7298  0EC3  07E0               	addwf	___ftadd@f2+2,f
  7299  0EC4                     l1953:	
  7300  0EC4  01E5               	clrf	___ftadd@sign
  7301  0EC5  085B               	movf	___ftadd@f1,w
  7302  0EC6  07DE               	addwf	___ftadd@f2,f
  7303  0EC7  085C               	movf	___ftadd@f1+1,w
  7304  0EC8  3DDF               	addwfc	___ftadd@f2+1,f
  7305  0EC9  085D               	movf	___ftadd@f1+2,w
  7306  0ECA  3DE0               	addwfc	___ftadd@f2+2,f
  7307  0ECB  1FE0               	btfss	___ftadd@f2+2,7
  7308  0ECC  2EDF               	goto	l1963
  7309  0ECD  30FF               	movlw	255
  7310  0ECE  06DE               	xorwf	___ftadd@f2,f
  7311  0ECF  30FF               	movlw	255
  7312  0ED0  06DF               	xorwf	___ftadd@f2+1,f
  7313  0ED1  30FF               	movlw	255
  7314  0ED2  06E0               	xorwf	___ftadd@f2+2,f
  7315  0ED3  3001               	movlw	1
  7316  0ED4  07DE               	addwf	___ftadd@f2,f
  7317  0ED5  3000               	movlw	0
  7318  0ED6  1803               	skipnc
  7319  0ED7  3001               	movlw	1
  7320  0ED8  07DF               	addwf	___ftadd@f2+1,f
  7321  0ED9  3000               	movlw	0
  7322  0EDA  1803               	skipnc
  7323  0EDB  3001               	movlw	1
  7324  0EDC  07E0               	addwf	___ftadd@f2+2,f
  7325  0EDD  01E5               	clrf	___ftadd@sign
  7326  0EDE  0AE5               	incf	___ftadd@sign,f
  7327  0EDF                     l1963:	
  7328  0EDF  085E               	movf	___ftadd@f2,w
  7329  0EE0  00F1               	movwf	___ftpack@arg
  7330  0EE1  085F               	movf	___ftadd@f2+1,w
  7331  0EE2  00F2               	movwf	___ftpack@arg+1
  7332  0EE3  0860               	movf	___ftadd@f2+2,w
  7333  0EE4  00F3               	movwf	___ftpack@arg+2
  7334  0EE5  0867               	movf	___ftadd@exp1,w
  7335  0EE6  00E1               	movwf	??___ftadd
  7336  0EE7  0861               	movf	??___ftadd,w
  7337  0EE8  00F4               	movwf	___ftpack@exp
  7338  0EE9  0865               	movf	___ftadd@sign,w
  7339  0EEA  00E2               	movwf	??___ftadd+1
  7340  0EEB  0862               	movf	??___ftadd+1,w
  7341  0EEC  00F5               	movwf	___ftpack@sign
  7342  0EED  3188  20D5         	fcall	___ftpack
  7343  0EEF  0871               	movf	?___ftpack,w
  7344  0EF0  0020               	movlb	0	; select bank0
  7345  0EF1  00DB               	movwf	?___ftadd
  7346  0EF2  0872               	movf	?___ftpack+1,w
  7347  0EF3  00DC               	movwf	?___ftadd+1
  7348  0EF4  0873               	movf	?___ftpack+2,w
  7349  0EF5  00DD               	movwf	?___ftadd+2
  7350  0EF6  0008               	return
  7351  0EF7                     __end_of___ftadd:	
  7352                           
  7353                           	psect	text23
  7354  166B                     __ptext23:	
  7355 ;; *************** function ___ftneg *****************
  7356 ;; Defined at:
  7357 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  f1              3   40[BANK0 ] float 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  3   40[BANK0 ] float 
  7364 ;; Registers used:
  7365 ;;		wreg
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7371 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;Total ram usage:        3 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    4
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_main
  7382 ;;		_pow
  7383 ;;		_exp
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function ___ftneg
  7389  166B                     ___ftneg:	
  7390                           
  7391                           ;incstack = 0
  7392                           ; Regs used in ___ftneg: [wreg]
  7393  166B  0020               	movlb	0	; select bank0
  7394  166C  084A               	movf	___ftneg@f1+2,w
  7395  166D  0449               	iorwf	___ftneg@f1+1,w
  7396  166E  0448               	iorwf	___ftneg@f1,w
  7397  166F  1903               	skipnz
  7398  1670  0008               	return
  7399  1671  3080               	movlw	128
  7400  1672  06CA               	xorwf	___ftneg@f1+2,f
  7401  1673  0008               	return
  7402  1674                     __end_of___ftneg:	
  7403                           
  7404                           	psect	text24
  7405  0BD8                     __ptext24:	
  7406 ;; *************** function ___ftdiv *****************
  7407 ;; Defined at:
  7408 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  f2              3    2[BANK0 ] float 
  7411 ;;  f1              3    5[BANK0 ] float 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  f3              3   13[BANK0 ] float 
  7414 ;;  sign            1   17[BANK0 ] unsigned char 
  7415 ;;  exp             1   16[BANK0 ] unsigned char 
  7416 ;;  cntr            1   12[BANK0 ] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  3    2[BANK0 ] float 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0, pclath, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7426 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;Total ram usage:       16 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    5
  7433 ;; This function calls:
  7434 ;;		___ftpack
  7435 ;; This function is called by:
  7436 ;;		_main
  7437 ;;		_exp
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           
  7442                           ;psect for function ___ftdiv
  7443  0BD8                     ___ftdiv:	
  7444                           
  7445                           ;incstack = 0
  7446                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7447  0BD8  0020               	movlb	0	; select bank0
  7448  0BD9  0825               	movf	___ftdiv@f1,w
  7449  0BDA  00A8               	movwf	??___ftdiv
  7450  0BDB  0826               	movf	___ftdiv@f1+1,w
  7451  0BDC  00A9               	movwf	??___ftdiv+1
  7452  0BDD  0827               	movf	___ftdiv@f1+2,w
  7453  0BDE  00AA               	movwf	??___ftdiv+2
  7454  0BDF  1003               	clrc
  7455  0BE0  0D29               	rlf	??___ftdiv+1,w
  7456  0BE1  0D2A               	rlf	??___ftdiv+2,w
  7457  0BE2  00AB               	movwf	??___ftdiv+3
  7458  0BE3  082B               	movf	??___ftdiv+3,w
  7459  0BE4  00B0               	movwf	___ftdiv@exp
  7460  0BE5  0830               	movf	___ftdiv@exp,w
  7461  0BE6  1D03               	btfss	3,2
  7462  0BE7  2BEF               	goto	l2119
  7463  0BE8  3000               	movlw	0
  7464  0BE9  00A2               	movwf	?___ftdiv
  7465  0BEA  3000               	movlw	0
  7466  0BEB  00A3               	movwf	?___ftdiv+1
  7467  0BEC  3000               	movlw	0
  7468  0BED  00A4               	movwf	?___ftdiv+2
  7469  0BEE  0008               	return
  7470  0BEF                     l2119:	
  7471  0BEF  0822               	movf	___ftdiv@f2,w
  7472  0BF0  00A8               	movwf	??___ftdiv
  7473  0BF1  0823               	movf	___ftdiv@f2+1,w
  7474  0BF2  00A9               	movwf	??___ftdiv+1
  7475  0BF3  0824               	movf	___ftdiv@f2+2,w
  7476  0BF4  00AA               	movwf	??___ftdiv+2
  7477  0BF5  1003               	clrc
  7478  0BF6  0D29               	rlf	??___ftdiv+1,w
  7479  0BF7  0D2A               	rlf	??___ftdiv+2,w
  7480  0BF8  00AB               	movwf	??___ftdiv+3
  7481  0BF9  082B               	movf	??___ftdiv+3,w
  7482  0BFA  00B1               	movwf	___ftdiv@sign
  7483  0BFB  0831               	movf	___ftdiv@sign,w
  7484  0BFC  1D03               	btfss	3,2
  7485  0BFD  2C05               	goto	l2125
  7486  0BFE  3000               	movlw	0
  7487  0BFF  00A2               	movwf	?___ftdiv
  7488  0C00  3000               	movlw	0
  7489  0C01  00A3               	movwf	?___ftdiv+1
  7490  0C02  3000               	movlw	0
  7491  0C03  00A4               	movwf	?___ftdiv+2
  7492  0C04  0008               	return
  7493  0C05                     l2125:	
  7494  0C05  3000               	movlw	0
  7495  0C06  00AD               	movwf	___ftdiv@f3
  7496  0C07  3000               	movlw	0
  7497  0C08  00AE               	movwf	___ftdiv@f3+1
  7498  0C09  3000               	movlw	0
  7499  0C0A  00AF               	movwf	___ftdiv@f3+2
  7500  0C0B  3089               	movlw	137
  7501  0C0C  0731               	addwf	___ftdiv@sign,w
  7502  0C0D  00A8               	movwf	??___ftdiv
  7503  0C0E  0828               	movf	??___ftdiv,w
  7504  0C0F  02B0               	subwf	___ftdiv@exp,f
  7505  0C10  0825               	movf	___ftdiv@f1,w
  7506  0C11  00A8               	movwf	??___ftdiv
  7507  0C12  0826               	movf	___ftdiv@f1+1,w
  7508  0C13  00A9               	movwf	??___ftdiv+1
  7509  0C14  0827               	movf	___ftdiv@f1+2,w
  7510  0C15  00AA               	movwf	??___ftdiv+2
  7511  0C16  3010               	movlw	16
  7512  0C17                     u2425:	
  7513  0C17  36AA               	lsrf	??___ftdiv+2,f
  7514  0C18  0CA9               	rrf	??___ftdiv+1,f
  7515  0C19  0CA8               	rrf	??___ftdiv,f
  7516  0C1A  0B89               	decfsz	9,f
  7517  0C1B  2C17               	goto	u2425
  7518  0C1C  0828               	movf	??___ftdiv,w
  7519  0C1D  00AB               	movwf	??___ftdiv+3
  7520  0C1E  082B               	movf	??___ftdiv+3,w
  7521  0C1F  00B1               	movwf	___ftdiv@sign
  7522  0C20  0822               	movf	___ftdiv@f2,w
  7523  0C21  00A8               	movwf	??___ftdiv
  7524  0C22  0823               	movf	___ftdiv@f2+1,w
  7525  0C23  00A9               	movwf	??___ftdiv+1
  7526  0C24  0824               	movf	___ftdiv@f2+2,w
  7527  0C25  00AA               	movwf	??___ftdiv+2
  7528  0C26  3010               	movlw	16
  7529  0C27                     u2435:	
  7530  0C27  36AA               	lsrf	??___ftdiv+2,f
  7531  0C28  0CA9               	rrf	??___ftdiv+1,f
  7532  0C29  0CA8               	rrf	??___ftdiv,f
  7533  0C2A  0B89               	decfsz	9,f
  7534  0C2B  2C27               	goto	u2435
  7535  0C2C  0828               	movf	??___ftdiv,w
  7536  0C2D  00AB               	movwf	??___ftdiv+3
  7537  0C2E  082B               	movf	??___ftdiv+3,w
  7538  0C2F  06B1               	xorwf	___ftdiv@sign,f
  7539  0C30  3080               	movlw	128
  7540  0C31  00A8               	movwf	??___ftdiv
  7541  0C32  0828               	movf	??___ftdiv,w
  7542  0C33  05B1               	andwf	___ftdiv@sign,f
  7543  0C34  17A6               	bsf	___ftdiv@f1+1,7
  7544  0C35  30FF               	movlw	255
  7545  0C36  05A5               	andwf	___ftdiv@f1,f
  7546  0C37  30FF               	movlw	255
  7547  0C38  05A6               	andwf	___ftdiv@f1+1,f
  7548  0C39  3000               	movlw	0
  7549  0C3A  05A7               	andwf	___ftdiv@f1+2,f
  7550  0C3B  17A3               	bsf	___ftdiv@f2+1,7
  7551  0C3C  30FF               	movlw	255
  7552  0C3D  05A2               	andwf	___ftdiv@f2,f
  7553  0C3E  30FF               	movlw	255
  7554  0C3F  05A3               	andwf	___ftdiv@f2+1,f
  7555  0C40  3000               	movlw	0
  7556  0C41  05A4               	andwf	___ftdiv@f2+2,f
  7557  0C42  3018               	movlw	24
  7558  0C43  00A8               	movwf	??___ftdiv
  7559  0C44  0828               	movf	??___ftdiv,w
  7560  0C45  00AC               	movwf	___ftdiv@cntr
  7561  0C46                     l2139:	
  7562  0C46  3001               	movlw	1
  7563  0C47                     u2445:	
  7564  0C47  35AD               	lslf	___ftdiv@f3,f
  7565  0C48  0DAE               	rlf	___ftdiv@f3+1,f
  7566  0C49  0DAF               	rlf	___ftdiv@f3+2,f
  7567  0C4A  0B89               	decfsz	9,f
  7568  0C4B  2C47               	goto	u2445
  7569  0C4C  0824               	movf	___ftdiv@f2+2,w
  7570  0C4D  0227               	subwf	___ftdiv@f1+2,w
  7571  0C4E  1D03               	skipz
  7572  0C4F  2C56               	goto	u2455
  7573  0C50  0823               	movf	___ftdiv@f2+1,w
  7574  0C51  0226               	subwf	___ftdiv@f1+1,w
  7575  0C52  1D03               	skipz
  7576  0C53  2C56               	goto	u2455
  7577  0C54  0822               	movf	___ftdiv@f2,w
  7578  0C55  0225               	subwf	___ftdiv@f1,w
  7579  0C56                     u2455:	
  7580  0C56  1C03               	skipc
  7581  0C57  2C5F               	goto	l2147
  7582  0C58  0822               	movf	___ftdiv@f2,w
  7583  0C59  02A5               	subwf	___ftdiv@f1,f
  7584  0C5A  0823               	movf	___ftdiv@f2+1,w
  7585  0C5B  3BA6               	subwfb	___ftdiv@f1+1,f
  7586  0C5C  0824               	movf	___ftdiv@f2+2,w
  7587  0C5D  3BA7               	subwfb	___ftdiv@f1+2,f
  7588  0C5E  142D               	bsf	___ftdiv@f3,0
  7589  0C5F                     l2147:	
  7590  0C5F  3001               	movlw	1
  7591  0C60                     u2465:	
  7592  0C60  35A5               	lslf	___ftdiv@f1,f
  7593  0C61  0DA6               	rlf	___ftdiv@f1+1,f
  7594  0C62  0DA7               	rlf	___ftdiv@f1+2,f
  7595  0C63  0B89               	decfsz	9,f
  7596  0C64  2C60               	goto	u2465
  7597  0C65  3001               	movlw	1
  7598  0C66  02AC               	subwf	___ftdiv@cntr,f
  7599  0C67  1D03               	btfss	3,2
  7600  0C68  2C46               	goto	l2139
  7601  0C69  082D               	movf	___ftdiv@f3,w
  7602  0C6A  00F1               	movwf	___ftpack@arg
  7603  0C6B  082E               	movf	___ftdiv@f3+1,w
  7604  0C6C  00F2               	movwf	___ftpack@arg+1
  7605  0C6D  082F               	movf	___ftdiv@f3+2,w
  7606  0C6E  00F3               	movwf	___ftpack@arg+2
  7607  0C6F  0830               	movf	___ftdiv@exp,w
  7608  0C70  00A8               	movwf	??___ftdiv
  7609  0C71  0828               	movf	??___ftdiv,w
  7610  0C72  00F4               	movwf	___ftpack@exp
  7611  0C73  0831               	movf	___ftdiv@sign,w
  7612  0C74  00A9               	movwf	??___ftdiv+1
  7613  0C75  0829               	movf	??___ftdiv+1,w
  7614  0C76  00F5               	movwf	___ftpack@sign
  7615  0C77  3188  20D5         	fcall	___ftpack
  7616  0C79  0871               	movf	?___ftpack,w
  7617  0C7A  0020               	movlb	0	; select bank0
  7618  0C7B  00A2               	movwf	?___ftdiv
  7619  0C7C  0872               	movf	?___ftpack+1,w
  7620  0C7D  00A3               	movwf	?___ftdiv+1
  7621  0C7E  0873               	movf	?___ftpack+2,w
  7622  0C7F  00A4               	movwf	?___ftdiv+2
  7623  0C80  0008               	return
  7624  0C81                     __end_of___ftdiv:	
  7625                           
  7626                           	psect	text25
  7627  0801                     __ptext25:	
  7628 ;; *************** function ___awtoft *****************
  7629 ;; Defined at:
  7630 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  c               2    9[COMMON] int 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  sign            1   12[COMMON] unsigned char 
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  3    9[COMMON] float 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0, pclath, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7644 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;Total ram usage:        6 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    5
  7651 ;; This function calls:
  7652 ;;		___ftpack
  7653 ;; This function is called by:
  7654 ;;		_main
  7655 ;;		_exp
  7656 ;;		_log
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           
  7661                           ;psect for function ___awtoft
  7662  0801                     ___awtoft:	
  7663                           
  7664                           ;incstack = 0
  7665                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7666  0801  01FC               	clrf	___awtoft@sign
  7667  0802  1FFA               	btfss	___awtoft@c+1,7
  7668  0803  280B               	goto	l2109
  7669  0804  09F9               	comf	___awtoft@c,f
  7670  0805  09FA               	comf	___awtoft@c+1,f
  7671  0806  0AF9               	incf	___awtoft@c,f
  7672  0807  1903               	skipnz
  7673  0808  0AFA               	incf	___awtoft@c+1,f
  7674  0809  01FC               	clrf	___awtoft@sign
  7675  080A  0AFC               	incf	___awtoft@sign,f
  7676  080B                     l2109:	
  7677  080B  0879               	movf	___awtoft@c,w
  7678  080C  00F1               	movwf	___ftpack@arg
  7679  080D  087A               	movf	___awtoft@c+1,w
  7680  080E  00F2               	movwf	___ftpack@arg+1
  7681  080F  01F3               	clrf	___ftpack@arg+2
  7682  0810  308E               	movlw	142
  7683  0811  0020               	movlb	0	; select bank0
  7684  0812  00A0               	movwf	??___awtoft
  7685  0813  0820               	movf	??___awtoft,w
  7686  0814  00F4               	movwf	___ftpack@exp
  7687  0815  087C               	movf	___awtoft@sign,w
  7688  0816  00A1               	movwf	??___awtoft+1
  7689  0817  0821               	movf	??___awtoft+1,w
  7690  0818  00F5               	movwf	___ftpack@sign
  7691  0819  3188  20D5         	fcall	___ftpack
  7692  081B  0871               	movf	?___ftpack,w
  7693  081C  00F9               	movwf	?___awtoft
  7694  081D  0872               	movf	?___ftpack+1,w
  7695  081E  00FA               	movwf	?___awtoft+1
  7696  081F  0873               	movf	?___ftpack+2,w
  7697  0820  00FB               	movwf	?___awtoft+2
  7698  0821  0008               	return
  7699  0822                     __end_of___awtoft:	
  7700                           
  7701                           	psect	text26
  7702  1747                     __ptext26:	
  7703 ;; *************** function ___lltoft *****************
  7704 ;; Defined at:
  7705 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  c               4    9[COMMON] unsigned long 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  exp             1    1[BANK0 ] unsigned char 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  3    9[COMMON] float 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0, pclath, cstack
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;Total ram usage:        6 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; Hardware stack levels required when called:    5
  7726 ;; This function calls:
  7727 ;;		___ftpack
  7728 ;; This function is called by:
  7729 ;;		_pow
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           
  7734                           ;psect for function ___lltoft
  7735  1747                     ___lltoft:	
  7736                           
  7737                           ;incstack = 0
  7738                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7739  1747  308E               	movlw	142
  7740  1748  0020               	movlb	0	; select bank0
  7741  1749  00A0               	movwf	??___lltoft
  7742  174A  0820               	movf	??___lltoft,w
  7743  174B  00A1               	movwf	___lltoft@exp
  7744  174C                     l2427:	
  7745  174C  30FF               	movlw	255
  7746  174D  057C               	andwf	___lltoft@c+3,w
  7747  174E  1903               	btfsc	3,2
  7748  174F  2F5C               	goto	l2429
  7749  1750  3001               	movlw	1
  7750  1751                     u2915:	
  7751  1751  36FC               	lsrf	___lltoft@c+3,f
  7752  1752  0CFB               	rrf	___lltoft@c+2,f
  7753  1753  0CFA               	rrf	___lltoft@c+1,f
  7754  1754  0CF9               	rrf	___lltoft@c,f
  7755  1755  0B89               	decfsz	9,f
  7756  1756  2F51               	goto	u2915
  7757  1757  3001               	movlw	1
  7758  1758  00A0               	movwf	??___lltoft
  7759  1759  0820               	movf	??___lltoft,w
  7760  175A  07A1               	addwf	___lltoft@exp,f
  7761  175B  2F4C               	goto	l2427
  7762  175C                     l2429:	
  7763  175C  0879               	movf	___lltoft@c,w
  7764  175D  00F1               	movwf	___ftpack@arg
  7765  175E  087A               	movf	___lltoft@c+1,w
  7766  175F  00F2               	movwf	___ftpack@arg+1
  7767  1760  087B               	movf	___lltoft@c+2,w
  7768  1761  00F3               	movwf	___ftpack@arg+2
  7769  1762  0821               	movf	___lltoft@exp,w
  7770  1763  00A0               	movwf	??___lltoft
  7771  1764  0820               	movf	??___lltoft,w
  7772  1765  00F4               	movwf	___ftpack@exp
  7773  1766  01F5               	clrf	___ftpack@sign
  7774  1767  3188  20D5         	fcall	___ftpack
  7775  1769  0871               	movf	?___ftpack,w
  7776  176A  00F9               	movwf	?___lltoft
  7777  176B  0872               	movf	?___ftpack+1,w
  7778  176C  00FA               	movwf	?___lltoft+1
  7779  176D  0873               	movf	?___ftpack+2,w
  7780  176E  00FB               	movwf	?___lltoft+2
  7781  176F  0008               	return
  7782  1770                     __end_of___lltoft:	
  7783                           
  7784                           	psect	text27
  7785  1696                     __ptext27:	
  7786 ;; *************** function ___lwtoft *****************
  7787 ;; Defined at:
  7788 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  c               2    9[COMMON] unsigned int 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  3    9[COMMON] float 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, pclath, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7802 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;Total ram usage:        4 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    5
  7809 ;; This function calls:
  7810 ;;		___ftpack
  7811 ;; This function is called by:
  7812 ;;		_main
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           
  7817                           ;psect for function ___lwtoft
  7818  1696                     ___lwtoft:	
  7819                           
  7820                           ;incstack = 0
  7821                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7822  1696  0879               	movf	___lwtoft@c,w
  7823  1697  00F1               	movwf	___ftpack@arg
  7824  1698  087A               	movf	___lwtoft@c+1,w
  7825  1699  00F2               	movwf	___ftpack@arg+1
  7826  169A  01F3               	clrf	___ftpack@arg+2
  7827  169B  308E               	movlw	142
  7828  169C  00FC               	movwf	??___lwtoft
  7829  169D  087C               	movf	??___lwtoft,w
  7830  169E  00F4               	movwf	___ftpack@exp
  7831  169F  01F5               	clrf	___ftpack@sign
  7832  16A0  3188  20D5         	fcall	___ftpack
  7833  16A2  0871               	movf	?___ftpack,w
  7834  16A3  00F9               	movwf	?___lwtoft
  7835  16A4  0872               	movf	?___ftpack+1,w
  7836  16A5  00FA               	movwf	?___lwtoft+1
  7837  16A6  0873               	movf	?___ftpack+2,w
  7838  16A7  00FB               	movwf	?___lwtoft+2
  7839  16A8  0008               	return
  7840  16A9                     __end_of___lwtoft:	
  7841                           
  7842                           	psect	text28
  7843  08D5                     __ptext28:	
  7844 ;; *************** function ___ftpack *****************
  7845 ;; Defined at:
  7846 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;  arg             3    1[COMMON] unsigned um
  7849 ;;  exp             1    4[COMMON] unsigned char 
  7850 ;;  sign            1    5[COMMON] unsigned char 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  3    1[COMMON] float 
  7855 ;; Registers used:
  7856 ;;		wreg, status,2, status,0
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7862 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;Total ram usage:        8 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:    4
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		___altoft
  7873 ;;		___awtoft
  7874 ;;		___ftadd
  7875 ;;		___ftdiv
  7876 ;;		___ftmul
  7877 ;;		___lltoft
  7878 ;;		___lwtoft
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function ___ftpack
  7884  08D5                     ___ftpack:	
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7888  08D5  0874               	movf	___ftpack@exp,w
  7889  08D6  1903               	btfsc	3,2
  7890  08D7  28DD               	goto	l1839
  7891  08D8  0873               	movf	___ftpack@arg+2,w
  7892  08D9  0472               	iorwf	___ftpack@arg+1,w
  7893  08DA  0471               	iorwf	___ftpack@arg,w
  7894  08DB  1D03               	skipz
  7895  08DC  28EE               	goto	l1845
  7896  08DD                     l1839:	
  7897  08DD  3000               	movlw	0
  7898  08DE  00F1               	movwf	?___ftpack
  7899  08DF  3000               	movlw	0
  7900  08E0  00F2               	movwf	?___ftpack+1
  7901  08E1  3000               	movlw	0
  7902  08E2  00F3               	movwf	?___ftpack+2
  7903  08E3  0008               	return
  7904  08E4                     l1843:	
  7905  08E4  3001               	movlw	1
  7906  08E5  00F6               	movwf	??___ftpack
  7907  08E6  0876               	movf	??___ftpack,w
  7908  08E7  07F4               	addwf	___ftpack@exp,f
  7909  08E8  3001               	movlw	1
  7910  08E9                     u1735:	
  7911  08E9  36F3               	lsrf	___ftpack@arg+2,f
  7912  08EA  0CF2               	rrf	___ftpack@arg+1,f
  7913  08EB  0CF1               	rrf	___ftpack@arg,f
  7914  08EC  0B89               	decfsz	9,f
  7915  08ED  28E9               	goto	u1735
  7916  08EE                     l1845:	
  7917  08EE  30FE               	movlw	254
  7918  08EF  0573               	andwf	___ftpack@arg+2,w
  7919  08F0  1903               	btfsc	3,2
  7920  08F1  2907               	goto	l516
  7921  08F2  28E4               	goto	l1843
  7922  08F3                     l1847:	
  7923  08F3  3001               	movlw	1
  7924  08F4  00F6               	movwf	??___ftpack
  7925  08F5  0876               	movf	??___ftpack,w
  7926  08F6  07F4               	addwf	___ftpack@exp,f
  7927  08F7  3001               	movlw	1
  7928  08F8  07F1               	addwf	___ftpack@arg,f
  7929  08F9  3000               	movlw	0
  7930  08FA  1803               	skipnc
  7931  08FB  3001               	movlw	1
  7932  08FC  07F2               	addwf	___ftpack@arg+1,f
  7933  08FD  3000               	movlw	0
  7934  08FE  1803               	skipnc
  7935  08FF  3001               	movlw	1
  7936  0900  07F3               	addwf	___ftpack@arg+2,f
  7937  0901  3001               	movlw	1
  7938  0902                     u1755:	
  7939  0902  36F3               	lsrf	___ftpack@arg+2,f
  7940  0903  0CF2               	rrf	___ftpack@arg+1,f
  7941  0904  0CF1               	rrf	___ftpack@arg,f
  7942  0905  0B89               	decfsz	9,f
  7943  0906  2902               	goto	u1755
  7944  0907                     l516:	
  7945  0907  30FF               	movlw	255
  7946  0908  0573               	andwf	___ftpack@arg+2,w
  7947  0909  1903               	btfsc	3,2
  7948  090A  2914               	goto	l1855
  7949  090B  28F3               	goto	l1847
  7950  090C                     l1853:	
  7951  090C  3001               	movlw	1
  7952  090D  02F4               	subwf	___ftpack@exp,f
  7953  090E  3001               	movlw	1
  7954  090F                     u1775:	
  7955  090F  35F1               	lslf	___ftpack@arg,f
  7956  0910  0DF2               	rlf	___ftpack@arg+1,f
  7957  0911  0DF3               	rlf	___ftpack@arg+2,f
  7958  0912  0B89               	decfsz	9,f
  7959  0913  290F               	goto	u1775
  7960  0914                     l1855:	
  7961  0914  1BF2               	btfsc	___ftpack@arg+1,7
  7962  0915  291A               	goto	l523
  7963  0916  3002               	movlw	2
  7964  0917  0274               	subwf	___ftpack@exp,w
  7965  0918  1803               	skipnc
  7966  0919  290C               	goto	l1853
  7967  091A                     l523:	
  7968  091A  1874               	btfsc	___ftpack@exp,0
  7969  091B  2922               	goto	l524
  7970  091C  30FF               	movlw	255
  7971  091D  05F1               	andwf	___ftpack@arg,f
  7972  091E  307F               	movlw	127
  7973  091F  05F2               	andwf	___ftpack@arg+1,f
  7974  0920  30FF               	movlw	255
  7975  0921  05F3               	andwf	___ftpack@arg+2,f
  7976  0922                     l524:	
  7977  0922  1003               	clrc
  7978  0923  0CF4               	rrf	___ftpack@exp,f
  7979  0924  0874               	movf	___ftpack@exp,w
  7980  0925  00F6               	movwf	??___ftpack
  7981  0926  01F7               	clrf	??___ftpack+1
  7982  0927  01F8               	clrf	??___ftpack+2
  7983  0928  3010               	movlw	16
  7984  0929                     u1815:	
  7985  0929  35F6               	lslf	??___ftpack,f
  7986  092A  0DF7               	rlf	??___ftpack+1,f
  7987  092B  0DF8               	rlf	??___ftpack+2,f
  7988  092C  0B89               	decfsz	9,f
  7989  092D  2929               	goto	u1815
  7990  092E  0876               	movf	??___ftpack,w
  7991  092F  04F1               	iorwf	___ftpack@arg,f
  7992  0930  0877               	movf	??___ftpack+1,w
  7993  0931  04F2               	iorwf	___ftpack@arg+1,f
  7994  0932  0878               	movf	??___ftpack+2,w
  7995  0933  04F3               	iorwf	___ftpack@arg+2,f
  7996  0934  0875               	movf	___ftpack@sign,w
  7997  0935  1903               	btfsc	3,2
  7998  0936  0008               	return
  7999  0937  17F3               	bsf	___ftpack@arg+2,7
  8000  0938  0008               	return
  8001  0939                     __end_of___ftpack:	
  8002                           
  8003                           	psect	text29
  8004  179D                     __ptext29:	
  8005 ;; *************** function ___lmul *****************
  8006 ;; Defined at:
  8007 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  multiplier      4    1[COMMON] unsigned long 
  8010 ;;  multiplicand    4    5[COMMON] unsigned long 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  product         4    9[COMMON] unsigned long 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  4    1[COMMON] unsigned long 
  8015 ;; Registers used:
  8016 ;;		wreg, status,2, status,0
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8022 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;Total ram usage:       12 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:    4
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_main
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           
  8037                           ;psect for function ___lmul
  8038  179D                     ___lmul:	
  8039                           
  8040                           ;incstack = 0
  8041                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8042  179D  3000               	movlw	0
  8043  179E  00FC               	movwf	___lmul@product+3
  8044  179F  3000               	movlw	0
  8045  17A0  00FB               	movwf	___lmul@product+2
  8046  17A1  3000               	movlw	0
  8047  17A2  00FA               	movwf	___lmul@product+1
  8048  17A3  3000               	movlw	0
  8049  17A4  00F9               	movwf	___lmul@product
  8050  17A5                     l2653:	
  8051  17A5  1C71               	btfss	___lmul@multiplier,0
  8052  17A6  2FAF               	goto	l2657
  8053  17A7  0875               	movf	___lmul@multiplicand,w
  8054  17A8  07F9               	addwf	___lmul@product,f
  8055  17A9  0876               	movf	___lmul@multiplicand+1,w
  8056  17AA  3DFA               	addwfc	___lmul@product+1,f
  8057  17AB  0877               	movf	___lmul@multiplicand+2,w
  8058  17AC  3DFB               	addwfc	___lmul@product+2,f
  8059  17AD  0878               	movf	___lmul@multiplicand+3,w
  8060  17AE  3DFC               	addwfc	___lmul@product+3,f
  8061  17AF                     l2657:	
  8062  17AF  3001               	movlw	1
  8063  17B0                     u3255:	
  8064  17B0  35F5               	lslf	___lmul@multiplicand,f
  8065  17B1  0DF6               	rlf	___lmul@multiplicand+1,f
  8066  17B2  0DF7               	rlf	___lmul@multiplicand+2,f
  8067  17B3  0DF8               	rlf	___lmul@multiplicand+3,f
  8068  17B4  0B89               	decfsz	9,f
  8069  17B5  2FB0               	goto	u3255
  8070  17B6  3001               	movlw	1
  8071  17B7                     u3265:	
  8072  17B7  36F4               	lsrf	___lmul@multiplier+3,f
  8073  17B8  0CF3               	rrf	___lmul@multiplier+2,f
  8074  17B9  0CF2               	rrf	___lmul@multiplier+1,f
  8075  17BA  0CF1               	rrf	___lmul@multiplier,f
  8076  17BB  0B89               	decfsz	9,f
  8077  17BC  2FB7               	goto	u3265
  8078  17BD  0874               	movf	___lmul@multiplier+3,w
  8079  17BE  0473               	iorwf	___lmul@multiplier+2,w
  8080  17BF  0472               	iorwf	___lmul@multiplier+1,w
  8081  17C0  0471               	iorwf	___lmul@multiplier,w
  8082  17C1  1D03               	skipz
  8083  17C2  2FA5               	goto	l2653
  8084  17C3  087C               	movf	___lmul@product+3,w
  8085  17C4  00F4               	movwf	?___lmul+3
  8086  17C5  087B               	movf	___lmul@product+2,w
  8087  17C6  00F3               	movwf	?___lmul+2
  8088  17C7  087A               	movf	___lmul@product+1,w
  8089  17C8  00F2               	movwf	?___lmul+1
  8090  17C9  0879               	movf	___lmul@product,w
  8091  17CA  00F1               	movwf	?___lmul
  8092  17CB  0008               	return
  8093  17CC                     __end_of___lmul:	
  8094                           
  8095                           	psect	text30
  8096  168A                     __ptext30:	
  8097 ;; *************** function _SYSTEM_Initialize *****************
  8098 ;; Defined at:
  8099 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;Total ram usage:        0 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    6
  8120 ;; This function calls:
  8121 ;;		_EXT_INT_Initialize
  8122 ;;		_OSCILLATOR_Initialize
  8123 ;;		_PIN_MANAGER_Initialize
  8124 ;;		_WDT_Initialize
  8125 ;; This function is called by:
  8126 ;;		_main
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _SYSTEM_Initialize
  8132  168A                     _SYSTEM_Initialize:	
  8133                           
  8134                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  8135                           
  8136                           ;incstack = 0
  8137                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8138  168A  3196  26D4  3196   	fcall	_PIN_MANAGER_Initialize
  8139                           
  8140                           ;mcc.c: 76: OSCILLATOR_Initialize();
  8141  168D  3196  2650  3196   	fcall	_OSCILLATOR_Initialize
  8142                           
  8143                           ;mcc.c: 77: WDT_Initialize();
  8144  1690  3196  2642  3196   	fcall	_WDT_Initialize
  8145                           
  8146                           ;mcc.c: 78: EXT_INT_Initialize();
  8147  1693  3196  267F         	fcall	_EXT_INT_Initialize
  8148  1695  0008               	return
  8149  1696                     __end_of_SYSTEM_Initialize:	
  8150                           
  8151                           	psect	text31
  8152  1642                     __ptext31:	
  8153 ;; *************** function _WDT_Initialize *****************
  8154 ;; Defined at:
  8155 ;;		line 92 in file "mcc_generated_files/mcc.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1    wreg      void 
  8162 ;; Registers used:
  8163 ;;		wreg
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8173 ;;Total ram usage:        0 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    4
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_SYSTEM_Initialize
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           
  8184                           ;psect for function _WDT_Initialize
  8185  1642                     _WDT_Initialize:	
  8186                           
  8187                           ;mcc.c: 95: WDTCON = 0x16;
  8188                           
  8189                           ;incstack = 0
  8190                           ; Regs used in _WDT_Initialize: [wreg]
  8191  1642  3016               	movlw	22
  8192  1643  0021               	movlb	1	; select bank1
  8193  1644  0097               	movwf	23	;volatile
  8194  1645  0008               	return
  8195  1646                     __end_of_WDT_Initialize:	
  8196                           
  8197                           	psect	text32
  8198  16D4                     __ptext32:	
  8199 ;; *************** function _PIN_MANAGER_Initialize *****************
  8200 ;; Defined at:
  8201 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;Total ram usage:        0 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    4
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_SYSTEM_Initialize
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function _PIN_MANAGER_Initialize
  8231  16D4                     _PIN_MANAGER_Initialize:	
  8232                           
  8233                           ;pin_manager.c: 57: LATA = 0x00;
  8234                           
  8235                           ;incstack = 0
  8236                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8237  16D4  0022               	movlb	2	; select bank2
  8238  16D5  018C               	clrf	12	;volatile
  8239                           
  8240                           ;pin_manager.c: 58: LATB = 0x00;
  8241  16D6  018D               	clrf	13	;volatile
  8242                           
  8243                           ;pin_manager.c: 59: LATC = 0x00;
  8244  16D7  018E               	clrf	14	;volatile
  8245                           
  8246                           ;pin_manager.c: 64: TRISA = 0x30;
  8247  16D8  3030               	movlw	48
  8248  16D9  0021               	movlb	1	; select bank1
  8249  16DA  008C               	movwf	12	;volatile
  8250                           
  8251                           ;pin_manager.c: 65: TRISB = 0xF0;
  8252  16DB  30F0               	movlw	240
  8253  16DC  008D               	movwf	13	;volatile
  8254                           
  8255                           ;pin_manager.c: 66: TRISC = 0xE7;
  8256  16DD  30E7               	movlw	231
  8257  16DE  008E               	movwf	14	;volatile
  8258                           
  8259                           ;pin_manager.c: 71: ANSELC = 0xCD;
  8260  16DF  30CD               	movlw	205
  8261  16E0  0023               	movlb	3	; select bank3
  8262  16E1  008E               	movwf	14	;volatile
  8263                           
  8264                           ;pin_manager.c: 72: ANSELB = 0x00;
  8265  16E2  018D               	clrf	13	;volatile
  8266                           
  8267                           ;pin_manager.c: 73: ANSELA = 0x10;
  8268  16E3  3010               	movlw	16
  8269  16E4  008C               	movwf	12	;volatile
  8270                           
  8271                           ;pin_manager.c: 78: WPUB = 0xF0;
  8272  16E5  30F0               	movlw	240
  8273  16E6  0024               	movlb	4	; select bank4
  8274  16E7  008D               	movwf	13	;volatile
  8275                           
  8276                           ;pin_manager.c: 79: WPUA = 0x38;
  8277  16E8  3038               	movlw	56
  8278  16E9  008C               	movwf	12	;volatile
  8279                           
  8280                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  8281  16EA  0021               	movlb	1	; select bank1
  8282  16EB  1395               	bcf	21,7	;volatile
  8283                           
  8284                           ;pin_manager.c: 86: APFCON = 0x00;
  8285  16EC  0022               	movlb	2	; select bank2
  8286  16ED  019D               	clrf	29	;volatile
  8287  16EE  0008               	return
  8288  16EF                     __end_of_PIN_MANAGER_Initialize:	
  8289                           
  8290                           	psect	text33
  8291  1650                     __ptext33:	
  8292 ;; *************** function _OSCILLATOR_Initialize *****************
  8293 ;; Defined at:
  8294 ;;		line 82 in file "mcc_generated_files/mcc.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		status,2
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    4
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_SYSTEM_Initialize
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           
  8323                           ;psect for function _OSCILLATOR_Initialize
  8324  1650                     _OSCILLATOR_Initialize:	
  8325                           
  8326                           ;mcc.c: 85: OSCCON = 0x00;
  8327                           
  8328                           ;incstack = 0
  8329                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  8330  1650  0021               	movlb	1	; select bank1
  8331  1651  0199               	clrf	25	;volatile
  8332                           
  8333                           ;mcc.c: 87: OSCTUNE = 0x00;
  8334  1652  0198               	clrf	24	;volatile
  8335                           
  8336                           ;mcc.c: 89: ACTCON = 0x00;
  8337  1653  0027               	movlb	7	; select bank7
  8338  1654  019B               	clrf	27	;volatile
  8339  1655  0008               	return
  8340  1656                     __end_of_OSCILLATOR_Initialize:	
  8341                           
  8342                           	psect	text34
  8343  167F                     __ptext34:	
  8344 ;; *************** function _EXT_INT_Initialize *****************
  8345 ;; Defined at:
  8346 ;;		line 90 in file "mcc_generated_files/ext_int.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0, pclath, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    5
  8367 ;; This function calls:
  8368 ;;		_INT_SetInterruptHandler
  8369 ;; This function is called by:
  8370 ;;		_SYSTEM_Initialize
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           
  8375                           ;psect for function _EXT_INT_Initialize
  8376  167F                     _EXT_INT_Initialize:	
  8377                           
  8378                           ;ext_int.c: 99: (INTCONbits.INTF = 0);
  8379                           
  8380                           ;incstack = 0
  8381                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8382  167F  108B               	bcf	11,1	;volatile
  8383                           
  8384                           ;ext_int.c: 100: (OPTION_REGbits.INTEDG = 1);
  8385  1680  0021               	movlb	1	; select bank1
  8386  1681  1715               	bsf	21,6	;volatile
  8387                           
  8388                           ;ext_int.c: 102: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  8389  1682  3002               	movlw	low _INT_DefaultInterruptHandler
  8390  1683  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler
  8391  1684  3000               	movlw	high _INT_DefaultInterruptHandler
  8392  1685  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  8393  1686  3196  264A         	fcall	_INT_SetInterruptHandler
  8394                           
  8395                           ;ext_int.c: 103: (INTCONbits.INTE = 1);
  8396  1688  160B               	bsf	11,4	;volatile
  8397  1689  0008               	return
  8398  168A                     __end_of_EXT_INT_Initialize:	
  8399                           
  8400                           	psect	text35
  8401  164A                     __ptext35:	
  8402 ;; *************** function _INT_SetInterruptHandler *****************
  8403 ;; Defined at:
  8404 ;;		line 70 in file "mcc_generated_files/ext_int.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  8407 ;;		 -> INT_DefaultInterruptHandler(1), 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;		None
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;Total ram usage:        2 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    4
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_EXT_INT_Initialize
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           
  8434                           ;psect for function _INT_SetInterruptHandler
  8435  164A                     _INT_SetInterruptHandler:	
  8436                           
  8437                           ;ext_int.c: 71: INT_InterruptHandler = InterruptHandler;
  8438                           
  8439                           ;incstack = 0
  8440                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  8441  164A  0872               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  8442  164B  0022               	movlb	2	; select bank2
  8443  164C  00EC               	movwf	(_INT_InterruptHandler+1)^(0+256)
  8444  164D  0871               	movf	INT_SetInterruptHandler@InterruptHandler,w
  8445  164E  00EB               	movwf	_INT_InterruptHandler^(0+256)
  8446  164F  0008               	return
  8447  1650                     __end_of_INT_SetInterruptHandler:	
  8448                           
  8449                           	psect	text36
  8450  1662                     __ptext36:	
  8451 ;; *************** function _ADC_Initialize *****************
  8452 ;; Defined at:
  8453 ;;		line 64 in file "mcc_generated_files/adc.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      void 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8471 ;;Total ram usage:        0 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    4
  8474 ;; This function calls:
  8475 ;;		Nothing
  8476 ;; This function is called by:
  8477 ;;		_main
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           
  8482                           ;psect for function _ADC_Initialize
  8483  1662                     _ADC_Initialize:	
  8484                           
  8485                           ;adc.c: 69: ADCON0 = 0x01;
  8486                           
  8487                           ;incstack = 0
  8488                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8489  1662  3001               	movlw	1
  8490  1663  0021               	movlb	1	; select bank1
  8491  1664  009D               	movwf	29	;volatile
  8492                           
  8493                           ;adc.c: 72: ADCON1 = 0xF0;
  8494  1665  30F0               	movlw	240
  8495  1666  009E               	movwf	30	;volatile
  8496                           
  8497                           ;adc.c: 75: ADCON2 = 0x00;
  8498  1667  019F               	clrf	31	;volatile
  8499                           
  8500                           ;adc.c: 78: ADRESL = 0x00;
  8501  1668  019B               	clrf	27	;volatile
  8502                           
  8503                           ;adc.c: 81: ADRESH = 0x00;
  8504  1669  019C               	clrf	28	;volatile
  8505  166A  0008               	return
  8506  166B                     __end_of_ADC_Initialize:	
  8507                           
  8508                           	psect	text37
  8509  16A9                     __ptext37:	
  8510 ;; *************** function _ADC_GetConversion *****************
  8511 ;; Defined at:
  8512 ;;		line 112 in file "mcc_generated_files/adc.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  channel         1    wreg     enum E2635
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  channel         1    4[COMMON] enum E2635
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  2    1[COMMON] unsigned int 
  8519 ;; Registers used:
  8520 ;;		wreg, status,2, status,0
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;Total ram usage:        4 bytes
  8531 ;; Hardware stack levels used:    1
  8532 ;; Hardware stack levels required when called:    4
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_main
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           
  8541                           ;psect for function _ADC_GetConversion
  8542  16A9                     _ADC_GetConversion:	
  8543                           
  8544                           ;incstack = 0
  8545                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8546                           ;ADC_GetConversion@channel stored from wreg
  8547  16A9  00F4               	movwf	ADC_GetConversion@channel
  8548                           
  8549                           ;adc.c: 115: ADCON0bits.CHS = channel;
  8550  16AA  0874               	movf	ADC_GetConversion@channel,w
  8551  16AB  00F3               	movwf	??_ADC_GetConversion
  8552  16AC  0DF3               	rlf	??_ADC_GetConversion,f
  8553  16AD  0DF3               	rlf	??_ADC_GetConversion,f
  8554  16AE  0021               	movlb	1	; select bank1
  8555  16AF  081D               	movf	29,w	;volatile
  8556  16B0  0673               	xorwf	??_ADC_GetConversion,w
  8557  16B1  3983               	andlw	-125
  8558  16B2  0673               	xorwf	??_ADC_GetConversion,w
  8559  16B3  009D               	movwf	29	;volatile
  8560                           
  8561                           ;adc.c: 118: ADCON0bits.ADON = 1;
  8562  16B4  141D               	bsf	29,0	;volatile
  8563                           
  8564                           ;adc.c: 123: ADCON0bits.GO_nDONE = 1;
  8565                           
  8566                           ;adc.c: 120: _delay((unsigned long)((5)*(31000/4000000.0)));
  8567  16B5  0021               	movlb	1	; select bank1
  8568  16B6  149D               	bsf	29,1	;volatile
  8569  16B7                     l32:	
  8570                           ;adc.c: 127: {
  8571                           
  8572                           ;adc.c: 126: while (ADCON0bits.GO_nDONE)
  8573                           
  8574  16B7  189D               	btfsc	29,1	;volatile
  8575  16B8  2EB7               	goto	l32
  8576                           
  8577                           ;adc.c: 128: }
  8578                           ;adc.c: 131: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8579  16B9  081C               	movf	28,w	;volatile
  8580  16BA  00F2               	movwf	?_ADC_GetConversion+1
  8581  16BB  081B               	movf	27,w	;volatile
  8582  16BC  00F1               	movwf	?_ADC_GetConversion
  8583  16BD  0008               	return
  8584  16BE                     __end_of_ADC_GetConversion:	
  8585                           
  8586                           	psect	intentry
  8587  0004                     __pintentry:	
  8588 ;; *************** function _INTERRUPT_InterruptManager *****************
  8589 ;; Defined at:
  8590 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;		None
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;		None
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0, pclath, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;Total ram usage:        1 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    3
  8611 ;; This function calls:
  8612 ;;		_INT_ISR
  8613 ;; This function is called by:
  8614 ;;		Interrupt level 1
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618  0004                     _INTERRUPT_InterruptManager:	
  8619                           
  8620                           ;incstack = 0
  8621  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8622                           
  8623                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8624  0005  3180               	pagesel	$
  8625  0006  0020               	movlb	0	; select bank0
  8626  0007  087F               	movf	127,w
  8627  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  8628                           
  8629                           ;interrupt_manager.c: 54: if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  8630  0009  1A0B               	btfsc	11,4	;volatile
  8631  000A  1C8B               	btfss	11,1	;volatile
  8632  000B  280E               	goto	i1l46
  8633                           
  8634                           ;interrupt_manager.c: 55: {
  8635                           ;interrupt_manager.c: 56: INT_ISR();
  8636  000C  3196  263E         	fcall	_INT_ISR
  8637  000E                     i1l46:	
  8638                           ;interrupt_manager.c: 58: else
  8639                           ;interrupt_manager.c: 59: {
  8640                           
  8641                           ;interrupt_manager.c: 57: }
  8642                           
  8643  000E  0870               	movf	??_INTERRUPT_InterruptManager,w
  8644  000F  0020               	movlb	0	; select bank0
  8645  0010  00FF               	movwf	127
  8646  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8647  0012  0009               	retfie
  8648  0013                     __end_of_INTERRUPT_InterruptManager:	
  8649                           
  8650                           	psect	text39
  8651  163E                     __ptext39:	
  8652 ;; *************** function _INT_ISR *****************
  8653 ;; Defined at:
  8654 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;		None
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;		None
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, status,2, status,0, pclath, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8672 ;;Total ram usage:        0 bytes
  8673 ;; Hardware stack levels used:    1
  8674 ;; Hardware stack levels required when called:    2
  8675 ;; This function calls:
  8676 ;;		_INT_CallBack
  8677 ;; This function is called by:
  8678 ;;		_INTERRUPT_InterruptManager
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           
  8683                           ;psect for function _INT_ISR
  8684  163E                     _INT_ISR:	
  8685                           
  8686                           ;ext_int.c: 49: (INTCONbits.INTF = 0);
  8687                           
  8688                           ;incstack = 0
  8689                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  8690  163E  108B               	bcf	11,1	;volatile
  8691                           
  8692                           ;ext_int.c: 52: INT_CallBack();
  8693  163F  3196  2674         	fcall	_INT_CallBack
  8694  1641  0008               	return
  8695  1642                     __end_of_INT_ISR:	
  8696                           
  8697                           	psect	text40
  8698  1674                     __ptext40:	
  8699 ;; *************** function _INT_CallBack *****************
  8700 ;; Defined at:
  8701 ;;		line 58 in file "mcc_generated_files/ext_int.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;		None
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;		None
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      void 
  8708 ;; Registers used:
  8709 ;;		wreg, status,2, status,0, pclath, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;Total ram usage:        0 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    1
  8722 ;; This function calls:
  8723 ;;		Absolute function
  8724 ;;		_INT_DefaultInterruptHandler
  8725 ;; This function is called by:
  8726 ;;		_INT_ISR
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           
  8731                           ;psect for function _INT_CallBack
  8732  1674                     _INT_CallBack:	
  8733                           
  8734                           ;ext_int.c: 61: if(INT_InterruptHandler)
  8735                           
  8736                           ;incstack = 0
  8737                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8738  1674  0022               	movlb	2	; select bank2
  8739  1675  086B               	movf	_INT_InterruptHandler^(0+256),w
  8740  1676  046C               	iorwf	(_INT_InterruptHandler+1)^(0+256),w
  8741  1677  1903               	btfsc	3,2
  8742  1678  0008               	return
  8743                           
  8744                           ;ext_int.c: 62: {
  8745                           ;ext_int.c: 63: INT_InterruptHandler();
  8746  1679  086C               	movf	(_INT_InterruptHandler+1)^(0+256),w
  8747  167A  008A               	movwf	10
  8748  167B  086B               	movf	_INT_InterruptHandler^(0+256),w
  8749  167C  000A               	callw
  8750  167D  3196               	pagesel	$
  8751  167E  0008               	return
  8752  167F                     __end_of_INT_CallBack:	
  8753                           
  8754                           	psect	text41
  8755  0002                     __ptext41:	
  8756 ;; *************** function _INT_DefaultInterruptHandler *****************
  8757 ;; Defined at:
  8758 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		None
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;Total ram usage:        0 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_EXT_INT_Initialize
  8782 ;;		_INT_CallBack
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           
  8787                           ;psect for function _INT_DefaultInterruptHandler
  8788  0002                     _INT_DefaultInterruptHandler:	
  8789                           
  8790                           ;incstack = 0
  8791                           ; Regs used in _INT_DefaultInterruptHandler: []
  8792  0002  0008               	return
  8793  0003                     __end_of_INT_DefaultInterruptHandler:	
  8794  007E                     btemp	set	126	;btemp
  8795  007E                     int$flags	set	126
  8796  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    120
    Data        32
    BSS         135
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     80      80
    BANK1            80     60      79
    BANK2            80      0      77
    BANK3            80      0      73
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_6(CODE[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 6
		 -> str8(BANK3[6]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), str8(BANK3[6]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), str8(BANK3[6]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[5]), STR_5(CODE[7]), 

    S396__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S396__prbuf$ptr	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), str8(BANK3[6]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), str8(BANK3[6]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(BANK0[3]), printf@pb(BANK0[3]), 

    main@c	PTR unsigned char  size(1) Largest target is 6
		 -> str8(BANK3[6]), 

    message	PTR unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), 

    packet	PTR unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), 

    Fixeddata	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    preamble	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _main->___lmul
    _main->___lwtoft
    _sendChar->_dit_dah
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    ___altoft->___lmul
    ___ftmul->___awtoft
    ___ftsub->___awtoft
    ___ftadd->___awtoft
    ___ftadd->___lmul
    ___ftneg->___lmul
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    _EXT_INT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->__doprnt
    _printf->__doprnt
    __doprnt->___lwmod
    _pow->_log
    _log->_eval_poly
    _exp->_log
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___ftdiv
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___ftneg
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftneg->___altoft
    ___ftdiv->___awtoft

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  104162
                                             38 BANK1     22    22      0
                  _ADC_GetConversion
                     _ADC_Initialize
                  _SYSTEM_Initialize
                           ___altoft
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                             ___lmul
                           ___lwtoft
                                _pow
                             _printf
                           _sendChar
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             12     6      6    1973
                                             15 BANK0     12     6      6
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _sendChar                                             4     4      0    4572
                                              6 COMMON     4     4      0
                            _dit_dah
 ---------------------------------------------------------------------------------
 (2) _dit_dah                                              5     3      2    4260
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _printf                                               7     5      2    1887
                                             15 BANK0      7     5      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             21    18      3    1714
                                              2 BANK0     13    10      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     129
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   74232
                                             20 BANK1     18    12      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   24304
                                             79 BANK0      1     1      0
                                              3 BANK1      5     2      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 10     7      3   39715
                                             10 BANK1     10     7      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                7     2      5    1664
                                              3 BANK1      7     2      5
                             ___ftge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    9927
                                             72 BANK0      4     1      3
                                              0 BANK1      5     5      0
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     480
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     572
                                             18 BANK0     14    10      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1288
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2453
                                             32 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7   10264
                                             72 BANK0      7     0      7
                                              0 BANK1      3     3      0
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     348
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    4535
                                             43 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5014
                                             72 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    4819
                                             59 BANK0     13     7      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___lmul (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     365
                                             40 BANK0      3     0      3
                           ___altoft (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3107
                                              2 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2534
                                              9 COMMON     4     1      3
                                              0 BANK0      2     2      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2320
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2337
                                              9 COMMON     4     1      3
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2187
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     220
                                              1 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      86
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                            _INT_ISR
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___altoft
     ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___lmul (ARG)
   ___awtoft
     ___ftpack
   ___ftadd
     ___altoft (ARG)
       ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lmul (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg (ARG)
       ___altoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
     ___ftpack (ARG)
     ___lmul (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___altoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftneg
     ___altoft (ARG)
       ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
   ___fttol
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___lmul
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
   _pow
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
       ___altoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___lltoft
       ___ftpack
     _exp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
         ___altoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___lmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___lmul (ARG)
           ___wmul (ARG)
           _frexp (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _eval_poly
         ___ftadd
           ___altoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___lmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___lmul (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___lmul (ARG)
         ___ftadd
           ___altoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___lmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___lmul (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _frexp
       _ldexp
         ___ftge
         _eval_poly (ARG)
           ___ftadd
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                   ___lmul (ARG)
                 ___lmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___lmul (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___altoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___lmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___lmul (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                   ___lmul (ARG)
                 ___lmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___lmul (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___altoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___lmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
         ___ftpack (ARG)
         ___lmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___altoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___lmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___lmul (ARG)
               ___lmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___lmul (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _sendChar
     _dit_dah
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4D       9       96.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      49      11       91.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     142      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     142      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Feb 12 17:31:17 2018

                           ___altoft@exp 0046                                        _m 1800  
                            _thousandths 0147                              __CFG_CP$OFF 0000  
                          ___altoft@sign 0047                                       l32 16B7  
                                     _m2 1893                      ___wmul@multiplicand 0073  
                           ___ftadd@exp1 0067                             ___ftadd@exp2 0066  
                            __CFG_LVP$ON 0000                             ___ftadd@sign 0065  
                                    l313 07BD                                      l242 0056  
                                    l316 07D2                                      l271 0AB5  
                                    l281 0B0B                                      l274 0B24  
                                    l523 091A                                      l355 07ED  
                                    l275 0AD5                                      l524 0922  
                                    l516 0907                                      l284 0B28  
                                    l278 0AF0                                      l607 0A93  
                                    l547 0EA0                                      l719 0F14  
                                    _exp 044A                                      _log 0D35  
                                    _pow 0EF7                             __CFG_BORV$LO 0000  
                                    wreg 0009                             __CFG_IESO$ON 0000  
                           ___ftdiv@cntr 002C                             ___ftdiv@sign 0031  
                                   l2011 0CE9                                     l2023 0D05  
                                   l2015 0CF1                                     l2027 0D0D  
                                   l2043 0A3F                                     l2211 178F  
                                   l2109 080B                                     l2125 0C05  
                                   l2061 0A6F                                     l2205 1777  
                                   l2119 0BEF                                     l2071 0A96  
                                   l2063 0A7D                                     l2207 1783  
                                   l2215 1798                                     l2233 0B71  
                                   l2147 0C5F                                     l2139 0C46  
                                   l2075 0AA4                                     l2243 0BCB  
                                   l2411 06B0                                     l2403 0668  
                                   l2253 09A0                                     l2069 0A8A  
                                   l2229 0B69                                     l2181 17D4  
                                   l2167 1713                                     l2087 086F  
                                   l2263 09BA                                     l2183 17E0  
                                   l2415 066D                                     l2343 0AEE  
                                   l2273 09DC                                     l2193 17FB  
                                   l2417 05AA                                     l2337 0ACE  
                                   l2427 174C                                     l2419 06C4  
                                   l2363 05D5                                     l2347 0B09  
                                   l2611 070A                                     l2603 06DB  
                                   l2429 175C                                     l2285 0A06  
                                   l2461 0457                                     l2189 17F2  
                                   l2381 0618                                     l2373 0601  
                                   l1903 0E29                                     l2367 05E9  
                                   l2631 0750                                     l2623 0721  
                                   l2607 06EF                                     l1913 0E3F  
                                   l2289 0A0E                                     l2473 0494  
                                   l2801 0D67                                     l2393 063D  
                                   l1843 08E4                                     l1931 0E6C  
                                   l1907 0E30                                     l2467 0475  
                                   l2387 061E                                     l2635 0772  
                                   l2627 0735                                     l2619 0714  
                                   l2643 07BB                                     l2653 17A5  
                                   l1853 090C                                     l1845 08EE  
                                   l1933 0E76                                     l1925 0E59  
                                   l2821 0F1C                                     l1855 0914  
                                   l1847 08F3                                     l1839 08DD  
                                   l1943 0E92                                     l1935 0E7B  
                                   l2479 04CA                                     l2399 0655  
                                   l2647 07D0                                     l2639 078D  
                                   l2657 17AF                                     l1953 0EC4  
                                   l1945 0E9C                                     l1937 0E7F  
                                   l2497 0588                                     l1963 0EDF  
                                   l1891 08AD                                     l1971 0838  
                                   l2835 0F7D                                     l2827 0F28  
                                   l2923 0422                                     l1949 0EB2  
                                   l1869 07E7                                     l1893 08BD  
                                   l2925 0437                                     l2861 0057  
                                   l1975 084E                                     l2839 0F9C  
                                   l2599 06CE                                     l1993 0C98  
                                   l2929 043D                                     l2865 0062  
                                   l2795 0D54                                     l1999 0CAE  
                                   ?_exp 00AA                                     ?_log 00A3  
                                   ?_pow 00B4                                     STR_1 187E  
                                   STR_2 1873                                     STR_3 1864  
                                   STR_4 18A9                                     STR_5 189D  
                                   STR_6 18A4                                     u2025 0E6D  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 1642                                     u2055 0E80  
                                   u2215 0CF2                                     _LATC 010E  
                                   u2225 0CF8                                     u2085 0E93  
                                   u2325 0A70                                     u2255 0D0E  
                                   u2425 0C17                                     u2265 0D14  
                                   u2185 0CBA                                     u3225 07C8  
                                   u2435 0C27                                     u2195 0CCA  
                                   u2355 0A8B                                     u2515 17D7  
                                   u3235 07DD                                     u2445 0C47  
                                   u2605 1789                                     u3255 17B0  
                                   u1815 0929                                     u1735 08E9  
                                   u2455 0C56                                     u2295 0A46  
                                   u2535 17E1                                     u2615 1790  
                                   u3265 17B7                                     u2465 0C60  
                                   u2705 09E5                                     u2545 17EB  
                                   u1755 0902                                     u2555 17F3  
                                   u1845 07EE                                     u1775 090F  
                                   u1855 07F3                                     u2585 177A  
                                   u2745 0AC0                                     u2915 1751  
                                   u3475 0F6E                                     u1885 08B2  
                                   u2845 0633                                     u2765 0AE0  
                                   u2775 0AFB                                     u2785 0B16  
                                   u1995 0E5A                                     u2795 0B33  
                                   u2980 04A8                                     i1l46 000E  
                                   u2990 04A9                                     _WPUA 020C  
                                   _WPUB 020D                             __CFG_WRT$OFF 0000  
                          __CFG_FCMEN$ON 0000                                     _main 0048  
                           ___ftpack@arg 0071                             ___ftpack@exp 0074  
                                   _temp 00E2                                     _tens 00E9  
                                   _str8 01E3                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                                   exp@x 00AA                                     log@x 00A3  
                            main@waitind 00D9      __end_of_INT_DefaultInterruptHandler 0003  
            _INT_DefaultInterruptHandler 0002                                     pow@x 00B4  
                                   pow@y 00B7                                     start 0013  
        __end_of_INT_SetInterruptHandler 1650                      __CFG_PLLEN$DISABLED 0000  
                          __CFG_MCLRE$ON 0000                             ___ftmul@cntr 0059  
                           ___ftmul@sign 005A                             ___fttol@exp1 003F  
                                  ??_exp 00AD                                    ??_log 006F  
                           ___fttol@lval 003B                                    ??_pow 00BA  
         __size_of_OSCILLATOR_Initialize 0006            __end_of_OSCILLATOR_Initialize 1656  
                                  ?_main 0070                          __end_of___ftadd 0EF7  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0C81  
                        __end_of___ftneg 1674                          __end_of___ftmul 0D35  
                        __end_of___ftsub 1729                          __end_of___fttol 0AAD  
                                  _LATC3 0873                                    _LATC4 0874  
                        __end_of___lwdiv 1800                          __end_of___lwmod 179D  
                        __end_of__doprnt 06C7                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                    ___lmul@multiplicand 0075                             ___lltoft@exp 0021  
                        __end_of_dit_dah 0B3E                            ___awtoft@sign 007C  
                                  _delay 00EB                          __end_of_dpowers 1893  
                         _WDT_Initialize 1642                                    _floor 0B3E  
                                  _ldexp 09AD                                    _frexp 085D  
                                  _errno 0141                                    _sleep 00E5  
                          ___ftpack@sign 0075                                    _putch 0003  
                                  main@c 00DB                                    main@i 00C7  
                                  _units 00E7                           __CFG_BOREN$OFF 0000  
                                  pclath 000A                                    pow@yi 00C2  
                                  status 0003                                    wtemp0 007E  
                        __end_of_sprintf 1747                              exp@exponent 00B1  
                            ldexp@newexp 00A6                          __initialization 0015  
                            log@exponent 00A6                             __end_of_main 044A  
                         __CFG_LPBOR$OFF 0000              ?_INTERRUPT_InterruptManager 0070  
                                 ??_main 00C6                            ___fttol@sign1 003A  
                    __CFG_USBLSCLK$24MHz 0000                   __end_of_WDT_Initialize 1646  
                              ??_INT_ISR 0070                                   _ADCON0 009D  
                                 _ADCON1 009E                                   _ADCON2 009F  
                                 ?_floor 0068                                   ?_ldexp 00A3  
                                 ?_frexp 0071                         __end_of___altoft 08D5  
                                 _ACTCON 039B                                   _ADRESH 009C  
                                 _ADRESL 009B                                   _APFCON 011D  
                                 _ADCres 00ED                         __end_of___awtoft 0822  
                                 _ANSELA 018C                                   ?_putch 0071  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 0939                         __end_of___lltoft 1770  
                       __end_of___lwtoft 16A9                                   _OSCCON 0099  
                                 _WDTCON 0097                           __CFG_PWRTE$OFF 0000  
                                 ___ftge 0822                                   ___lmul 179D  
                                 ___wmul 07E5                                ??___ftadd 0061  
                         __CFG_STVREN$ON 0000                                ??___ftdiv 0028  
                              ??___ftneg 007D                                ??___ftmul 0051  
                              ??___ftsub 007D                                ??___fttol 0036  
                              ??___lwdiv 0075                                ??___lwmod 0020  
                                 _packet 0165                                ??__doprnt 0025  
                                 _tenths 014B                             __doprnt@flag 0029  
                                 _printf 16BE                                ??_dit_dah 0073  
                       __end_of_sendChar 07E5                             __doprnt@prec 002A  
                          ?_INT_CallBack 0070                                   floor@i 00A0  
                                 floor@x 0068                    ___ftmul@f3_as_product 0056  
                        ?_WDT_Initialize 0070                 ADC_GetConversion@channel 0074  
                                 putch@c 0071         __size_of_INT_SetInterruptHandler 0006  
INT_SetInterruptHandler@InterruptHandler 0071                                ??_sprintf 0035  
                       __end_ofexp@coeff 1849                        _SYSTEM_Initialize 168A  
                       __end_oflog@coeff 1864                  __end_of__initialization 0044  
                             ___altoft@c 0040                               ___ftadd@f1 005B  
                             ___ftadd@f2 005E                               ___ftge@ff1 0071  
                             ___ftge@ff2 0074                            _IN_CAP_TO_GND 0138  
                     ?_SYSTEM_Initialize 0070                             eval_poly@res 00A0  
                             ___ftdiv@f1 0025                               ___ftdiv@f2 0022  
                             ___ftdiv@f3 002D                               ___ftneg@f1 0048  
                             ___awtoft@c 0079                               ___ftmul@f1 004B  
                             ___ftmul@f2 004E                               ___ftsub@f1 006B  
                             ___ftsub@f2 0068                               ___fttol@f1 0032  
                         __pcstackCOMMON 0070                             __pidataBANK1 1646  
                           __pidataBANK2 16EF                      ??_SYSTEM_Initialize 0073  
                             ___lltoft@c 0079                            __end_of_floor 0BD8  
                          __end_of_ldexp 0A26                            __end_of_frexp 0898  
                          __end_of_putch 0004                               __end_of_m2 189D  
                         ??_INT_CallBack 0070                               ___lwtoft@c 0079  
            __size_of_EXT_INT_Initialize 000B                           _OPTION_REGbits 0095  
                             __doprnt@ap 0024                               __doprnt@pb 002E  
                                ??_floor 006B                                  ??_ldexp 00A8  
                                ??_frexp 0075                __end_of_SYSTEM_Initialize 1696  
                                ??_putch 0072                               __pbssBANK1 00DC  
                             __pbssBANK2 0120                               __pbssBANK3 01A0  
                     __size_of_eval_poly 0074                               __pmaintext 0048  
                                ?___ftge 0071                                  ?___lmul 0071  
                        __CFG_PLLMULT$4x 0000                                  ?___wmul 0071  
                             __pintentry 0004                                ?___altoft 0040  
                         ___lmul@product 0079                                ?___awtoft 0079  
                              ?___ftpack 0071                                  ?_printf 002F  
                              ?___lltoft 0079                  __size_of_ADC_Initialize 0009  
                              ?___lwtoft 0079                                  _NODE_ID 0161  
                                _INT_ISR 163E                                  _OSCTUNE 0098  
                              _ADC0mVolt 0129                                _ADC1mVolt 0126  
                                _FactorA 015B                                  _FactorB 0158  
                                _FactorC 0155                                  _FactorD 0152  
                              ?_sendChar 0070                          __size_of___ftge 003B  
                        __size_of___lmul 002F                                  ___ftadd 0E01  
                                ___ftdiv 0BD8                                  ___ftneg 166B  
                        __size_of___wmul 001B                                  ___ftmul 0C81  
                                ___ftsub 170B                                  ___fttol 0A26  
                                ___lwdiv 17CC                                  ___lwmod 1770  
                             ??___altoft 0044                                  __doprnt 05A8  
                                _exp$891 00AE                               ??___awtoft 0020  
                             ??___ftpack 0076                        __end_of_eval_poly 09AD  
                             ??___lltoft 0020                                  _dit_dah 0AAD  
                                __ptext1 1729                                  __ptext2 06C7  
                                __ptext3 0AAD                                  __ptext4 16BE  
                                __ptext5 05A8                                  __ptext6 0003  
                                __ptext7 1770                                  __ptext8 17CC  
                                __ptext9 0EF7                          __size_of_printf 0016  
                             ??___lwtoft 007C                                  _pow$890 00BE  
                                _pow$889 00BB                                  _packet1 01BE  
                                _packet2 01A0                                  _dpowers 1889  
                  _OSCILLATOR_Initialize 1650                             __size_of_exp 015E  
                           __size_of_log 00CC                             __size_of_pow 0109  
                                _message 0163                 ??_PIN_MANAGER_Initialize 0071  
                _INT_SetInterruptHandler 164A                                  _sensor0 0123  
                                _sensor1 0120                               _hundredths 0149  
             __size_of_SYSTEM_Initialize 000C                                  _sprintf 1729  
                                clrloop0 1657                               _nocodedbit 01D6  
                                _voltref 014F                     end_of_initialization 0044  
                                exp@sign 00B3                                  init_ram 165C  
                                initloop 165D                     __end_of_INT_CallBack 167F  
                             ??_sendChar 0076                         __CFG_CLKOUTEN$ON 0000  
                                pow@sign 00C1                                  printf@f 002F  
                       ??_WDT_Initialize 0071                         __CFG_FOSC$INTOSC 0000  
                            ___ftdiv@exp 0030                              ___ftmul@exp 0055  
                         __end_of___ftge 085D                           __end_of___lmul 17CC  
                         __end_of___wmul 0800                           _ADC_Initialize 1662  
                 ?_OSCILLATOR_Initialize 0070                ??_INT_SetInterruptHandler 0073  
                              _Fixeddata 0167                               floor@expon 00A3  
                         __end_of_printf 16D4                      start_initialization 0015  
                             eval_poly@d 006B                               eval_poly@n 006D  
                             eval_poly@x 0068                               ldexp@value 00A3  
        __size_of_PIN_MANAGER_Initialize 001B                              __end_of_exp 05A8  
                            __end_of_log 0E01                              __end_of_pow 1000  
                             frexp@value 0071             ?_INT_DefaultInterruptHandler 0070  
                               ??___ftge 0077                                 ??___lmul 0079  
                               ??___wmul 0075                   __end_of_ADC_Initialize 166B  
                            __doprnt@val 002B                              _capacitance 0135  
                            __pdataBANK1 00EB                              __pdataBANK2 014F  
             __end_of_EXT_INT_Initialize 168A                                 ??_printf 0031  
                      __size_of___altoft 003D                        __size_of___awtoft 0021  
                      __size_of___ftpack 0064                        __size_of___lltoft 0029  
                              ___latbits 0002                        __size_of___lwtoft 0013  
                               ?_INT_ISR 0070                            __pcstackBANK0 0020  
                          __pcstackBANK1 00A0                    __size_of_INT_CallBack 000B  
                              __end_of_m 182B                                __doprnt@c 002D  
                              __doprnt@f 0022                                __pnvBANK2 016B  
                    _IN_STRAY_CAP_TO_GND 015E                         ___lwdiv@dividend 0073  
                 _PIN_MANAGER_Initialize 16D4            ??_INT_DefaultInterruptHandler 0070  
                      __size_of_sendChar 011E                                 ?___ftadd 005B  
                               ?___ftdiv 0022                                 ?___ftneg 0048  
                               ?___ftmul 004B                                 ?___ftsub 0068  
                               ?___fttol 0032                                 ?___lwdiv 0071  
                               ?___lwmod 0079                          ?_ADC_Initialize 0070  
                               ?__doprnt 0022             ??_INTERRUPT_InterruptManager 0070  
                               ?_dit_dah 0071                             _INT_CallBack 1674  
                              _eval_poly 0939                         ___lwdiv@quotient 0076  
                               ?_sprintf 002F                           __size_of_floor 009A  
                         __size_of_ldexp 0079                           __size_of_frexp 003B  
                         __size_of_putch 0001                           ___wmul@product 0075  
                              _remainder 013E                                clear_ram0 1656  
    __size_of_INTERRUPT_InterruptManager 000F                                 _SENSORID 0143  
                             _ADC0mVolt1 00DF                               _ADC0mVolt2 00DC  
                             _ADCON0bits 009D                        ___wmul@multiplier 0071  
                              main@count 00C9     __size_of_INT_DefaultInterruptHandler 0001  
                             ?_eval_poly 0068                         __size_of_INT_ISR 0004  
                    _IN_EXTRA_CAP_TO_GND 013B                        ___lmul@multiplier 0071  
                              frexp@eptr 0074                           _tenthousandths 0145  
                               _TempDIFF 012C                                 _TemporC1 0132  
                               _TemporC2 012F                        _ADC_GetConversion 16A9  
                ??_OSCILLATOR_Initialize 0071                       ?_ADC_GetConversion 0071  
                       __size_of___ftadd 00F6                         __size_of___ftdiv 00A9  
                       __size_of___ftneg 0009                                 ___altoft 0898  
                       __size_of___ftmul 00B4                         __size_of___ftsub 001E  
                       __size_of___fttol 0087                         __size_of___lwdiv 0034  
                       __size_of___lwmod 002D                                 ___awtoft 0801  
                               ___ftpack 08D5                         __size_of__doprnt 011F  
                               ___lltoft 1747                                 ___lwtoft 1696  
                       __size_of_dit_dah 0091                      ??_ADC_GetConversion 0073  
                              sendChar@a 0079                                sendChar@i 0077  
                               _main$884 00CD                                 _main$885 00D0  
                               _main$886 00D3                                 _main$887 00D6  
                               _main$888 00CA                          ___lwdiv@divisor 0071  
                        ___lwdiv@counter 0078                                 __ptext10 0D35  
                               __ptext11 044A                                 __ptext20 0C81  
                               __ptext12 09AD                                 __ptext21 170B  
                               __ptext13 0B3E                                 __ptext30 168A  
                               __ptext22 0E01                                 __ptext14 085D  
                               __ptext31 1642                                 __ptext23 166B  
                               __ptext15 0A26                                 __ptext40 1674  
                               __ptext32 16D4                                 __ptext24 0BD8  
                               __ptext16 0822                                 __ptext41 0002  
                               __ptext33 1650                                 __ptext25 0801  
                               __ptext17 0898                                 __ptext34 167F  
                               __ptext26 1747                                 __ptext18 0939  
                               __ptext35 164A                                 __ptext27 1696  
                               __ptext19 07E5                                 __ptext36 1662  
                               __ptext28 08D5                                 __ptext37 16A9  
                               __ptext29 179D                                 __ptext39 163E  
                       __size_of_sprintf 001E                            __size_of_main 0402  
                               _hundreds 014D                                 _sendChar 06C7  
              __end_of_ADC_GetConversion 16BE                                 _preamble 0169  
                               dit_dah@i 0074                                 int$flags 007E  
     __end_of_INTERRUPT_InterruptManager 0013               _INTERRUPT_InterruptManager 0004  
                               exp@coeff 182B                                 log@coeff 1849  
                             _INTCONbits 000B                              ??_eval_poly 007D  
                   _INT_InterruptHandler 016B                           __pstringtext10 18A9  
                         __pstringtext11 0000                       _EXT_INT_Initialize 167F  
                __size_of_WDT_Initialize 0004                                 intlevel1 0000  
                              sprintf@ap 0037                                sprintf@pb 0038  
                              sprintf@wh 0036                         ___lwmod@dividend 007B  
                ?_PIN_MANAGER_Initialize 0070                             dit_dah@index 0071  
                    ?_EXT_INT_Initialize 0070                         ??_ADC_Initialize 0071  
                               printf@ap 0032                                 printf@pb 0033  
                   __CFG_CPUDIV$NOCLKDIV 0000                 ?_INT_SetInterruptHandler 0071  
                          __pstringtext1 1800                            __pstringtext2 1889  
                          __pstringtext3 1893                            __pstringtext4 182B  
                          __pstringtext5 1849                            __pstringtext6 1864  
                          __pstringtext7 187E                            __pstringtext8 189D  
                          __pstringtext9 18A4                     ??_EXT_INT_Initialize 0073  
                               sprintf@f 002F                          ___lwmod@divisor 0079  
                        ___lwmod@counter 0021           __end_of_PIN_MANAGER_Initialize 16EF  
             __size_of_ADC_GetConversion 0015  
