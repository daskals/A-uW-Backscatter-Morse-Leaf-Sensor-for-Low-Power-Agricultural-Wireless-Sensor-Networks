

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Feb 13 14:06:25 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 1.44
    48                           ; Generated 14/09/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16LF1459 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011D                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  018E                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  020C                     	;# 
   157  020D                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  0391                     	;# 
   174  0392                     	;# 
   175  0393                     	;# 
   176  0394                     	;# 
   177  0395                     	;# 
   178  0396                     	;# 
   179  039A                     	;# 
   180  039B                     	;# 
   181  0611                     	;# 
   182  0612                     	;# 
   183  0613                     	;# 
   184  0613                     	;# 
   185  0614                     	;# 
   186  0615                     	;# 
   187  0616                     	;# 
   188  0616                     	;# 
   189  0691                     	;# 
   190  0692                     	;# 
   191  0693                     	;# 
   192  0694                     	;# 
   193  0695                     	;# 
   194  0E8E                     	;# 
   195  0E8F                     	;# 
   196  0E90                     	;# 
   197  0E91                     	;# 
   198  0E92                     	;# 
   199  0E93                     	;# 
   200  0E94                     	;# 
   201  0E94                     	;# 
   202  0E95                     	;# 
   203  0E96                     	;# 
   204  0E97                     	;# 
   205  0E98                     	;# 
   206  0E99                     	;# 
   207  0E9A                     	;# 
   208  0E9B                     	;# 
   209  0E9C                     	;# 
   210  0E9D                     	;# 
   211  0E9E                     	;# 
   212  0E9F                     	;# 
   213  0FE4                     	;# 
   214  0FE5                     	;# 
   215  0FE6                     	;# 
   216  0FE7                     	;# 
   217  0FE8                     	;# 
   218  0FE9                     	;# 
   219  0FEA                     	;# 
   220  0FEB                     	;# 
   221  0FED                     	;# 
   222  0FEE                     	;# 
   223  0FEF                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  0111                     	;# 
   271  0112                     	;# 
   272  0113                     	;# 
   273  0114                     	;# 
   274  0115                     	;# 
   275  0116                     	;# 
   276  0117                     	;# 
   277  0118                     	;# 
   278  0119                     	;# 
   279  011D                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  018E                     	;# 
   283  0191                     	;# 
   284  0191                     	;# 
   285  0192                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0194                     	;# 
   289  0195                     	;# 
   290  0196                     	;# 
   291  0199                     	;# 
   292  019A                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  019D                     	;# 
   297  019E                     	;# 
   298  019F                     	;# 
   299  020C                     	;# 
   300  020D                     	;# 
   301  0211                     	;# 
   302  0211                     	;# 
   303  0212                     	;# 
   304  0212                     	;# 
   305  0213                     	;# 
   306  0213                     	;# 
   307  0214                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0216                     	;# 
   314  0217                     	;# 
   315  0217                     	;# 
   316  0391                     	;# 
   317  0392                     	;# 
   318  0393                     	;# 
   319  0394                     	;# 
   320  0395                     	;# 
   321  0396                     	;# 
   322  039A                     	;# 
   323  039B                     	;# 
   324  0611                     	;# 
   325  0612                     	;# 
   326  0613                     	;# 
   327  0613                     	;# 
   328  0614                     	;# 
   329  0615                     	;# 
   330  0616                     	;# 
   331  0616                     	;# 
   332  0691                     	;# 
   333  0692                     	;# 
   334  0693                     	;# 
   335  0694                     	;# 
   336  0695                     	;# 
   337  0E8E                     	;# 
   338  0E8F                     	;# 
   339  0E90                     	;# 
   340  0E91                     	;# 
   341  0E92                     	;# 
   342  0E93                     	;# 
   343  0E94                     	;# 
   344  0E94                     	;# 
   345  0E95                     	;# 
   346  0E96                     	;# 
   347  0E97                     	;# 
   348  0E98                     	;# 
   349  0E99                     	;# 
   350  0E9A                     	;# 
   351  0E9B                     	;# 
   352  0E9C                     	;# 
   353  0E9D                     	;# 
   354  0E9E                     	;# 
   355  0E9F                     	;# 
   356  0FE4                     	;# 
   357  0FE5                     	;# 
   358  0FE6                     	;# 
   359  0FE7                     	;# 
   360  0FE8                     	;# 
   361  0FE9                     	;# 
   362  0FEA                     	;# 
   363  0FEB                     	;# 
   364  0FED                     	;# 
   365  0FEE                     	;# 
   366  0FEF                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0016                     	;# 
   387  0017                     	;# 
   388  0018                     	;# 
   389  0019                     	;# 
   390  001A                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  008C                     	;# 
   394  008D                     	;# 
   395  008E                     	;# 
   396  0091                     	;# 
   397  0092                     	;# 
   398  0095                     	;# 
   399  0096                     	;# 
   400  0097                     	;# 
   401  0098                     	;# 
   402  0099                     	;# 
   403  009A                     	;# 
   404  009B                     	;# 
   405  009B                     	;# 
   406  009C                     	;# 
   407  009D                     	;# 
   408  009E                     	;# 
   409  009F                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010E                     	;# 
   413  0111                     	;# 
   414  0112                     	;# 
   415  0113                     	;# 
   416  0114                     	;# 
   417  0115                     	;# 
   418  0116                     	;# 
   419  0117                     	;# 
   420  0118                     	;# 
   421  0119                     	;# 
   422  011D                     	;# 
   423  018C                     	;# 
   424  018D                     	;# 
   425  018E                     	;# 
   426  0191                     	;# 
   427  0191                     	;# 
   428  0192                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0194                     	;# 
   432  0195                     	;# 
   433  0196                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  020C                     	;# 
   443  020D                     	;# 
   444  0211                     	;# 
   445  0211                     	;# 
   446  0212                     	;# 
   447  0212                     	;# 
   448  0213                     	;# 
   449  0213                     	;# 
   450  0214                     	;# 
   451  0214                     	;# 
   452  0215                     	;# 
   453  0215                     	;# 
   454  0215                     	;# 
   455  0216                     	;# 
   456  0216                     	;# 
   457  0217                     	;# 
   458  0217                     	;# 
   459  0391                     	;# 
   460  0392                     	;# 
   461  0393                     	;# 
   462  0394                     	;# 
   463  0395                     	;# 
   464  0396                     	;# 
   465  039A                     	;# 
   466  039B                     	;# 
   467  0611                     	;# 
   468  0612                     	;# 
   469  0613                     	;# 
   470  0613                     	;# 
   471  0614                     	;# 
   472  0615                     	;# 
   473  0616                     	;# 
   474  0616                     	;# 
   475  0691                     	;# 
   476  0692                     	;# 
   477  0693                     	;# 
   478  0694                     	;# 
   479  0695                     	;# 
   480  0E8E                     	;# 
   481  0E8F                     	;# 
   482  0E90                     	;# 
   483  0E91                     	;# 
   484  0E92                     	;# 
   485  0E93                     	;# 
   486  0E94                     	;# 
   487  0E94                     	;# 
   488  0E95                     	;# 
   489  0E96                     	;# 
   490  0E97                     	;# 
   491  0E98                     	;# 
   492  0E99                     	;# 
   493  0E9A                     	;# 
   494  0E9B                     	;# 
   495  0E9C                     	;# 
   496  0E9D                     	;# 
   497  0E9E                     	;# 
   498  0E9F                     	;# 
   499  0FE4                     	;# 
   500  0FE5                     	;# 
   501  0FE6                     	;# 
   502  0FE7                     	;# 
   503  0FE8                     	;# 
   504  0FE9                     	;# 
   505  0FEA                     	;# 
   506  0FEB                     	;# 
   507  0FED                     	;# 
   508  0FEE                     	;# 
   509  0FEF                     	;# 
   510  0000                     	;# 
   511  0001                     	;# 
   512  0002                     	;# 
   513  0003                     	;# 
   514  0004                     	;# 
   515  0005                     	;# 
   516  0006                     	;# 
   517  0007                     	;# 
   518  0008                     	;# 
   519  0009                     	;# 
   520  000A                     	;# 
   521  000B                     	;# 
   522  000C                     	;# 
   523  000D                     	;# 
   524  000E                     	;# 
   525  0011                     	;# 
   526  0012                     	;# 
   527  0015                     	;# 
   528  0016                     	;# 
   529  0016                     	;# 
   530  0017                     	;# 
   531  0018                     	;# 
   532  0019                     	;# 
   533  001A                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009B                     	;# 
   549  009C                     	;# 
   550  009D                     	;# 
   551  009E                     	;# 
   552  009F                     	;# 
   553  010C                     	;# 
   554  010D                     	;# 
   555  010E                     	;# 
   556  0111                     	;# 
   557  0112                     	;# 
   558  0113                     	;# 
   559  0114                     	;# 
   560  0115                     	;# 
   561  0116                     	;# 
   562  0117                     	;# 
   563  0118                     	;# 
   564  0119                     	;# 
   565  011D                     	;# 
   566  018C                     	;# 
   567  018D                     	;# 
   568  018E                     	;# 
   569  0191                     	;# 
   570  0191                     	;# 
   571  0192                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0194                     	;# 
   575  0195                     	;# 
   576  0196                     	;# 
   577  0199                     	;# 
   578  019A                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019C                     	;# 
   582  019D                     	;# 
   583  019E                     	;# 
   584  019F                     	;# 
   585  020C                     	;# 
   586  020D                     	;# 
   587  0211                     	;# 
   588  0211                     	;# 
   589  0212                     	;# 
   590  0212                     	;# 
   591  0213                     	;# 
   592  0213                     	;# 
   593  0214                     	;# 
   594  0214                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0215                     	;# 
   598  0216                     	;# 
   599  0216                     	;# 
   600  0217                     	;# 
   601  0217                     	;# 
   602  0391                     	;# 
   603  0392                     	;# 
   604  0393                     	;# 
   605  0394                     	;# 
   606  0395                     	;# 
   607  0396                     	;# 
   608  039A                     	;# 
   609  039B                     	;# 
   610  0611                     	;# 
   611  0612                     	;# 
   612  0613                     	;# 
   613  0613                     	;# 
   614  0614                     	;# 
   615  0615                     	;# 
   616  0616                     	;# 
   617  0616                     	;# 
   618  0691                     	;# 
   619  0692                     	;# 
   620  0693                     	;# 
   621  0694                     	;# 
   622  0695                     	;# 
   623  0E8E                     	;# 
   624  0E8F                     	;# 
   625  0E90                     	;# 
   626  0E91                     	;# 
   627  0E92                     	;# 
   628  0E93                     	;# 
   629  0E94                     	;# 
   630  0E94                     	;# 
   631  0E95                     	;# 
   632  0E96                     	;# 
   633  0E97                     	;# 
   634  0E98                     	;# 
   635  0E99                     	;# 
   636  0E9A                     	;# 
   637  0E9B                     	;# 
   638  0E9C                     	;# 
   639  0E9D                     	;# 
   640  0E9E                     	;# 
   641  0E9F                     	;# 
   642  0FE4                     	;# 
   643  0FE5                     	;# 
   644  0FE6                     	;# 
   645  0FE7                     	;# 
   646  0FE8                     	;# 
   647  0FE9                     	;# 
   648  0FEA                     	;# 
   649  0FEB                     	;# 
   650  0FED                     	;# 
   651  0FEE                     	;# 
   652  0FEF                     	;# 
   653  0000                     	;# 
   654  0001                     	;# 
   655  0002                     	;# 
   656  0003                     	;# 
   657  0004                     	;# 
   658  0005                     	;# 
   659  0006                     	;# 
   660  0007                     	;# 
   661  0008                     	;# 
   662  0009                     	;# 
   663  000A                     	;# 
   664  000B                     	;# 
   665  000C                     	;# 
   666  000D                     	;# 
   667  000E                     	;# 
   668  0011                     	;# 
   669  0012                     	;# 
   670  0015                     	;# 
   671  0016                     	;# 
   672  0016                     	;# 
   673  0017                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  001A                     	;# 
   677  001B                     	;# 
   678  001C                     	;# 
   679  008C                     	;# 
   680  008D                     	;# 
   681  008E                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  010C                     	;# 
   697  010D                     	;# 
   698  010E                     	;# 
   699  0111                     	;# 
   700  0112                     	;# 
   701  0113                     	;# 
   702  0114                     	;# 
   703  0115                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  0118                     	;# 
   707  0119                     	;# 
   708  011D                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0194                     	;# 
   718  0195                     	;# 
   719  0196                     	;# 
   720  0199                     	;# 
   721  019A                     	;# 
   722  019B                     	;# 
   723  019B                     	;# 
   724  019C                     	;# 
   725  019D                     	;# 
   726  019E                     	;# 
   727  019F                     	;# 
   728  020C                     	;# 
   729  020D                     	;# 
   730  0211                     	;# 
   731  0211                     	;# 
   732  0212                     	;# 
   733  0212                     	;# 
   734  0213                     	;# 
   735  0213                     	;# 
   736  0214                     	;# 
   737  0214                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0216                     	;# 
   742  0216                     	;# 
   743  0217                     	;# 
   744  0217                     	;# 
   745  0391                     	;# 
   746  0392                     	;# 
   747  0393                     	;# 
   748  0394                     	;# 
   749  0395                     	;# 
   750  0396                     	;# 
   751  039A                     	;# 
   752  039B                     	;# 
   753  0611                     	;# 
   754  0612                     	;# 
   755  0613                     	;# 
   756  0613                     	;# 
   757  0614                     	;# 
   758  0615                     	;# 
   759  0616                     	;# 
   760  0616                     	;# 
   761  0691                     	;# 
   762  0692                     	;# 
   763  0693                     	;# 
   764  0694                     	;# 
   765  0695                     	;# 
   766  0E8E                     	;# 
   767  0E8F                     	;# 
   768  0E90                     	;# 
   769  0E91                     	;# 
   770  0E92                     	;# 
   771  0E93                     	;# 
   772  0E94                     	;# 
   773  0E94                     	;# 
   774  0E95                     	;# 
   775  0E96                     	;# 
   776  0E97                     	;# 
   777  0E98                     	;# 
   778  0E99                     	;# 
   779  0E9A                     	;# 
   780  0E9B                     	;# 
   781  0E9C                     	;# 
   782  0E9D                     	;# 
   783  0E9E                     	;# 
   784  0E9F                     	;# 
   785  0FE4                     	;# 
   786  0FE5                     	;# 
   787  0FE6                     	;# 
   788  0FE7                     	;# 
   789  0FE8                     	;# 
   790  0FE9                     	;# 
   791  0FEA                     	;# 
   792  0FEB                     	;# 
   793  0FED                     	;# 
   794  0FEE                     	;# 
   795  0FEF                     	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0008                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000D                     	;# 
   810  000E                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0015                     	;# 
   814  0016                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001B                     	;# 
   821  001C                     	;# 
   822  008C                     	;# 
   823  008D                     	;# 
   824  008E                     	;# 
   825  0091                     	;# 
   826  0092                     	;# 
   827  0095                     	;# 
   828  0096                     	;# 
   829  0097                     	;# 
   830  0098                     	;# 
   831  0099                     	;# 
   832  009A                     	;# 
   833  009B                     	;# 
   834  009B                     	;# 
   835  009C                     	;# 
   836  009D                     	;# 
   837  009E                     	;# 
   838  009F                     	;# 
   839  010C                     	;# 
   840  010D                     	;# 
   841  010E                     	;# 
   842  0111                     	;# 
   843  0112                     	;# 
   844  0113                     	;# 
   845  0114                     	;# 
   846  0115                     	;# 
   847  0116                     	;# 
   848  0117                     	;# 
   849  0118                     	;# 
   850  0119                     	;# 
   851  011D                     	;# 
   852  018C                     	;# 
   853  018D                     	;# 
   854  018E                     	;# 
   855  0191                     	;# 
   856  0191                     	;# 
   857  0192                     	;# 
   858  0193                     	;# 
   859  0193                     	;# 
   860  0194                     	;# 
   861  0195                     	;# 
   862  0196                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019C                     	;# 
   868  019D                     	;# 
   869  019E                     	;# 
   870  019F                     	;# 
   871  020C                     	;# 
   872  020D                     	;# 
   873  0211                     	;# 
   874  0211                     	;# 
   875  0212                     	;# 
   876  0212                     	;# 
   877  0213                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0214                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0216                     	;# 
   885  0216                     	;# 
   886  0217                     	;# 
   887  0217                     	;# 
   888  0391                     	;# 
   889  0392                     	;# 
   890  0393                     	;# 
   891  0394                     	;# 
   892  0395                     	;# 
   893  0396                     	;# 
   894  039A                     	;# 
   895  039B                     	;# 
   896  0611                     	;# 
   897  0612                     	;# 
   898  0613                     	;# 
   899  0613                     	;# 
   900  0614                     	;# 
   901  0615                     	;# 
   902  0616                     	;# 
   903  0616                     	;# 
   904  0691                     	;# 
   905  0692                     	;# 
   906  0693                     	;# 
   907  0694                     	;# 
   908  0695                     	;# 
   909  0E8E                     	;# 
   910  0E8F                     	;# 
   911  0E90                     	;# 
   912  0E91                     	;# 
   913  0E92                     	;# 
   914  0E93                     	;# 
   915  0E94                     	;# 
   916  0E94                     	;# 
   917  0E95                     	;# 
   918  0E96                     	;# 
   919  0E97                     	;# 
   920  0E98                     	;# 
   921  0E99                     	;# 
   922  0E9A                     	;# 
   923  0E9B                     	;# 
   924  0E9C                     	;# 
   925  0E9D                     	;# 
   926  0E9E                     	;# 
   927  0E9F                     	;# 
   928  0FE4                     	;# 
   929  0FE5                     	;# 
   930  0FE6                     	;# 
   931  0FE7                     	;# 
   932  0FE8                     	;# 
   933  0FE9                     	;# 
   934  0FEA                     	;# 
   935  0FEB                     	;# 
   936  0FED                     	;# 
   937  0FEE                     	;# 
   938  0FEF                     	;# 
   939                           
   940                           	psect	idataBANK0
   941  046D                     __pidataBANK0:	
   942                           
   943                           ;initializer for _IN_STRAY_CAP_TO_GND
   944                           ;main.c: 20: char packet1[((10+2+1)+10+1)]=0;
   945                           ;main.c: 21: char packet2[((10+2+1)+10+6+1)]=0;
   946                           ;main.c: 22: char nocodedbit[2+1+10]=0;
   947                           ;main.c: 24: char *preamble="1010101111";
   948                           ;main.c: 25: char *Fixeddata="0111100011";
   949                           ;main.c: 26: char *packet="1010101111010100111100011" ;
   950                           ;main.c: 27: char *message = "2.";
   951                           ;main.c: 29: char str8[6]=0;
   952                           ;main.c: 31: double temp=0;
   953                           ;main.c: 32: int hundreds=0;
   954                           ;main.c: 33: int tens=0;
   955                           ;main.c: 34: int units=0;
   956                           ;main.c: 35: int tenths=0;
   957                           ;main.c: 36: int hundredths=0;
   958                           ;main.c: 37: int thousandths=0;
   959  046D  349A               	retlw	154
   960  046E  34D5               	retlw	213
   961  046F  3441               	retlw	65
   962                           
   963                           ;initializer for _NODE_ID
   964  0470  3401               	retlw	1
   965  0471  3400               	retlw	0
   966                           
   967                           ;initializer for _delay
   968  0472  3414               	retlw	20
   969  0473  3400               	retlw	0
   970                           
   971                           ;initializer for _ADCres
   972  0474  34FF               	retlw	255
   973  0475  3403               	retlw	3
   974                           
   975                           ;initializer for _message
   976  0476  34FA               	retlw	low (STR_4| (0+32768))
   977  0477  3484               	retlw	high (STR_4| (0+32768))
   978                           
   979                           ;initializer for _packet
   980  0478  3428               	retlw	low (STR_3| (0+32768))
   981  0479  3484               	retlw	high (STR_3| (0+32768))
   982                           
   983                           ;initializer for _Fixeddata
   984  047A  3437               	retlw	low ((STR_3+15)| (0+32768))
   985  047B  3484               	retlw	high ((STR_3+15)| (0+32768))
   986                           
   987                           ;initializer for _preamble
   988  047C  3499               	retlw	low (STR_1| (0+32768))
   989  047D  3484               	retlw	high (STR_1| (0+32768))
   990                           
   991                           	psect	idataBANK1
   992  047E                     __pidataBANK1:	
   993                           
   994                           ;initializer for _voltref
   995  047E  3440               	retlw	64
   996  047F  34FF               	retlw	255
   997  0480  3444               	retlw	68
   998                           
   999                           ;initializer for _FactorD
  1000                           ;main.c: 20: char packet1[((10+2+1)+10+1)]=0;
  1001                           ;main.c: 21: char packet2[((10+2+1)+10+6+1)]=0;
  1002                           ;main.c: 22: char nocodedbit[2+1+10]=0;
  1003                           ;main.c: 24: char *preamble="1010101111";
  1004                           ;main.c: 25: char *Fixeddata="0111100011";
  1005                           ;main.c: 26: char *packet="1010101111010100111100011" ;
  1006                           ;main.c: 27: char *message = "2.";
  1007                           ;main.c: 29: char str8[6]=0;
  1008                           ;main.c: 31: double temp=0;
  1009                           ;main.c: 32: int hundreds=0;
  1010                           ;main.c: 33: int tens=0;
  1011                           ;main.c: 34: int units=0;
  1012                           ;main.c: 35: int tenths=0;
  1013                           ;main.c: 36: int hundredths=0;
  1014                           ;main.c: 37: int thousandths=0;
  1015  0481  34DB               	retlw	219
  1016  0482  344C               	retlw	76
  1017  0483  3443               	retlw	67
  1018                           
  1019                           ;initializer for _FactorC
  1020  0484  3449               	retlw	73
  1021  0485  3437               	retlw	55
  1022  0486  34BE               	retlw	190
  1023                           
  1024                           ;initializer for _FactorB
  1025  0487  3444               	retlw	68
  1026  0488  34C1               	retlw	193
  1027  0489  34B6               	retlw	182
  1028                           
  1029                           ;initializer for _FactorA
  1030  048A  3443               	retlw	67
  1031  048B  3492               	retlw	146
  1032  048C  34B0               	retlw	176
  1033                           
  1034                           	psect	stringtext1
  1035  04BA                     __pstringtext1:	
  1036  04BA                     _dpowers:	
  1037  04BA  3401               	retlw	1
  1038  04BB  3400               	retlw	0
  1039  04BC  340A               	retlw	10
  1040  04BD  3400               	retlw	0
  1041  04BE  3464               	retlw	100
  1042  04BF  3400               	retlw	0
  1043  04C0  34E8               	retlw	232
  1044  04C1  3403               	retlw	3
  1045  04C2  3410               	retlw	16
  1046  04C3  3427               	retlw	39
  1047  04C4                     __end_of_dpowers:	
  1048                           
  1049                           	psect	nvBANK0
  1050  006D                     __pnvBANK0:	
  1051  006D                     _INT_InterruptHandler:	
  1052  006D                     	ds	2
  1053  000B                     _INTCONbits	set	11
  1054  0095                     _OPTION_REGbits	set	149
  1055  008E                     _TRISC	set	142
  1056  008D                     _TRISB	set	141
  1057  008C                     _TRISA	set	140
  1058  0097                     _WDTCON	set	151
  1059  0098                     _OSCTUNE	set	152
  1060  0099                     _OSCCON	set	153
  1061  009D                     _ADCON0bits	set	157
  1062  009C                     _ADRESH	set	156
  1063  009B                     _ADRESL	set	155
  1064  009F                     _ADCON2	set	159
  1065  009E                     _ADCON1	set	158
  1066  009D                     _ADCON0	set	157
  1067  011D                     _APFCON	set	285
  1068  010E                     _LATC	set	270
  1069  010D                     _LATB	set	269
  1070  010C                     _LATA	set	268
  1071  0874                     _LATC4	set	2164
  1072  0873                     _LATC3	set	2163
  1073  018C                     _ANSELA	set	396
  1074  018D                     _ANSELB	set	397
  1075  018E                     _ANSELC	set	398
  1076  020C                     _WPUA	set	524
  1077  020D                     _WPUB	set	525
  1078  039B                     _ACTCON	set	923
  1079                           
  1080                           	psect	stringtext2
  1081  0428                     __pstringtext2:	
  1082  0428                     STR_3:	
  1083  0428  3431               	retlw	49	;'1'
  1084  0429  3430               	retlw	48	;'0'
  1085  042A  3431               	retlw	49	;'1'
  1086  042B  3430               	retlw	48	;'0'
  1087  042C  3431               	retlw	49	;'1'
  1088  042D  3430               	retlw	48	;'0'
  1089  042E  3431               	retlw	49	;'1'
  1090  042F  3431               	retlw	49	;'1'
  1091  0430  3431               	retlw	49	;'1'
  1092  0431  3431               	retlw	49	;'1'
  1093  0432  3430               	retlw	48	;'0'
  1094  0433  3431               	retlw	49	;'1'
  1095  0434  3430               	retlw	48	;'0'
  1096  0435  3431               	retlw	49	;'1'
  1097  0436  3430               	retlw	48	;'0'
  1098  0437  3430               	retlw	48	;'0'
  1099  0438  3431               	retlw	49	;'1'
  1100  0439  3431               	retlw	49	;'1'
  1101  043A  3431               	retlw	49	;'1'
  1102  043B  3431               	retlw	49	;'1'
  1103  043C  3430               	retlw	48	;'0'
  1104  043D  3430               	retlw	48	;'0'
  1105  043E  3430               	retlw	48	;'0'
  1106  043F  3431               	retlw	49	;'1'
  1107  0440  3431               	retlw	49	;'1'
  1108  0441  3400               	retlw	0
  1109                           
  1110                           	psect	stringtext3
  1111  0499                     __pstringtext3:	
  1112  0499                     STR_1:	
  1113  0499  3431               	retlw	49	;'1'
  1114  049A  3430               	retlw	48	;'0'
  1115  049B  3431               	retlw	49	;'1'
  1116  049C  3430               	retlw	48	;'0'
  1117  049D  3431               	retlw	49	;'1'
  1118  049E  3430               	retlw	48	;'0'
  1119  049F  3431               	retlw	49	;'1'
  1120  04A0  3431               	retlw	49	;'1'
  1121  04A1  3431               	retlw	49	;'1'
  1122  04A2  3431               	retlw	49	;'1'
  1123  04A3  3400               	retlw	0
  1124                           
  1125                           	psect	stringtext4
  1126  04CD                     __pstringtext4:	
  1127  04CD                     STR_5:	
  1128  04CD  3453               	retlw	83	;'S'
  1129  04CE  3474               	retlw	116	;'t'
  1130  04CF  3461               	retlw	97	;'a'
  1131  04D0  3472               	retlw	114	;'r'
  1132  04D1  3474               	retlw	116	;'t'
  1133  04D2  340A               	retlw	10
  1134  04D3  3400               	retlw	0
  1135                           
  1136                           	psect	stringtext5
  1137  04D4                     __pstringtext5:	
  1138  04D4                     STR_6:	
  1139  04D4  3425               	retlw	37	;'%'
  1140  04D5  3464               	retlw	100	;'d'
  1141  04D6  3445               	retlw	69	;'E'
  1142  04D7  3425               	retlw	37	;'%'
  1143  04D8  3464               	retlw	100	;'d'
  1144  04D9  3400               	retlw	0
  1145                           
  1146                           	psect	stringtext6
  1147  04FA                     __pstringtext6:	
  1148  04FA                     STR_4:	
  1149  04FA  3432               	retlw	50	;'2'
  1150  04FB  342E               	retlw	46	;'.'
  1151  04FC  3400               	retlw	0
  1152                           
  1153                           	psect	stringtext7
  1154  0000                     __pstringtext7:	
  1155  0437                     
  1156                           ; #config settings
  1157  0000                     
  1158                           	psect	cinit
  1159  0015                     start_initialization:	
  1160  0015                     __initialization:	
  1161                           
  1162                           ; Initialize objects allocated to BANK0
  1163  0015  306D               	movlw	low __pidataBANK0
  1164  0016  0084               	movwf	4
  1165  0017  3084               	movlw	(high __pidataBANK0)| (0+128)
  1166  0018  0085               	movwf	5
  1167  0019  305C               	movlw	low __pdataBANK0
  1168  001A  0086               	movwf	6
  1169  001B  3000               	movlw	high __pdataBANK0
  1170  001C  0087               	movwf	7
  1171  001D  3011               	movlw	17
  1172  001E  3184  24DA  3180   	fcall	init_ram
  1173                           
  1174                           ; Initialize objects allocated to BANK1
  1175  0021  307E               	movlw	low __pidataBANK1
  1176  0022  0084               	movwf	4
  1177  0023  3084               	movlw	(high __pidataBANK1)| (0+128)
  1178  0024  0085               	movwf	5
  1179  0025  30D1               	movlw	low __pdataBANK1
  1180  0026  0086               	movwf	6
  1181  0027  3000               	movlw	high __pdataBANK1
  1182  0028  0087               	movwf	7
  1183  0029  300F               	movlw	15
  1184  002A  3184  24DA  3180   	fcall	init_ram
  1185                           
  1186                           ; Clear objects allocated to BANK0
  1187  002D  3040               	movlw	low __pbssBANK0
  1188  002E  0084               	movwf	4
  1189  002F  3000               	movlw	high __pbssBANK0
  1190  0030  0085               	movwf	5
  1191  0031  301C               	movlw	28
  1192  0032  3184  24E0  3180   	fcall	clear_ram0
  1193                           
  1194                           ; Clear objects allocated to BANK1
  1195  0035  30A0               	movlw	low __pbssBANK1
  1196  0036  0084               	movwf	4
  1197  0037  3000               	movlw	high __pbssBANK1
  1198  0038  0085               	movwf	5
  1199  0039  3031               	movlw	49
  1200  003A  3184  24E0  3180   	fcall	clear_ram0
  1201                           
  1202                           ; Clear objects allocated to BANK2
  1203  003D  3020               	movlw	low __pbssBANK2
  1204  003E  0084               	movwf	4
  1205  003F  3001               	movlw	high __pbssBANK2
  1206  0040  0085               	movwf	5
  1207  0041  3036               	movlw	54
  1208  0042  3184  24E0         	fcall	clear_ram0
  1209  0044                     end_of_initialization:	
  1210                           ;End of C runtime variable initialization code
  1211                           
  1212  0044                     __end_of__initialization:	
  1213  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1214  0045  0020               	movlb	0
  1215  0046  3183  2B25         	ljmp	_main	;jump to C main() function
  1216                           
  1217                           	psect	bssBANK0
  1218  0040                     __pbssBANK0:	
  1219  0040                     _remainder:	
  1220  0040                     	ds	3
  1221  0043                     _temp:	
  1222  0043                     	ds	3
  1223  0046                     _sleep:	
  1224  0046                     	ds	2
  1225  0048                     _SENSORID:	
  1226  0048                     	ds	2
  1227  004A                     _sensor1:	
  1228  004A                     	ds	2
  1229  004C                     _sensor0:	
  1230  004C                     	ds	2
  1231  004E                     _tenthousandths:	
  1232  004E                     	ds	2
  1233  0050                     _thousandths:	
  1234  0050                     	ds	2
  1235  0052                     _hundredths:	
  1236  0052                     	ds	2
  1237  0054                     _tenths:	
  1238  0054                     	ds	2
  1239  0056                     _units:	
  1240  0056                     	ds	2
  1241  0058                     _tens:	
  1242  0058                     	ds	2
  1243  005A                     _hundreds:	
  1244  005A                     	ds	2
  1245                           
  1246                           	psect	dataBANK0
  1247  005C                     __pdataBANK0:	
  1248  005C                     _IN_STRAY_CAP_TO_GND:	
  1249  005C                     	ds	3
  1250  005F                     _NODE_ID:	
  1251  005F                     	ds	2
  1252  0061                     _delay:	
  1253  0061                     	ds	2
  1254  0063                     _ADCres:	
  1255  0063                     	ds	2
  1256  0065                     _message:	
  1257  0065                     	ds	2
  1258  0067                     _packet:	
  1259  0067                     	ds	2
  1260  0069                     _Fixeddata:	
  1261  0069                     	ds	2
  1262  006B                     _preamble:	
  1263  006B                     	ds	2
  1264                           
  1265                           	psect	bssBANK1
  1266  00A0                     __pbssBANK1:	
  1267  00A0                     _nocodedbit:	
  1268  00A0                     	ds	13
  1269  00AD                     _ADC0mVolt2:	
  1270  00AD                     	ds	3
  1271  00B0                     _ADC0mVolt1:	
  1272  00B0                     	ds	3
  1273  00B3                     _ADC1mVolt:	
  1274  00B3                     	ds	3
  1275  00B6                     _ADC0mVolt:	
  1276  00B6                     	ds	3
  1277  00B9                     _TempDIFF:	
  1278  00B9                     	ds	3
  1279  00BC                     _TemporC2:	
  1280  00BC                     	ds	3
  1281  00BF                     _TemporC1:	
  1282  00BF                     	ds	3
  1283  00C2                     _capacitance:	
  1284  00C2                     	ds	3
  1285  00C5                     _IN_CAP_TO_GND:	
  1286  00C5                     	ds	3
  1287  00C8                     _IN_EXTRA_CAP_TO_GND:	
  1288  00C8                     	ds	3
  1289  00CB                     _str8:	
  1290  00CB                     	ds	6
  1291                           
  1292                           	psect	dataBANK1
  1293  00D1                     __pdataBANK1:	
  1294  00D1                     _voltref:	
  1295  00D1                     	ds	3
  1296  00D4                     _FactorD:	
  1297  00D4                     	ds	3
  1298  00D7                     _FactorC:	
  1299  00D7                     	ds	3
  1300  00DA                     _FactorB:	
  1301  00DA                     	ds	3
  1302  00DD                     _FactorA:	
  1303  00DD                     	ds	3
  1304                           
  1305                           	psect	bssBANK2
  1306  0120                     __pbssBANK2:	
  1307  0120                     _packet2:	
  1308  0120                     	ds	30
  1309  013E                     _packet1:	
  1310  013E                     	ds	24
  1311                           
  1312                           	psect	inittext
  1313  04DA                     init_ram:	
  1314  04DA  00FE               	movwf	126
  1315  04DB                     initloop:	
  1316  04DB  0012               	moviw fsr0++
  1317  04DC  001E               	movwi fsr1++
  1318  04DD  0BFE               	decfsz	126,f
  1319  04DE  2CDB               	goto	initloop
  1320  04DF  3400               	retlw	0
  1321                           
  1322                           	psect	clrtext
  1323  04E0                     clear_ram0:	
  1324                           ;	Called with FSR0 containing the base address, and
  1325                           ;	WREG with the size to clear
  1326                           
  1327  04E0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1328  04E1                     clrloop0:	
  1329  04E1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1330  04E2  3101               	addfsr 0,1
  1331  04E3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1332  04E4  2CE1               	goto	clrloop0	;have we reached the end yet?
  1333  04E5  3400               	retlw	0	;all done for this memory range, return
  1334                           
  1335                           	psect	cstackCOMMON
  1336  0070                     __pcstackCOMMON:	
  1337  0070                     ?_INT_ISR:	
  1338  0070                     ??_INT_ISR:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_PIN_MANAGER_Initialize:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ?_OSCILLATOR_Initialize:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_WDT_Initialize:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_EXT_INT_Initialize:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ?_INT_CallBack:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ??_INT_CallBack:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_sendChar:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ?_ADC_Initialize:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ?_INTERRUPT_InterruptManager:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ??_INTERRUPT_InterruptManager:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?_SYSTEM_Initialize:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?_INT_DefaultInterruptHandler:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ??_INT_DefaultInterruptHandler:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?_main:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383                           
  1384                           ; 1 bytes @ 0x0
  1385  0070                     	ds	1
  1386  0071                     ??_PIN_MANAGER_Initialize:	
  1387  0071                     ??_OSCILLATOR_Initialize:	
  1388                           ; 1 bytes @ 0x1
  1389                           
  1390  0071                     ??_WDT_Initialize:	
  1391                           ; 1 bytes @ 0x1
  1392                           
  1393  0071                     ?_putch:	
  1394                           ; 1 bytes @ 0x1
  1395                           
  1396  0071                     ??_ADC_Initialize:	
  1397                           ; 1 bytes @ 0x1
  1398                           
  1399  0071                     ?_INT_SetInterruptHandler:	
  1400                           ; 1 bytes @ 0x1
  1401                           
  1402  0071                     ?_dit_dah:	
  1403                           ; 1 bytes @ 0x1
  1404                           
  1405  0071                     ?_ADC_GetConversion:	
  1406                           ; 1 bytes @ 0x1
  1407                           
  1408  0071                     ?___lwdiv:	
  1409                           ; 2 bytes @ 0x1
  1410                           
  1411  0071                     putch@c:	
  1412                           ; 2 bytes @ 0x1
  1413                           
  1414  0071                     INT_SetInterruptHandler@InterruptHandler:	
  1415                           ; 1 bytes @ 0x1
  1416                           
  1417  0071                     dit_dah@index:	
  1418                           ; 2 bytes @ 0x1
  1419                           
  1420  0071                     ___lwdiv@divisor:	
  1421                           ; 2 bytes @ 0x1
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x1
  1425  0071                     	ds	1
  1426  0072                     ??_putch:	
  1427                           
  1428                           ; 1 bytes @ 0x2
  1429  0072                     	ds	1
  1430  0073                     ??_EXT_INT_Initialize:	
  1431  0073                     ??_ADC_GetConversion:	
  1432                           ; 1 bytes @ 0x3
  1433                           
  1434  0073                     ??_SYSTEM_Initialize:	
  1435                           ; 1 bytes @ 0x3
  1436                           
  1437  0073                     ??_INT_SetInterruptHandler:	
  1438                           ; 1 bytes @ 0x3
  1439                           
  1440  0073                     ??_dit_dah:	
  1441                           ; 1 bytes @ 0x3
  1442                           
  1443  0073                     ___lwdiv@dividend:	
  1444                           ; 1 bytes @ 0x3
  1445                           
  1446                           
  1447                           ; 2 bytes @ 0x3
  1448  0073                     	ds	1
  1449  0074                     ADC_GetConversion@channel:	
  1450  0074                     dit_dah@i:	
  1451                           ; 1 bytes @ 0x4
  1452                           
  1453                           
  1454                           ; 2 bytes @ 0x4
  1455  0074                     	ds	1
  1456  0075                     ??___lwdiv:	
  1457                           
  1458                           ; 1 bytes @ 0x5
  1459  0075                     	ds	1
  1460  0076                     ??_sendChar:	
  1461  0076                     ___lwdiv@quotient:	
  1462                           ; 1 bytes @ 0x6
  1463                           
  1464                           
  1465                           ; 2 bytes @ 0x6
  1466  0076                     	ds	1
  1467  0077                     sendChar@i:	
  1468                           
  1469                           ; 2 bytes @ 0x7
  1470  0077                     	ds	1
  1471  0078                     ___lwdiv@counter:	
  1472                           
  1473                           ; 1 bytes @ 0x8
  1474  0078                     	ds	1
  1475  0079                     ?___lwmod:	
  1476  0079                     sendChar@a:	
  1477                           ; 2 bytes @ 0x9
  1478                           
  1479  0079                     ___lwmod@divisor:	
  1480                           ; 1 bytes @ 0x9
  1481                           
  1482                           
  1483                           ; 2 bytes @ 0x9
  1484  0079                     	ds	2
  1485  007B                     ___lwmod@dividend:	
  1486                           
  1487                           ; 2 bytes @ 0xB
  1488  007B                     	ds	2
  1489                           
  1490                           	psect	cstackBANK0
  1491  0020                     __pcstackBANK0:	
  1492  0020                     ??___lwmod:	
  1493                           
  1494                           ; 1 bytes @ 0x0
  1495  0020                     	ds	1
  1496  0021                     ___lwmod@counter:	
  1497                           
  1498                           ; 1 bytes @ 0x1
  1499  0021                     	ds	1
  1500  0022                     ?__doprnt:	
  1501  0022                     __doprnt@f:	
  1502                           ; 2 bytes @ 0x2
  1503                           
  1504                           
  1505                           ; 2 bytes @ 0x2
  1506  0022                     	ds	2
  1507  0024                     __doprnt@ap:	
  1508                           
  1509                           ; 1 bytes @ 0x4
  1510  0024                     	ds	1
  1511  0025                     ??__doprnt:	
  1512                           
  1513                           ; 1 bytes @ 0x5
  1514  0025                     	ds	4
  1515  0029                     __doprnt@flag:	
  1516                           
  1517                           ; 1 bytes @ 0x9
  1518  0029                     	ds	1
  1519  002A                     __doprnt@prec:	
  1520                           
  1521                           ; 1 bytes @ 0xA
  1522  002A                     	ds	1
  1523  002B                     __doprnt@val:	
  1524                           
  1525                           ; 2 bytes @ 0xB
  1526  002B                     	ds	2
  1527  002D                     __doprnt@c:	
  1528                           
  1529                           ; 1 bytes @ 0xD
  1530  002D                     	ds	1
  1531  002E                     __doprnt@pb:	
  1532                           
  1533                           ; 1 bytes @ 0xE
  1534  002E                     	ds	1
  1535  002F                     ?_printf:	
  1536  002F                     ?_sprintf:	
  1537                           ; 2 bytes @ 0xF
  1538                           
  1539  002F                     printf@f:	
  1540                           ; 2 bytes @ 0xF
  1541                           
  1542  002F                     sprintf@f:	
  1543                           ; 2 bytes @ 0xF
  1544                           
  1545                           
  1546                           ; 2 bytes @ 0xF
  1547  002F                     	ds	2
  1548  0031                     ??_printf:	
  1549                           
  1550                           ; 1 bytes @ 0x11
  1551  0031                     	ds	1
  1552  0032                     printf@ap:	
  1553                           
  1554                           ; 1 bytes @ 0x12
  1555  0032                     	ds	1
  1556  0033                     printf@pb:	
  1557                           
  1558                           ; 3 bytes @ 0x13
  1559  0033                     	ds	2
  1560  0035                     ??_sprintf:	
  1561                           
  1562                           ; 1 bytes @ 0x15
  1563  0035                     	ds	1
  1564  0036                     sprintf@wh:	
  1565                           
  1566                           ; 1 bytes @ 0x16
  1567  0036                     	ds	1
  1568  0037                     sprintf@ap:	
  1569                           
  1570                           ; 1 bytes @ 0x17
  1571  0037                     	ds	1
  1572  0038                     sprintf@pb:	
  1573                           
  1574                           ; 3 bytes @ 0x18
  1575  0038                     	ds	3
  1576  003B                     ??_main:	
  1577                           
  1578                           ; 1 bytes @ 0x1B
  1579  003B                     	ds	1
  1580  003C                     main@i:	
  1581                           
  1582                           ; 2 bytes @ 0x1C
  1583  003C                     	ds	2
  1584  003E                     main@count:	
  1585                           
  1586                           ; 1 bytes @ 0x1E
  1587  003E                     	ds	1
  1588  003F                     main@c:	
  1589                           
  1590                           ; 1 bytes @ 0x1F
  1591  003F                     	ds	1
  1592                           
  1593                           	psect	maintext
  1594  0325                     __pmaintext:	
  1595 ;;
  1596 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1597 ;;
  1598 ;; *************** function _main *****************
  1599 ;; Defined at:
  1600 ;;		line 77 in file "main.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  c               1   31[BANK0 ] PTR unsigned char 
  1605 ;;		 -> str8(6), 
  1606 ;;  i               2   28[BANK0 ] int 
  1607 ;;  count           1   30[BANK0 ] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : B1F/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1618 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1619 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1620 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1621 ;;Total ram usage:        5 bytes
  1622 ;; Hardware stack levels required when called:    7
  1623 ;; This function calls:
  1624 ;;		_ADC_GetConversion
  1625 ;;		_ADC_Initialize
  1626 ;;		_SYSTEM_Initialize
  1627 ;;		_printf
  1628 ;;		_sendChar
  1629 ;;		_sprintf
  1630 ;; This function is called by:
  1631 ;;		Startup code after reset
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _main
  1637  0325                     _main:	
  1638                           
  1639                           ;main.c: 79: int i=0;
  1640                           
  1641                           ;incstack = 0
  1642                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1643  0325  0020               	movlb	0	; select bank0
  1644  0326  01BC               	clrf	main@i
  1645  0327  01BD               	clrf	main@i+1
  1646                           
  1647                           ;main.c: 82: SYSTEM_Initialize();
  1648  0328  3184  248D  3183   	fcall	_SYSTEM_Initialize
  1649                           
  1650                           ;main.c: 83: uint8_t count=0;
  1651  032B  0020               	movlb	0	; select bank0
  1652  032C  01BE               	clrf	main@count
  1653                           
  1654                           ;main.c: 89: if (sleep==1)
  1655  032D  0346               	decf	_sleep,w
  1656  032E  0447               	iorwf	_sleep+1,w
  1657  032F  1D03               	btfss	3,2
  1658  0330  2B33               	goto	l234
  1659                           
  1660                           ;main.c: 90: {
  1661                           ;main.c: 92: (INTCONbits.GIE = 1);
  1662  0331  178B               	bsf	11,7	;volatile
  1663                           
  1664                           ;main.c: 93: }
  1665  0332  2B34               	goto	l1376
  1666  0333                     l234:	
  1667                           
  1668                           ;main.c: 94: else
  1669                           ;main.c: 95: {
  1670                           ;main.c: 97: (INTCONbits.GIE = 0);
  1671  0333  138B               	bcf	11,7	;volatile
  1672  0334                     l1376:	
  1673                           
  1674                           ;main.c: 98: }
  1675                           ;main.c: 107: ADC_Initialize();
  1676  0334  3184  24C4  3183   	fcall	_ADC_Initialize
  1677                           
  1678                           ;main.c: 109: printf("Start\n");
  1679  0337  30CD               	movlw	low (STR_5| (0+32768))
  1680  0338  0020               	movlb	0	; select bank0
  1681  0339  00AF               	movwf	printf@f
  1682  033A  3084               	movlw	high (STR_5| (0+32768))
  1683  033B  00B0               	movwf	printf@f+1
  1684  033C  3184  2442  3183   	fcall	_printf
  1685  033F                     l1380:	
  1686                           ;main.c: 110: while (1)
  1687                           
  1688                           
  1689                           ;main.c: 111: {
  1690                           ;main.c: 114: *packet1=0;
  1691  033F  0022               	movlb	2	; select bank2
  1692  0340  01BE               	clrf	_packet1^(0+256)
  1693                           
  1694                           ;main.c: 116: LATC3=1;
  1695  0341  158E               	bsf	14,3	;volatile
  1696                           
  1697                           ;main.c: 118: sensor0= ADC_GetConversion(channel_AN8);
  1698  0342  3008               	movlw	8
  1699  0343  3184  2458  3183   	fcall	_ADC_GetConversion
  1700  0346  0872               	movf	?_ADC_GetConversion+1,w
  1701  0347  0020               	movlb	0	; select bank0
  1702  0348  00CD               	movwf	_sensor0+1
  1703  0349  0871               	movf	?_ADC_GetConversion,w
  1704  034A  00CC               	movwf	_sensor0
  1705                           
  1706                           ;main.c: 120: sensor0=2;
  1707  034B  3002               	movlw	2
  1708  034C  00CC               	movwf	_sensor0
  1709  034D  3000               	movlw	0
  1710  034E  00CD               	movwf	_sensor0+1
  1711                           
  1712                           ;main.c: 123: sensor1= ADC_GetConversion(channel_AN9);
  1713  034F  3009               	movlw	9
  1714  0350  3184  2458  3183   	fcall	_ADC_GetConversion
  1715  0353  0872               	movf	?_ADC_GetConversion+1,w
  1716  0354  0020               	movlb	0	; select bank0
  1717  0355  00CB               	movwf	_sensor1+1
  1718  0356  0871               	movf	?_ADC_GetConversion,w
  1719  0357  00CA               	movwf	_sensor1
  1720                           
  1721                           ;main.c: 125: sensor1=4;
  1722  0358  3004               	movlw	4
  1723  0359  00CA               	movwf	_sensor1
  1724  035A  3000               	movlw	0
  1725  035B  00CB               	movwf	_sensor1+1
  1726                           
  1727                           ;main.c: 128: ADCON0 = 0x00;
  1728  035C  0021               	movlb	1	; select bank1
  1729  035D  019D               	clrf	29	;volatile
  1730                           
  1731                           ;main.c: 129: LATC3=0;
  1732  035E  0022               	movlb	2	; select bank2
  1733  035F  118E               	bcf	14,3	;volatile
  1734                           
  1735                           ;main.c: 131: sprintf(str8,"%dE%d", sensor0, sensor1);
  1736  0360  30D4               	movlw	low (STR_6| (0+32768))
  1737  0361  0020               	movlb	0	; select bank0
  1738  0362  00AF               	movwf	sprintf@f
  1739  0363  3084               	movlw	high (STR_6| (0+32768))
  1740  0364  00B0               	movwf	sprintf@f+1
  1741  0365  084D               	movf	_sensor0+1,w
  1742  0366  00B2               	movwf	?_sprintf+3
  1743  0367  084C               	movf	_sensor0,w
  1744  0368  00B1               	movwf	?_sprintf+2
  1745  0369  084B               	movf	_sensor1+1,w
  1746  036A  00B4               	movwf	?_sprintf+5
  1747  036B  084A               	movf	_sensor1,w
  1748  036C  00B3               	movwf	?_sprintf+4
  1749  036D  30CB               	movlw	(low (_str8| 0))& (0+255)
  1750  036E  3183  23F0  3183   	fcall	_sprintf
  1751                           
  1752                           ;main.c: 133: char *c = str8;
  1753  0371  30CB               	movlw	(low (_str8| 0))& (0+255)
  1754  0372  0020               	movlb	0	; select bank0
  1755  0373  00BB               	movwf	??_main
  1756  0374  083B               	movf	??_main,w
  1757  0375  00BF               	movwf	main@c
  1758  0376                     l1404:	
  1759                           ;main.c: 134: for( ; *c ; c++ )
  1760                           
  1761  0376  083F               	movf	main@c,w
  1762  0377  0086               	movwf	6
  1763  0378  0187               	clrf	7
  1764  0379  0801               	movf	1,w
  1765  037A  1903               	btfsc	3,2
  1766  037B  2B89               	goto	l1406
  1767                           
  1768                           ;main.c: 135: {
  1769                           ;main.c: 136: sendChar( *c );
  1770  037C  083F               	movf	main@c,w
  1771  037D  0086               	movwf	6
  1772  037E  0187               	clrf	7
  1773  037F  0801               	movf	1,w
  1774  0380  3180  2048  3183   	fcall	_sendChar
  1775  0383  3001               	movlw	1
  1776  0384  0020               	movlb	0	; select bank0
  1777  0385  00BB               	movwf	??_main
  1778  0386  083B               	movf	??_main,w
  1779  0387  07BF               	addwf	main@c,f
  1780  0388  2B76               	goto	l1404
  1781  0389                     l1406:	
  1782                           
  1783                           ;main.c: 138: }
  1784                           ;main.c: 141: if (sleep==1)
  1785  0389  0346               	decf	_sleep,w
  1786  038A  0447               	iorwf	_sleep+1,w
  1787  038B  1D03               	btfss	3,2
  1788  038C  2B3F               	goto	l1380
  1789  038D  0063               	sleep	;# 
  1790  038E  2B3F               	goto	l1380
  1791  038F                     __end_of_main:	
  1792                           
  1793                           	psect	text1
  1794  03F0                     __ptext1:	
  1795 ;; *************** function _sprintf *****************
  1796 ;; Defined at:
  1797 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  wh              1    wreg     PTR unsigned char 
  1800 ;;		 -> str8(6), 
  1801 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  1802 ;;		 -> STR_6(6), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  1805 ;;		 -> str8(6), 
  1806 ;;  pb              3   24[BANK0 ] struct __prbuf
  1807 ;;  ap              1   23[BANK0 ] PTR void [1]
  1808 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2   15[BANK0 ] int 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1818 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1819 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1820 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;Total ram usage:       12 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    6
  1825 ;; This function calls:
  1826 ;;		__doprnt
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           
  1833                           ;psect for function _sprintf
  1834  03F0                     _sprintf:	
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1838                           ;sprintf@wh stored from wreg
  1839  03F0  0020               	movlb	0	; select bank0
  1840  03F1  00B6               	movwf	sprintf@wh
  1841  03F2  0836               	movf	sprintf@wh,w
  1842  03F3  00B5               	movwf	??_sprintf
  1843  03F4  0835               	movf	??_sprintf,w
  1844  03F5  00B8               	movwf	sprintf@pb
  1845  03F6  01B9               	clrf	low ((sprintf@pb| 0+1))
  1846  03F7  01BA               	clrf	(low ((sprintf@pb| 0+1))+1)
  1847  03F8  3031               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1848  03F9  00B5               	movwf	??_sprintf
  1849  03FA  0835               	movf	??_sprintf,w
  1850  03FB  00B7               	movwf	sprintf@ap
  1851  03FC  0830               	movf	sprintf@f+1,w
  1852  03FD  00A3               	movwf	__doprnt@f+1
  1853  03FE  082F               	movf	sprintf@f,w
  1854  03FF  00A2               	movwf	__doprnt@f
  1855  0400  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  1856  0401  00B5               	movwf	??_sprintf
  1857  0402  0835               	movf	??_sprintf,w
  1858  0403  00A4               	movwf	__doprnt@ap
  1859  0404  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  1860  0405  3181  2187         	fcall	__doprnt
  1861  0407  0020               	movlb	0	; select bank0
  1862  0408  0838               	movf	sprintf@pb,w
  1863  0409  0086               	movwf	6
  1864  040A  0187               	clrf	7
  1865  040B  0181               	clrf	1
  1866  040C  0008               	return
  1867  040D                     __end_of_sprintf:	
  1868                           ;	Return value of _sprintf is never used
  1869                           
  1870                           
  1871                           	psect	text2
  1872  0048                     __ptext2:	
  1873 ;; *************** function _sendChar *****************
  1874 ;; Defined at:
  1875 ;;		line 193 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  a               1    wreg     unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  a               1    9[COMMON] unsigned char 
  1880 ;;  i               2    7[COMMON] int 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;Total ram usage:        4 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    5
  1897 ;; This function calls:
  1898 ;;		_dit_dah
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _sendChar
  1906  0048                     _sendChar:	
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _sendChar: [wreg+status,2+status,0+pclath+cstack]
  1910                           ;sendChar@a stored from wreg
  1911  0048  00F9               	movwf	sendChar@a
  1912                           
  1913                           ;main.c: 195: int i;
  1914                           ;main.c: 196: if (a=='0'){
  1915  0049  3030               	movlw	48
  1916  004A  0679               	xorwf	sendChar@a,w
  1917  004B  1D03               	btfss	3,2
  1918  004C  284F               	goto	l1312
  1919                           
  1920                           ;main.c: 197: dit_dah(3); dit_dah(3); dit_dah(3); dit_dah(3); dit_dah(3);}
  1921  004D  3003               	movlw	3
  1922  004E  2854               	goto	L14
  1923  004F                     l1312:	
  1924                           
  1925                           ;main.c: 198: else if (a=='1'){
  1926  004F  3031               	movlw	49
  1927  0050  0679               	xorwf	sendChar@a,w
  1928  0051  1D03               	btfss	3,2
  1929  0052  285C               	goto	l1316
  1930                           
  1931                           ;main.c: 199: dit_dah(1);dit_dah(3); dit_dah(3); dit_dah(3); dit_dah(3);}
  1932  0053  3001               	movlw	1
  1933  0054                     L14:	
  1934  0054  00F1               	movwf	dit_dah@index
  1935  0055  3000               	movlw	0
  1936  0056  00F2               	movwf	dit_dah@index+1
  1937  0057  3182  22A3  3180   	fcall	_dit_dah
  1938  005A  3003               	movlw	3
  1939  005B  2868               	goto	L12
  1940  005C                     l1316:	
  1941                           
  1942                           ;main.c: 200: else if (a=='2'){
  1943  005C  3032               	movlw	50
  1944  005D  0679               	xorwf	sendChar@a,w
  1945  005E  1D03               	btfss	3,2
  1946  005F  2870               	goto	l1320
  1947                           
  1948                           ;main.c: 201: dit_dah(1);dit_dah(1); dit_dah(3); dit_dah(3); dit_dah(3);}
  1949  0060  3001               	movlw	1
  1950  0061  00F1               	movwf	dit_dah@index
  1951  0062  3000               	movlw	0
  1952  0063  00F2               	movwf	dit_dah@index+1
  1953  0064  3182  22A3  3180   	fcall	_dit_dah
  1954  0067  3001               	movlw	1
  1955  0068                     L12:	
  1956  0068  00F1               	movwf	dit_dah@index
  1957  0069  3000               	movlw	0
  1958  006A  00F2               	movwf	dit_dah@index+1
  1959  006B  3182  22A3  3180   	fcall	_dit_dah
  1960  006E  3003               	movlw	3
  1961  006F  2883               	goto	L10
  1962  0070                     l1320:	
  1963                           
  1964                           ;main.c: 202: else if (a=='3'){
  1965  0070  3033               	movlw	51
  1966  0071  0679               	xorwf	sendChar@a,w
  1967  0072  1D03               	btfss	3,2
  1968  0073  288B               	goto	l1324
  1969                           
  1970                           ;main.c: 203: dit_dah(1);dit_dah(1); dit_dah(1); dit_dah(3); dit_dah(3);}
  1971  0074  3001               	movlw	1
  1972  0075  00F1               	movwf	dit_dah@index
  1973  0076  3000               	movlw	0
  1974  0077  00F2               	movwf	dit_dah@index+1
  1975  0078  3182  22A3  3180   	fcall	_dit_dah
  1976  007B  3001               	movlw	1
  1977  007C  00F1               	movwf	dit_dah@index
  1978  007D  3000               	movlw	0
  1979  007E  00F2               	movwf	dit_dah@index+1
  1980  007F  3182  22A3  3180   	fcall	_dit_dah
  1981  0082  3001               	movlw	1
  1982  0083                     L10:	
  1983  0083  00F1               	movwf	dit_dah@index
  1984  0084  3000               	movlw	0
  1985  0085  00F2               	movwf	dit_dah@index+1
  1986  0086  3182  22A3  3180   	fcall	_dit_dah
  1987  0089  3003               	movlw	3
  1988  008A  28A5               	goto	L7
  1989  008B                     l1324:	
  1990                           
  1991                           ;main.c: 204: else if (a=='4'){
  1992  008B  3034               	movlw	52
  1993  008C  0679               	xorwf	sendChar@a,w
  1994  008D  1D03               	btfss	3,2
  1995  008E  28AD               	goto	l1328
  1996                           
  1997                           ;main.c: 205: dit_dah(1);dit_dah(1); dit_dah(1); dit_dah(1); dit_dah(3);}
  1998  008F  3001               	movlw	1
  1999  0090  00F1               	movwf	dit_dah@index
  2000  0091  3000               	movlw	0
  2001  0092  00F2               	movwf	dit_dah@index+1
  2002  0093  3182  22A3  3180   	fcall	_dit_dah
  2003  0096  3001               	movlw	1
  2004  0097  00F1               	movwf	dit_dah@index
  2005  0098  3000               	movlw	0
  2006  0099  00F2               	movwf	dit_dah@index+1
  2007  009A  3182  22A3  3180   	fcall	_dit_dah
  2008  009D  3001               	movlw	1
  2009  009E  00F1               	movwf	dit_dah@index
  2010  009F  3000               	movlw	0
  2011  00A0  00F2               	movwf	dit_dah@index+1
  2012  00A1  3182  22A3  3180   	fcall	_dit_dah
  2013  00A4  3001               	movlw	1
  2014  00A5                     L7:	
  2015  00A5  00F1               	movwf	dit_dah@index
  2016  00A6  3000               	movlw	0
  2017  00A7  00F2               	movwf	dit_dah@index+1
  2018  00A8  3182  22A3  3180   	fcall	_dit_dah
  2019  00AB  3003               	movlw	3
  2020  00AC  2957               	goto	L1
  2021  00AD                     l1328:	
  2022                           
  2023                           ;main.c: 206: else if (a=='5'){
  2024  00AD  3035               	movlw	53
  2025  00AE  0679               	xorwf	sendChar@a,w
  2026  00AF  1D03               	btfss	3,2
  2027  00B0  28CE               	goto	l1332
  2028                           
  2029                           ;main.c: 207: dit_dah(1);dit_dah(1); dit_dah(1);dit_dah(1); dit_dah(1);}
  2030  00B1  3001               	movlw	1
  2031  00B2  00F1               	movwf	dit_dah@index
  2032  00B3  3000               	movlw	0
  2033  00B4  00F2               	movwf	dit_dah@index+1
  2034  00B5  3182  22A3  3180   	fcall	_dit_dah
  2035  00B8  3001               	movlw	1
  2036  00B9  00F1               	movwf	dit_dah@index
  2037  00BA  3000               	movlw	0
  2038  00BB  00F2               	movwf	dit_dah@index+1
  2039  00BC  3182  22A3  3180   	fcall	_dit_dah
  2040  00BF  3001               	movlw	1
  2041  00C0  00F1               	movwf	dit_dah@index
  2042  00C1  3000               	movlw	0
  2043  00C2  00F2               	movwf	dit_dah@index+1
  2044  00C3  3182  22A3  3180   	fcall	_dit_dah
  2045  00C6  3001               	movlw	1
  2046  00C7  00F1               	movwf	dit_dah@index
  2047  00C8  3000               	movlw	0
  2048  00C9  00F2               	movwf	dit_dah@index+1
  2049  00CA  3182  22A3  3180   	fcall	_dit_dah
  2050  00CD  2956               	goto	L6
  2051  00CE                     l1332:	
  2052                           
  2053                           ;main.c: 208: else if (a=='6'){
  2054  00CE  3036               	movlw	54
  2055  00CF  0679               	xorwf	sendChar@a,w
  2056  00D0  1D03               	btfss	3,2
  2057  00D1  28EF               	goto	l1336
  2058                           
  2059                           ;main.c: 209: dit_dah(3);dit_dah(1); dit_dah(1);dit_dah(1); dit_dah(1);}
  2060  00D2  3003               	movlw	3
  2061  00D3  00F1               	movwf	dit_dah@index
  2062  00D4  3000               	movlw	0
  2063  00D5  00F2               	movwf	dit_dah@index+1
  2064  00D6  3182  22A3  3180   	fcall	_dit_dah
  2065  00D9  3001               	movlw	1
  2066  00DA  00F1               	movwf	dit_dah@index
  2067  00DB  3000               	movlw	0
  2068  00DC  00F2               	movwf	dit_dah@index+1
  2069  00DD  3182  22A3  3180   	fcall	_dit_dah
  2070  00E0  3001               	movlw	1
  2071  00E1  00F1               	movwf	dit_dah@index
  2072  00E2  3000               	movlw	0
  2073  00E3  00F2               	movwf	dit_dah@index+1
  2074  00E4  3182  22A3  3180   	fcall	_dit_dah
  2075  00E7  3001               	movlw	1
  2076  00E8  00F1               	movwf	dit_dah@index
  2077  00E9  3000               	movlw	0
  2078  00EA  00F2               	movwf	dit_dah@index+1
  2079  00EB  3182  22A3  3180   	fcall	_dit_dah
  2080  00EE  2956               	goto	L6
  2081  00EF                     l1336:	
  2082                           
  2083                           ;main.c: 210: else if (a=='7'){
  2084  00EF  3037               	movlw	55
  2085  00F0  0679               	xorwf	sendChar@a,w
  2086  00F1  1D03               	btfss	3,2
  2087  00F2  2910               	goto	l1340
  2088                           
  2089                           ;main.c: 211: dit_dah(3);dit_dah(3); dit_dah(1);dit_dah(1); dit_dah(1);}
  2090  00F3  3003               	movlw	3
  2091  00F4  00F1               	movwf	dit_dah@index
  2092  00F5  3000               	movlw	0
  2093  00F6  00F2               	movwf	dit_dah@index+1
  2094  00F7  3182  22A3  3180   	fcall	_dit_dah
  2095  00FA  3003               	movlw	3
  2096  00FB  00F1               	movwf	dit_dah@index
  2097  00FC  3000               	movlw	0
  2098  00FD  00F2               	movwf	dit_dah@index+1
  2099  00FE  3182  22A3  3180   	fcall	_dit_dah
  2100  0101  3001               	movlw	1
  2101  0102  00F1               	movwf	dit_dah@index
  2102  0103  3000               	movlw	0
  2103  0104  00F2               	movwf	dit_dah@index+1
  2104  0105  3182  22A3  3180   	fcall	_dit_dah
  2105  0108  3001               	movlw	1
  2106  0109  00F1               	movwf	dit_dah@index
  2107  010A  3000               	movlw	0
  2108  010B  00F2               	movwf	dit_dah@index+1
  2109  010C  3182  22A3  3180   	fcall	_dit_dah
  2110  010F  2956               	goto	L6
  2111  0110                     l1340:	
  2112                           
  2113                           ;main.c: 212: else if (a=='8'){
  2114  0110  3038               	movlw	56
  2115  0111  0679               	xorwf	sendChar@a,w
  2116  0112  1D03               	btfss	3,2
  2117  0113  2931               	goto	l1344
  2118                           
  2119                           ;main.c: 213: dit_dah(3);dit_dah(3); dit_dah(3);dit_dah(1); dit_dah(1);}
  2120  0114  3003               	movlw	3
  2121  0115  00F1               	movwf	dit_dah@index
  2122  0116  3000               	movlw	0
  2123  0117  00F2               	movwf	dit_dah@index+1
  2124  0118  3182  22A3  3180   	fcall	_dit_dah
  2125  011B  3003               	movlw	3
  2126  011C  00F1               	movwf	dit_dah@index
  2127  011D  3000               	movlw	0
  2128  011E  00F2               	movwf	dit_dah@index+1
  2129  011F  3182  22A3  3180   	fcall	_dit_dah
  2130  0122  3003               	movlw	3
  2131  0123  00F1               	movwf	dit_dah@index
  2132  0124  3000               	movlw	0
  2133  0125  00F2               	movwf	dit_dah@index+1
  2134  0126  3182  22A3  3180   	fcall	_dit_dah
  2135  0129  3001               	movlw	1
  2136  012A  00F1               	movwf	dit_dah@index
  2137  012B  3000               	movlw	0
  2138  012C  00F2               	movwf	dit_dah@index+1
  2139  012D  3182  22A3  3180   	fcall	_dit_dah
  2140  0130  2956               	goto	L6
  2141  0131                     l1344:	
  2142                           
  2143                           ;main.c: 214: else if (a=='9'){
  2144  0131  3039               	movlw	57
  2145  0132  0679               	xorwf	sendChar@a,w
  2146  0133  1D03               	btfss	3,2
  2147  0134  2952               	goto	l1348
  2148                           
  2149                           ;main.c: 215: dit_dah(3);dit_dah(3); dit_dah(3);dit_dah(3); dit_dah(1);}
  2150  0135  3003               	movlw	3
  2151  0136  00F1               	movwf	dit_dah@index
  2152  0137  3000               	movlw	0
  2153  0138  00F2               	movwf	dit_dah@index+1
  2154  0139  3182  22A3  3180   	fcall	_dit_dah
  2155  013C  3003               	movlw	3
  2156  013D  00F1               	movwf	dit_dah@index
  2157  013E  3000               	movlw	0
  2158  013F  00F2               	movwf	dit_dah@index+1
  2159  0140  3182  22A3  3180   	fcall	_dit_dah
  2160  0143  3003               	movlw	3
  2161  0144  00F1               	movwf	dit_dah@index
  2162  0145  3000               	movlw	0
  2163  0146  00F2               	movwf	dit_dah@index+1
  2164  0147  3182  22A3  3180   	fcall	_dit_dah
  2165  014A  3003               	movlw	3
  2166  014B  00F1               	movwf	dit_dah@index
  2167  014C  3000               	movlw	0
  2168  014D  00F2               	movwf	dit_dah@index+1
  2169  014E  3182  22A3  3180   	fcall	_dit_dah
  2170  0151  2956               	goto	L6
  2171  0152                     l1348:	
  2172                           
  2173                           ;main.c: 216: else if (a=='E'){
  2174  0152  3045               	movlw	69
  2175  0153  0679               	xorwf	sendChar@a,w
  2176  0154  1D03               	btfss	3,2
  2177  0155  295D               	goto	l1352
  2178  0156                     L6:	
  2179                           
  2180                           ;main.c: 217: dit_dah(1);
  2181  0156  3001               	movlw	1
  2182  0157                     L1:	
  2183  0157  00F1               	movwf	dit_dah@index
  2184  0158  3000               	movlw	0
  2185  0159  00F2               	movwf	dit_dah@index+1
  2186  015A  3182  22A3  3180   	fcall	_dit_dah
  2187  015D                     l1352:	
  2188                           
  2189                           ;main.c: 218: }
  2190                           ;main.c: 222: for(i = 0; i < delay; ++i){
  2191  015D  01F7               	clrf	sendChar@i
  2192  015E  01F8               	clrf	sendChar@i+1
  2193  015F                     l287:	
  2194  015F  0878               	movf	sendChar@i+1,w
  2195  0160  3A80               	xorlw	128
  2196  0161  00F6               	movwf	??_sendChar
  2197  0162  0020               	movlb	0	; select bank0
  2198  0163  0862               	movf	_delay+1,w
  2199  0164  3A80               	xorlw	128
  2200  0165  0276               	subwf	??_sendChar,w
  2201  0166  1D03               	skipz
  2202  0167  296A               	goto	u965
  2203  0168  0861               	movf	_delay,w
  2204  0169  0277               	subwf	sendChar@i,w
  2205  016A                     u965:	
  2206  016A  1803               	btfsc	3,0
  2207  016B  2972               	goto	l1356
  2208                           
  2209                           ;main.c: 223: __nop();
  2210  016C  0000               	nop
  2211  016D  3001               	movlw	1
  2212  016E  07F7               	addwf	sendChar@i,f
  2213  016F  3000               	movlw	0
  2214  0170  3DF8               	addwfc	sendChar@i+1,f
  2215  0171  295F               	goto	l287
  2216  0172                     l1356:	
  2217                           
  2218                           ;main.c: 224: }
  2219                           ;main.c: 225: for(i = 0; i < delay; ++i){
  2220  0172  01F7               	clrf	sendChar@i
  2221  0173  01F8               	clrf	sendChar@i+1
  2222  0174                     l290:	
  2223  0174  0878               	movf	sendChar@i+1,w
  2224  0175  3A80               	xorlw	128
  2225  0176  00F6               	movwf	??_sendChar
  2226  0177  0020               	movlb	0	; select bank0
  2227  0178  0862               	movf	_delay+1,w
  2228  0179  3A80               	xorlw	128
  2229  017A  0276               	subwf	??_sendChar,w
  2230  017B  1D03               	skipz
  2231  017C  297F               	goto	u975
  2232  017D  0861               	movf	_delay,w
  2233  017E  0277               	subwf	sendChar@i,w
  2234  017F                     u975:	
  2235  017F  1803               	btfsc	3,0
  2236  0180  0008               	return
  2237                           
  2238                           ;main.c: 226: __nop();
  2239  0181  0000               	nop
  2240  0182  3001               	movlw	1
  2241  0183  07F7               	addwf	sendChar@i,f
  2242  0184  3000               	movlw	0
  2243  0185  3DF8               	addwfc	sendChar@i+1,f
  2244  0186  2974               	goto	l290
  2245  0187                     __end_of_sendChar:	
  2246                           
  2247                           	psect	text3
  2248  02A3                     __ptext3:	
  2249 ;; *************** function _dit_dah *****************
  2250 ;; Defined at:
  2251 ;;		line 154 in file "main.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  index           2    1[COMMON] int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  i               2    4[COMMON] int 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2268 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2269 ;;Total ram usage:        5 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    4
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_sendChar
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           
  2280                           ;psect for function _dit_dah
  2281  02A3                     _dit_dah:	
  2282                           
  2283                           ;main.c: 157: int i;
  2284                           ;main.c: 158: LATC4=1;
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _dit_dah: [wreg+status,2+status,0]
  2288  02A3  0022               	movlb	2	; select bank2
  2289  02A4  160E               	bsf	14,4	;volatile
  2290                           
  2291                           ;main.c: 159: if (index==1)
  2292  02A5  0371               	decf	dit_dah@index,w
  2293  02A6  0472               	iorwf	dit_dah@index+1,w
  2294  02A7  1D03               	btfss	3,2
  2295  02A8  2AC1               	goto	l1168
  2296                           
  2297                           ;main.c: 160: {
  2298                           ;main.c: 161: for(i = 0; i < delay; ++i)
  2299  02A9  01F4               	clrf	dit_dah@i
  2300  02AA  01F5               	clrf	dit_dah@i+1
  2301  02AB                     l247:	
  2302  02AB  0875               	movf	dit_dah@i+1,w
  2303  02AC  3A80               	xorlw	128
  2304  02AD  00F3               	movwf	??_dit_dah
  2305  02AE  0020               	movlb	0	; select bank0
  2306  02AF  0862               	movf	_delay+1,w
  2307  02B0  3A80               	xorlw	128
  2308  02B1  0273               	subwf	??_dit_dah,w
  2309  02B2  1D03               	skipz
  2310  02B3  2AB6               	goto	u675
  2311  02B4  0861               	movf	_delay,w
  2312  02B5  0274               	subwf	dit_dah@i,w
  2313  02B6                     u675:	
  2314  02B6  1803               	btfsc	3,0
  2315  02B7  2AC1               	goto	l1168
  2316                           
  2317                           ;main.c: 162: {
  2318                           ;main.c: 163: __nop();
  2319  02B8  0000               	nop
  2320                           
  2321                           ;main.c: 164: LATC4=~LATC4;
  2322  02B9  3010               	movlw	16
  2323  02BA  0022               	movlb	2	; select bank2
  2324  02BB  068E               	xorwf	14,f
  2325  02BC  3001               	movlw	1
  2326  02BD  07F4               	addwf	dit_dah@i,f
  2327  02BE  3000               	movlw	0
  2328  02BF  3DF5               	addwfc	dit_dah@i+1,f
  2329  02C0  2AAB               	goto	l247
  2330  02C1                     l1168:	
  2331                           
  2332                           ;main.c: 165: }
  2333                           ;main.c: 166: }
  2334                           ;main.c: 167: if(index==3)
  2335  02C1  3003               	movlw	3
  2336  02C2  0671               	xorwf	dit_dah@index,w
  2337  02C3  0472               	iorwf	dit_dah@index+1,w
  2338  02C4  1D03               	btfss	3,2
  2339  02C5  2B0E               	goto	l250
  2340                           
  2341                           ;main.c: 168: {
  2342                           ;main.c: 169: for(i = 0; i < delay; ++i)
  2343  02C6  01F4               	clrf	dit_dah@i
  2344  02C7  01F5               	clrf	dit_dah@i+1
  2345  02C8                     l251:	
  2346  02C8  0875               	movf	dit_dah@i+1,w
  2347  02C9  3A80               	xorlw	128
  2348  02CA  00F3               	movwf	??_dit_dah
  2349  02CB  0020               	movlb	0	; select bank0
  2350  02CC  0862               	movf	_delay+1,w
  2351  02CD  3A80               	xorlw	128
  2352  02CE  0273               	subwf	??_dit_dah,w
  2353  02CF  1D03               	skipz
  2354  02D0  2AD3               	goto	u695
  2355  02D1  0861               	movf	_delay,w
  2356  02D2  0274               	subwf	dit_dah@i,w
  2357  02D3                     u695:	
  2358  02D3  1803               	btfsc	3,0
  2359  02D4  2ADE               	goto	l1174
  2360                           
  2361                           ;main.c: 170: {
  2362                           ;main.c: 171: __nop();
  2363  02D5  0000               	nop
  2364                           
  2365                           ;main.c: 172: LATC4=~LATC4;
  2366  02D6  3010               	movlw	16
  2367  02D7  0022               	movlb	2	; select bank2
  2368  02D8  068E               	xorwf	14,f
  2369  02D9  3001               	movlw	1
  2370  02DA  07F4               	addwf	dit_dah@i,f
  2371  02DB  3000               	movlw	0
  2372  02DC  3DF5               	addwfc	dit_dah@i+1,f
  2373  02DD  2AC8               	goto	l251
  2374  02DE                     l1174:	
  2375                           
  2376                           ;main.c: 173: }
  2377                           ;main.c: 174: for(i = 0; i < delay; ++i)
  2378  02DE  01F4               	clrf	dit_dah@i
  2379  02DF  01F5               	clrf	dit_dah@i+1
  2380  02E0                     l254:	
  2381  02E0  0875               	movf	dit_dah@i+1,w
  2382  02E1  3A80               	xorlw	128
  2383  02E2  00F3               	movwf	??_dit_dah
  2384  02E3  0020               	movlb	0	; select bank0
  2385  02E4  0862               	movf	_delay+1,w
  2386  02E5  3A80               	xorlw	128
  2387  02E6  0273               	subwf	??_dit_dah,w
  2388  02E7  1D03               	skipz
  2389  02E8  2AEB               	goto	u705
  2390  02E9  0861               	movf	_delay,w
  2391  02EA  0274               	subwf	dit_dah@i,w
  2392  02EB                     u705:	
  2393  02EB  1803               	btfsc	3,0
  2394  02EC  2AF6               	goto	l1178
  2395                           
  2396                           ;main.c: 175: {
  2397                           ;main.c: 176: __nop();
  2398  02ED  0000               	nop
  2399                           
  2400                           ;main.c: 177: LATC4=~LATC4;
  2401  02EE  3010               	movlw	16
  2402  02EF  0022               	movlb	2	; select bank2
  2403  02F0  068E               	xorwf	14,f
  2404  02F1  3001               	movlw	1
  2405  02F2  07F4               	addwf	dit_dah@i,f
  2406  02F3  3000               	movlw	0
  2407  02F4  3DF5               	addwfc	dit_dah@i+1,f
  2408  02F5  2AE0               	goto	l254
  2409  02F6                     l1178:	
  2410                           
  2411                           ;main.c: 178: }
  2412                           ;main.c: 179: for(i = 0; i < delay; ++i)
  2413  02F6  01F4               	clrf	dit_dah@i
  2414  02F7  01F5               	clrf	dit_dah@i+1
  2415  02F8                     l257:	
  2416  02F8  0875               	movf	dit_dah@i+1,w
  2417  02F9  3A80               	xorlw	128
  2418  02FA  00F3               	movwf	??_dit_dah
  2419  02FB  0020               	movlb	0	; select bank0
  2420  02FC  0862               	movf	_delay+1,w
  2421  02FD  3A80               	xorlw	128
  2422  02FE  0273               	subwf	??_dit_dah,w
  2423  02FF  1D03               	skipz
  2424  0300  2B03               	goto	u715
  2425  0301  0861               	movf	_delay,w
  2426  0302  0274               	subwf	dit_dah@i,w
  2427  0303                     u715:	
  2428  0303  1803               	btfsc	3,0
  2429  0304  2B0E               	goto	l250
  2430                           
  2431                           ;main.c: 180: {
  2432                           ;main.c: 181: __nop();
  2433  0305  0000               	nop
  2434                           
  2435                           ;main.c: 182: LATC4=~LATC4;
  2436  0306  3010               	movlw	16
  2437  0307  0022               	movlb	2	; select bank2
  2438  0308  068E               	xorwf	14,f
  2439  0309  3001               	movlw	1
  2440  030A  07F4               	addwf	dit_dah@i,f
  2441  030B  3000               	movlw	0
  2442  030C  3DF5               	addwfc	dit_dah@i+1,f
  2443  030D  2AF8               	goto	l257
  2444  030E                     l250:	
  2445                           
  2446                           ;main.c: 183: }
  2447                           ;main.c: 184: }
  2448                           ;main.c: 185: LATC4=0;
  2449  030E  0022               	movlb	2	; select bank2
  2450  030F  120E               	bcf	14,4	;volatile
  2451                           
  2452                           ;main.c: 186: for(i = 0; i < delay; ++i)
  2453  0310  01F4               	clrf	dit_dah@i
  2454  0311  01F5               	clrf	dit_dah@i+1
  2455  0312                     l260:	
  2456  0312  0875               	movf	dit_dah@i+1,w
  2457  0313  3A80               	xorlw	128
  2458  0314  00F3               	movwf	??_dit_dah
  2459  0315  0020               	movlb	0	; select bank0
  2460  0316  0862               	movf	_delay+1,w
  2461  0317  3A80               	xorlw	128
  2462  0318  0273               	subwf	??_dit_dah,w
  2463  0319  1D03               	skipz
  2464  031A  2B1D               	goto	u725
  2465  031B  0861               	movf	_delay,w
  2466  031C  0274               	subwf	dit_dah@i,w
  2467  031D                     u725:	
  2468  031D  1803               	btfsc	3,0
  2469  031E  0008               	return
  2470                           
  2471                           ;main.c: 187: {
  2472                           ;main.c: 188: __nop();
  2473  031F  0000               	nop
  2474  0320  3001               	movlw	1
  2475  0321  07F4               	addwf	dit_dah@i,f
  2476  0322  3000               	movlw	0
  2477  0323  3DF5               	addwfc	dit_dah@i+1,f
  2478  0324  2B12               	goto	l260
  2479  0325                     __end_of_dit_dah:	
  2480                           
  2481                           	psect	text4
  2482  0442                     __ptext4:	
  2483 ;; *************** function _printf *****************
  2484 ;; Defined at:
  2485 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  2488 ;;		 -> STR_5(7), 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  pb              3   19[BANK0 ] struct __prbuf
  2491 ;;  ap              1   18[BANK0 ] PTR void [1]
  2492 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2   15[BANK0 ] int 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2503 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;Total ram usage:        7 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    6
  2509 ;; This function calls:
  2510 ;;		__doprnt
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _printf
  2518  0442                     _printf:	
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2522  0442  0020               	movlb	0	; select bank0
  2523  0443  01B3               	clrf	printf@pb
  2524  0444  30FD               	movlw	low _putch
  2525  0445  00B4               	movwf	low ((printf@pb| 0+1))
  2526  0446  3004               	movlw	high _putch
  2527  0447  00B5               	movwf	(low ((printf@pb| 0+1))+1)
  2528  0448  3031               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2529  0449  00B1               	movwf	??_printf
  2530  044A  0831               	movf	??_printf,w
  2531  044B  00B2               	movwf	printf@ap
  2532                           
  2533                           ;	Return value of _printf is never used
  2534  044C  0830               	movf	printf@f+1,w
  2535  044D  00A3               	movwf	__doprnt@f+1
  2536  044E  082F               	movf	printf@f,w
  2537  044F  00A2               	movwf	__doprnt@f
  2538  0450  3032               	movlw	(low (printf@ap| 0))& (0+255)
  2539  0451  00B1               	movwf	??_printf
  2540  0452  0831               	movf	??_printf,w
  2541  0453  00A4               	movwf	__doprnt@ap
  2542  0454  3033               	movlw	(low (printf@pb| 0))& (0+255)
  2543  0455  3181  2187         	fcall	__doprnt
  2544  0457  0008               	return
  2545  0458                     __end_of_printf:	
  2546                           
  2547                           	psect	text5
  2548  0187                     __ptext5:	
  2549 ;; *************** function __doprnt *****************
  2550 ;; Defined at:
  2551 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  pb              1    wreg     PTR struct __prbuf
  2554 ;;		 -> sprintf@pb(3), printf@pb(3), 
  2555 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  2556 ;;		 -> STR_6(6), STR_5(7), 
  2557 ;;  ap              1    4[BANK0 ] PTR PTR void 
  2558 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  pb              1   14[BANK0 ] PTR struct __prbuf
  2561 ;;		 -> sprintf@pb(3), printf@pb(3), 
  2562 ;;  tmpval          4    0        struct .
  2563 ;;  val             2   11[BANK0 ] unsigned int 
  2564 ;;  cp              2    0        PTR const unsigned char 
  2565 ;;  len             2    0        unsigned int 
  2566 ;;  c               1   13[BANK0 ] char 
  2567 ;;  prec            1   10[BANK0 ] char 
  2568 ;;  flag            1    9[BANK0 ] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2    2[BANK0 ] int 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2578 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;Total ram usage:       13 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    5
  2585 ;; This function calls:
  2586 ;;		Absolute function
  2587 ;;		___lwdiv
  2588 ;;		___lwmod
  2589 ;;		_putch
  2590 ;; This function is called by:
  2591 ;;		_printf
  2592 ;;		_sprintf
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function __doprnt
  2598  0187                     __doprnt:	
  2599                           
  2600                           ;incstack = 0
  2601                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2602                           ;__doprnt@pb stored from wreg
  2603  0187  0020               	movlb	0	; select bank0
  2604  0188  00AE               	movwf	__doprnt@pb
  2605  0189                     l1248:	
  2606                           ;doprnt.c: 499: signed char c;
  2607                           ;doprnt.c: 506: signed char prec;
  2608                           ;doprnt.c: 508: unsigned char flag;
  2609                           ;doprnt.c: 523: union {
  2610                           ;doprnt.c: 524: unsigned long vd;
  2611                           ;doprnt.c: 525: double integ;
  2612                           ;doprnt.c: 526: } tmpval;
  2613                           ;doprnt.c: 528: unsigned int val;
  2614                           ;doprnt.c: 529: unsigned len;
  2615                           ;doprnt.c: 530: const char * cp;
  2616                           ;doprnt.c: 536: while(c = *f++) {
  2617                           
  2618  0189  0020               	movlb	0	; select bank0
  2619  018A  0823               	movf	__doprnt@f+1,w
  2620  018B  00A6               	movwf	??__doprnt+1
  2621  018C  0822               	movf	__doprnt@f,w
  2622  018D  00A5               	movwf	??__doprnt
  2623  018E  0AA2               	incf	__doprnt@f,f
  2624  018F  1903               	skipnz
  2625  0190  0AA3               	incf	__doprnt@f+1,f
  2626  0191  0825               	movf	??__doprnt,w
  2627  0192  0084               	movwf	4
  2628  0193  0826               	movf	??__doprnt+1,w
  2629  0194  0085               	movwf	5
  2630  0195  0800               	movf	0,w	;code access
  2631  0196  00A7               	movwf	??__doprnt+2
  2632  0197  0827               	movf	??__doprnt+2,w
  2633  0198  00AD               	movwf	__doprnt@c
  2634  0199  082D               	movf	__doprnt@c,w
  2635  019A  1903               	btfsc	3,2
  2636  019B  2AA0               	goto	l1250
  2637                           
  2638                           ;doprnt.c: 538: if(c != '%')
  2639  019C  3025               	movlw	37
  2640  019D  062D               	xorwf	__doprnt@c,w
  2641  019E  1903               	btfsc	3,2
  2642  019F  29C7               	goto	l1198
  2643                           
  2644                           ;doprnt.c: 540: {
  2645                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  2646  01A0  0A2E               	incf	__doprnt@pb,w
  2647  01A1  0086               	movwf	6
  2648  01A2  0187               	clrf	7
  2649  01A3  0016               	moviw fsr1++
  2650  01A4  0401               	iorwf	1,w
  2651  01A5  1903               	btfsc	3,2
  2652  01A6  29B4               	goto	l1194
  2653  01A7  082D               	movf	__doprnt@c,w
  2654  01A8  00A5               	movwf	??__doprnt
  2655  01A9  0825               	movf	??__doprnt,w
  2656  01AA  00F1               	movwf	putch@c
  2657  01AB  0A2E               	incf	__doprnt@pb,w
  2658  01AC  0086               	movwf	6
  2659  01AD  0187               	clrf	7
  2660  01AE  3F41               	moviw [1]fsr1
  2661  01AF  008A               	movwf	10
  2662  01B0  3F40               	moviw [0]fsr1
  2663  01B1  000A               	callw
  2664  01B2  3181               	pagesel	$
  2665  01B3  2989               	goto	l1248
  2666  01B4                     l1194:	
  2667  01B4  0020               	movlb	0	; select bank0
  2668  01B5  082D               	movf	__doprnt@c,w
  2669  01B6  00A5               	movwf	??__doprnt
  2670  01B7  082E               	movf	__doprnt@pb,w
  2671  01B8  0086               	movwf	6
  2672  01B9  0187               	clrf	7
  2673  01BA  0801               	movf	1,w
  2674  01BB  0086               	movwf	6
  2675  01BC  0187               	clrf	7
  2676  01BD  0825               	movf	??__doprnt,w
  2677  01BE  0081               	movwf	1
  2678  01BF  3001               	movlw	1
  2679  01C0  00A5               	movwf	??__doprnt
  2680  01C1  082E               	movf	__doprnt@pb,w
  2681  01C2  0086               	movwf	6
  2682  01C3  0187               	clrf	7
  2683  01C4  0825               	movf	??__doprnt,w
  2684  01C5  0781               	addwf	1,f
  2685                           
  2686                           ;doprnt.c: 542: continue;
  2687  01C6  2989               	goto	l1248
  2688  01C7                     l1198:	
  2689                           
  2690                           ;doprnt.c: 543: }
  2691                           ;doprnt.c: 548: flag = 0;
  2692  01C7  01A9               	clrf	__doprnt@flag
  2693                           
  2694                           ;doprnt.c: 822: }
  2695                           
  2696                           ;doprnt.c: 813: continue;
  2697                           
  2698                           ;doprnt.c: 802: default:
  2699                           
  2700                           ;doprnt.c: 698: case 'i':
  2701                           ;doprnt.c: 699: break;
  2702                           
  2703                           ;doprnt.c: 697: case 'd':
  2704                           
  2705                           ;doprnt.c: 638: goto alldone;
  2706                           
  2707                           ;doprnt.c: 637: case 0:
  2708                           
  2709                           ;doprnt.c: 635: switch(c = *f++) {
  2710  01C8  0823               	movf	__doprnt@f+1,w
  2711  01C9  00A6               	movwf	??__doprnt+1
  2712  01CA  0822               	movf	__doprnt@f,w
  2713  01CB  00A5               	movwf	??__doprnt
  2714  01CC  0AA2               	incf	__doprnt@f,f
  2715  01CD  1903               	skipnz
  2716  01CE  0AA3               	incf	__doprnt@f+1,f
  2717  01CF  0825               	movf	??__doprnt,w
  2718  01D0  0084               	movwf	4
  2719  01D1  0826               	movf	??__doprnt+1,w
  2720  01D2  0085               	movwf	5
  2721  01D3  0800               	movf	0,w	;code access
  2722  01D4  00AD               	movwf	__doprnt@c
  2723                           
  2724                           ; Switch size 1, requested type "space"
  2725                           ; Number of cases is 3, Range of values is 0 to 105
  2726                           ; switch strategies available:
  2727                           ; Name         Instructions Cycles
  2728                           ; simple_byte           10     6 (average)
  2729                           ; direct_byte          218     6 (fixed)
  2730                           ; jumptable            260     6 (fixed)
  2731                           ;	Chosen strategy is simple_byte
  2732  01D5  3A00               	xorlw	0	; case 0
  2733  01D6  1903               	skipnz
  2734  01D7  2AA0               	goto	l1250
  2735  01D8  3A64               	xorlw	100	; case 100
  2736  01D9  1903               	skipnz
  2737  01DA  29DF               	goto	l1204
  2738  01DB  3A0D               	xorlw	13	; case 105
  2739  01DC  1903               	skipnz
  2740  01DD  29DF               	goto	l1204
  2741  01DE  2989               	goto	l1248
  2742  01DF                     l1204:	
  2743                           
  2744                           ;doprnt.c: 1253: {
  2745                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2746  01DF  0824               	movf	__doprnt@ap,w
  2747  01E0  0086               	movwf	6
  2748  01E1  0187               	clrf	7
  2749  01E2  0801               	movf	1,w
  2750  01E3  0084               	movwf	4
  2751  01E4  0185               	clrf	5
  2752  01E5  3002               	movlw	2
  2753  01E6  0781               	addwf	1,f
  2754  01E7  3F00               	moviw [0]fsr0
  2755  01E8  00AB               	movwf	__doprnt@val
  2756  01E9  3F01               	moviw [1]fsr0
  2757  01EA  00AC               	movwf	__doprnt@val+1
  2758                           
  2759                           ;doprnt.c: 1261: if((int)val < 0) {
  2760  01EB  1FAC               	btfss	__doprnt@val+1,7
  2761  01EC  29F6               	goto	l1212
  2762                           
  2763                           ;doprnt.c: 1262: flag |= 0x03;
  2764  01ED  3003               	movlw	3
  2765  01EE  00A5               	movwf	??__doprnt
  2766  01EF  0825               	movf	??__doprnt,w
  2767  01F0  04A9               	iorwf	__doprnt@flag,f
  2768                           
  2769                           ;doprnt.c: 1263: val = -val;
  2770  01F1  09AB               	comf	__doprnt@val,f
  2771  01F2  09AC               	comf	__doprnt@val+1,f
  2772  01F3  0AAB               	incf	__doprnt@val,f
  2773  01F4  1903               	skipnz
  2774  01F5  0AAC               	incf	__doprnt@val+1,f
  2775  01F6                     l1212:	
  2776                           
  2777                           ;doprnt.c: 1264: }
  2778                           ;doprnt.c: 1266: }
  2779                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2780  01F6  01AD               	clrf	__doprnt@c
  2781  01F7  0AAD               	incf	__doprnt@c,f
  2782  01F8  3005               	movlw	5
  2783  01F9  062D               	xorwf	__doprnt@c,w
  2784  01FA  1903               	btfsc	3,2
  2785  01FB  2A1B               	goto	l1224
  2786  01FC                     l1218:	
  2787                           
  2788                           ;doprnt.c: 1306: if(val < dpowers[c])
  2789  01FC  082D               	movf	__doprnt@c,w
  2790  01FD  00A5               	movwf	??__doprnt
  2791  01FE  01A6               	clrf	??__doprnt+1
  2792  01FF  35A5               	lslf	??__doprnt,f
  2793  0200  0DA6               	rlf	??__doprnt+1,f
  2794  0201  30BA               	movlw	low (_dpowers| (0+32768))
  2795  0202  0725               	addwf	??__doprnt,w
  2796  0203  0084               	movwf	4
  2797  0204  3084               	movlw	high (_dpowers| (0+32768))
  2798  0205  3D26               	addwfc	??__doprnt+1,w
  2799  0206  0085               	movwf	5
  2800  0207  3F00               	moviw [0]fsr0
  2801  0208  00A7               	movwf	??__doprnt+2
  2802  0209  3F01               	moviw [1]fsr0
  2803  020A  00A8               	movwf	??__doprnt+3
  2804  020B  0828               	movf	??__doprnt+3,w
  2805  020C  022C               	subwf	__doprnt@val+1,w
  2806  020D  1D03               	skipz
  2807  020E  2A11               	goto	u775
  2808  020F  0827               	movf	??__doprnt+2,w
  2809  0210  022B               	subwf	__doprnt@val,w
  2810  0211                     u775:	
  2811  0211  1C03               	btfss	3,0
  2812  0212  2A1B               	goto	l1224
  2813                           
  2814                           ;doprnt.c: 1307: break;
  2815  0213  3001               	movlw	1
  2816  0214  00A5               	movwf	??__doprnt
  2817  0215  0825               	movf	??__doprnt,w
  2818  0216  07AD               	addwf	__doprnt@c,f
  2819  0217  3005               	movlw	5
  2820  0218  062D               	xorwf	__doprnt@c,w
  2821  0219  1D03               	btfss	3,2
  2822  021A  29FC               	goto	l1218
  2823  021B                     l1224:	
  2824                           
  2825                           ;doprnt.c: 1422: {
  2826                           ;doprnt.c: 1438: if(flag & 0x03)
  2827  021B  0829               	movf	__doprnt@flag,w
  2828  021C  3903               	andlw	3
  2829  021D  1903               	btfsc	3,2
  2830  021E  2A45               	goto	l1234
  2831                           
  2832                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2833  021F  0A2E               	incf	__doprnt@pb,w
  2834  0220  0086               	movwf	6
  2835  0221  0187               	clrf	7
  2836  0222  0016               	moviw fsr1++
  2837  0223  0401               	iorwf	1,w
  2838  0224  1903               	btfsc	3,2
  2839  0225  2A33               	goto	l1230
  2840  0226  302D               	movlw	45
  2841  0227  00A5               	movwf	??__doprnt
  2842  0228  0825               	movf	??__doprnt,w
  2843  0229  00F1               	movwf	putch@c
  2844  022A  0A2E               	incf	__doprnt@pb,w
  2845  022B  0086               	movwf	6
  2846  022C  0187               	clrf	7
  2847  022D  3F41               	moviw [1]fsr1
  2848  022E  008A               	movwf	10
  2849  022F  3F40               	moviw [0]fsr1
  2850  0230  000A               	callw
  2851  0231  3181               	pagesel	$
  2852  0232  2A45               	goto	l1234
  2853  0233                     l1230:	
  2854  0233  302D               	movlw	45
  2855  0234  0020               	movlb	0	; select bank0
  2856  0235  00A5               	movwf	??__doprnt
  2857  0236  082E               	movf	__doprnt@pb,w
  2858  0237  0086               	movwf	6
  2859  0238  0187               	clrf	7
  2860  0239  0801               	movf	1,w
  2861  023A  0086               	movwf	6
  2862  023B  0187               	clrf	7
  2863  023C  0825               	movf	??__doprnt,w
  2864  023D  0081               	movwf	1
  2865  023E  3001               	movlw	1
  2866  023F  00A5               	movwf	??__doprnt
  2867  0240  082E               	movf	__doprnt@pb,w
  2868  0241  0086               	movwf	6
  2869  0242  0187               	clrf	7
  2870  0243  0825               	movf	??__doprnt,w
  2871  0244  0781               	addwf	1,f
  2872  0245                     l1234:	
  2873                           
  2874                           ;doprnt.c: 1469: }
  2875                           ;doprnt.c: 1472: prec = c;
  2876  0245  0020               	movlb	0	; select bank0
  2877  0246  082D               	movf	__doprnt@c,w
  2878  0247  00A5               	movwf	??__doprnt
  2879  0248  0825               	movf	??__doprnt,w
  2880  0249  00AA               	movwf	__doprnt@prec
  2881  024A                     l1246:	
  2882                           ;doprnt.c: 1474: while(prec--) {
  2883                           
  2884  024A  30FF               	movlw	255
  2885  024B  0020               	movlb	0	; select bank0
  2886  024C  00A5               	movwf	??__doprnt
  2887  024D  0825               	movf	??__doprnt,w
  2888  024E  07AA               	addwf	__doprnt@prec,f
  2889  024F  0A2A               	incf	__doprnt@prec,w
  2890  0250  1903               	btfsc	3,2
  2891  0251  2989               	goto	l1248
  2892                           
  2893                           ;doprnt.c: 1478: {
  2894                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2895  0252  300A               	movlw	10
  2896  0253  00F9               	movwf	___lwmod@divisor
  2897  0254  3000               	movlw	0
  2898  0255  00FA               	movwf	___lwmod@divisor+1
  2899  0256  082A               	movf	__doprnt@prec,w
  2900  0257  00A5               	movwf	??__doprnt
  2901  0258  01A6               	clrf	??__doprnt+1
  2902  0259  35A5               	lslf	??__doprnt,f
  2903  025A  0DA6               	rlf	??__doprnt+1,f
  2904  025B  30BA               	movlw	low (_dpowers| (0+32768))
  2905  025C  0725               	addwf	??__doprnt,w
  2906  025D  0084               	movwf	4
  2907  025E  3084               	movlw	high (_dpowers| (0+32768))
  2908  025F  3D26               	addwfc	??__doprnt+1,w
  2909  0260  0085               	movwf	5
  2910  0261  3F00               	moviw [0]fsr0
  2911  0262  00F1               	movwf	___lwdiv@divisor
  2912  0263  3F01               	moviw [1]fsr0
  2913  0264  00F2               	movwf	___lwdiv@divisor+1
  2914  0265  082C               	movf	__doprnt@val+1,w
  2915  0266  00F4               	movwf	___lwdiv@dividend+1
  2916  0267  082B               	movf	__doprnt@val,w
  2917  0268  00F3               	movwf	___lwdiv@dividend
  2918  0269  3183  238F  3181   	fcall	___lwdiv
  2919  026C  0872               	movf	?___lwdiv+1,w
  2920  026D  00FC               	movwf	___lwmod@dividend+1
  2921  026E  0871               	movf	?___lwdiv,w
  2922  026F  00FB               	movwf	___lwmod@dividend
  2923  0270  3183  23C3  3181   	fcall	___lwmod
  2924  0273  0879               	movf	?___lwmod,w
  2925  0274  3E30               	addlw	48
  2926  0275  0020               	movlb	0	; select bank0
  2927  0276  00A7               	movwf	??__doprnt+2
  2928  0277  0827               	movf	??__doprnt+2,w
  2929  0278  00AD               	movwf	__doprnt@c
  2930                           
  2931                           ;doprnt.c: 1523: }
  2932                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  2933  0279  0A2E               	incf	__doprnt@pb,w
  2934  027A  0086               	movwf	6
  2935  027B  0187               	clrf	7
  2936  027C  0016               	moviw fsr1++
  2937  027D  0401               	iorwf	1,w
  2938  027E  1903               	btfsc	3,2
  2939  027F  2A8D               	goto	l1242
  2940  0280  082D               	movf	__doprnt@c,w
  2941  0281  00A5               	movwf	??__doprnt
  2942  0282  0825               	movf	??__doprnt,w
  2943  0283  00F1               	movwf	putch@c
  2944  0284  0A2E               	incf	__doprnt@pb,w
  2945  0285  0086               	movwf	6
  2946  0286  0187               	clrf	7
  2947  0287  3F41               	moviw [1]fsr1
  2948  0288  008A               	movwf	10
  2949  0289  3F40               	moviw [0]fsr1
  2950  028A  000A               	callw
  2951  028B  3181               	pagesel	$
  2952  028C  2A4A               	goto	l1246
  2953  028D                     l1242:	
  2954  028D  0020               	movlb	0	; select bank0
  2955  028E  082D               	movf	__doprnt@c,w
  2956  028F  00A5               	movwf	??__doprnt
  2957  0290  082E               	movf	__doprnt@pb,w
  2958  0291  0086               	movwf	6
  2959  0292  0187               	clrf	7
  2960  0293  0801               	movf	1,w
  2961  0294  0086               	movwf	6
  2962  0295  0187               	clrf	7
  2963  0296  0825               	movf	??__doprnt,w
  2964  0297  0081               	movwf	1
  2965  0298  3001               	movlw	1
  2966  0299  00A5               	movwf	??__doprnt
  2967  029A  082E               	movf	__doprnt@pb,w
  2968  029B  0086               	movwf	6
  2969  029C  0187               	clrf	7
  2970  029D  0825               	movf	??__doprnt,w
  2971  029E  0781               	addwf	1,f
  2972  029F  2A4A               	goto	l1246
  2973  02A0                     l1250:	
  2974                           ;doprnt.c: 1525: }
  2975                           ;doprnt.c: 1533: }
  2976                           ;doprnt.c: 1535: alldone:
  2977                           
  2978                           
  2979                           ;doprnt.c: 1540: return 0;
  2980  02A0  01A2               	clrf	?__doprnt
  2981  02A1  01A3               	clrf	?__doprnt+1
  2982  02A2  0008               	return
  2983  02A3                     __end_of__doprnt:	
  2984                           
  2985                           	psect	text6
  2986  04FD                     __ptext6:	
  2987 ;; *************** function _putch *****************
  2988 ;; Defined at:
  2989 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\putch.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  c               1    1[COMMON] unsigned char 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		None
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3003 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;Total ram usage:        1 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    4
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_printf
  3014 ;;		__doprnt
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _putch
  3020  04FD                     _putch:	
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _putch: []
  3024  04FD  0008               	return
  3025  04FE                     __end_of_putch:	
  3026                           
  3027                           	psect	text7
  3028  03C3                     __ptext7:	
  3029 ;; *************** function ___lwmod *****************
  3030 ;; Defined at:
  3031 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  divisor         2    9[COMMON] unsigned int 
  3034 ;;  dividend        2   11[COMMON] unsigned int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  counter         1    1[BANK0 ] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    9[COMMON] unsigned int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3050 ;;Total ram usage:        6 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    4
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		__doprnt
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function ___lwmod
  3062  03C3                     ___lwmod:	
  3063                           
  3064                           ;incstack = 0
  3065                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3066  03C3  0879               	movf	___lwmod@divisor,w
  3067  03C4  047A               	iorwf	___lwmod@divisor+1,w
  3068  03C5  1903               	btfsc	3,2
  3069  03C6  2BEB               	goto	l1122
  3070  03C7  0020               	movlb	0	; select bank0
  3071  03C8  01A1               	clrf	___lwmod@counter
  3072  03C9  0AA1               	incf	___lwmod@counter,f
  3073  03CA                     l1112:	
  3074  03CA  1BFA               	btfsc	___lwmod@divisor+1,7
  3075  03CB  2BD6               	goto	l1114
  3076  03CC  3001               	movlw	1
  3077  03CD                     u605:	
  3078  03CD  35F9               	lslf	___lwmod@divisor,f
  3079  03CE  0DFA               	rlf	___lwmod@divisor+1,f
  3080  03CF  0B89               	decfsz	9,f
  3081  03D0  2BCD               	goto	u605
  3082  03D1  3001               	movlw	1
  3083  03D2  00A0               	movwf	??___lwmod
  3084  03D3  0820               	movf	??___lwmod,w
  3085  03D4  07A1               	addwf	___lwmod@counter,f
  3086  03D5  2BCA               	goto	l1112
  3087  03D6                     l1114:	
  3088  03D6  087A               	movf	___lwmod@divisor+1,w
  3089  03D7  027C               	subwf	___lwmod@dividend+1,w
  3090  03D8  1D03               	skipz
  3091  03D9  2BDC               	goto	u625
  3092  03DA  0879               	movf	___lwmod@divisor,w
  3093  03DB  027B               	subwf	___lwmod@dividend,w
  3094  03DC                     u625:	
  3095  03DC  1C03               	skipc
  3096  03DD  2BE2               	goto	l1118
  3097  03DE  0879               	movf	___lwmod@divisor,w
  3098  03DF  02FB               	subwf	___lwmod@dividend,f
  3099  03E0  087A               	movf	___lwmod@divisor+1,w
  3100  03E1  3BFC               	subwfb	___lwmod@dividend+1,f
  3101  03E2                     l1118:	
  3102  03E2  3001               	movlw	1
  3103  03E3                     u635:	
  3104  03E3  36FA               	lsrf	___lwmod@divisor+1,f
  3105  03E4  0CF9               	rrf	___lwmod@divisor,f
  3106  03E5  0B89               	decfsz	9,f
  3107  03E6  2BE3               	goto	u635
  3108  03E7  3001               	movlw	1
  3109  03E8  02A1               	subwf	___lwmod@counter,f
  3110  03E9  1D03               	btfss	3,2
  3111  03EA  2BD6               	goto	l1114
  3112  03EB                     l1122:	
  3113  03EB  087C               	movf	___lwmod@dividend+1,w
  3114  03EC  00FA               	movwf	?___lwmod+1
  3115  03ED  087B               	movf	___lwmod@dividend,w
  3116  03EE  00F9               	movwf	?___lwmod
  3117  03EF  0008               	return
  3118  03F0                     __end_of___lwmod:	
  3119                           
  3120                           	psect	text8
  3121  038F                     __ptext8:	
  3122 ;; *************** function ___lwdiv *****************
  3123 ;; Defined at:
  3124 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  divisor         2    1[COMMON] unsigned int 
  3127 ;;  dividend        2    3[COMMON] unsigned int 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  quotient        2    6[COMMON] unsigned int 
  3130 ;;  counter         1    8[COMMON] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2    1[COMMON] unsigned int 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;Total ram usage:        8 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    4
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		__doprnt
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function ___lwdiv
  3156  038F                     ___lwdiv:	
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3160  038F  01F6               	clrf	___lwdiv@quotient
  3161  0390  01F7               	clrf	___lwdiv@quotient+1
  3162  0391  0871               	movf	___lwdiv@divisor,w
  3163  0392  0472               	iorwf	___lwdiv@divisor+1,w
  3164  0393  1903               	btfsc	3,2
  3165  0394  2BBE               	goto	l1100
  3166  0395  01F8               	clrf	___lwdiv@counter
  3167  0396  0AF8               	incf	___lwdiv@counter,f
  3168  0397                     l1088:	
  3169  0397  1BF2               	btfsc	___lwdiv@divisor+1,7
  3170  0398  2BA3               	goto	l1090
  3171  0399  3001               	movlw	1
  3172  039A                     u535:	
  3173  039A  35F1               	lslf	___lwdiv@divisor,f
  3174  039B  0DF2               	rlf	___lwdiv@divisor+1,f
  3175  039C  0B89               	decfsz	9,f
  3176  039D  2B9A               	goto	u535
  3177  039E  3001               	movlw	1
  3178  039F  00F5               	movwf	??___lwdiv
  3179  03A0  0875               	movf	??___lwdiv,w
  3180  03A1  07F8               	addwf	___lwdiv@counter,f
  3181  03A2  2B97               	goto	l1088
  3182  03A3                     l1090:	
  3183  03A3  3001               	movlw	1
  3184  03A4                     u555:	
  3185  03A4  35F6               	lslf	___lwdiv@quotient,f
  3186  03A5  0DF7               	rlf	___lwdiv@quotient+1,f
  3187  03A6  0B89               	decfsz	9,f
  3188  03A7  2BA4               	goto	u555
  3189  03A8  0872               	movf	___lwdiv@divisor+1,w
  3190  03A9  0274               	subwf	___lwdiv@dividend+1,w
  3191  03AA  1D03               	skipz
  3192  03AB  2BAE               	goto	u565
  3193  03AC  0871               	movf	___lwdiv@divisor,w
  3194  03AD  0273               	subwf	___lwdiv@dividend,w
  3195  03AE                     u565:	
  3196  03AE  1C03               	skipc
  3197  03AF  2BB5               	goto	l1096
  3198  03B0  0871               	movf	___lwdiv@divisor,w
  3199  03B1  02F3               	subwf	___lwdiv@dividend,f
  3200  03B2  0872               	movf	___lwdiv@divisor+1,w
  3201  03B3  3BF4               	subwfb	___lwdiv@dividend+1,f
  3202  03B4  1476               	bsf	___lwdiv@quotient,0
  3203  03B5                     l1096:	
  3204  03B5  3001               	movlw	1
  3205  03B6                     u575:	
  3206  03B6  36F2               	lsrf	___lwdiv@divisor+1,f
  3207  03B7  0CF1               	rrf	___lwdiv@divisor,f
  3208  03B8  0B89               	decfsz	9,f
  3209  03B9  2BB6               	goto	u575
  3210  03BA  3001               	movlw	1
  3211  03BB  02F8               	subwf	___lwdiv@counter,f
  3212  03BC  1D03               	btfss	3,2
  3213  03BD  2BA3               	goto	l1090
  3214  03BE                     l1100:	
  3215  03BE  0877               	movf	___lwdiv@quotient+1,w
  3216  03BF  00F2               	movwf	?___lwdiv+1
  3217  03C0  0876               	movf	___lwdiv@quotient,w
  3218  03C1  00F1               	movwf	?___lwdiv
  3219  03C2  0008               	return
  3220  03C3                     __end_of___lwdiv:	
  3221                           
  3222                           	psect	text9
  3223  048D                     __ptext9:	
  3224 ;; *************** function _SYSTEM_Initialize *****************
  3225 ;; Defined at:
  3226 ;;		line 72 in file "mcc_generated_files/mcc.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, pclath, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;Total ram usage:        0 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    6
  3247 ;; This function calls:
  3248 ;;		_EXT_INT_Initialize
  3249 ;;		_OSCILLATOR_Initialize
  3250 ;;		_PIN_MANAGER_Initialize
  3251 ;;		_WDT_Initialize
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _SYSTEM_Initialize
  3259  048D                     _SYSTEM_Initialize:	
  3260                           
  3261                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  3262                           
  3263                           ;incstack = 0
  3264                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3265  048D  3184  240D  3184   	fcall	_PIN_MANAGER_Initialize
  3266                           
  3267                           ;mcc.c: 76: OSCILLATOR_Initialize();
  3268  0490  3184  24E6  3184   	fcall	_OSCILLATOR_Initialize
  3269                           
  3270                           ;mcc.c: 77: WDT_Initialize();
  3271  0493  3184  24F2  3184   	fcall	_WDT_Initialize
  3272                           
  3273                           ;mcc.c: 78: EXT_INT_Initialize();
  3274  0496  3184  24A4         	fcall	_EXT_INT_Initialize
  3275  0498  0008               	return
  3276  0499                     __end_of_SYSTEM_Initialize:	
  3277                           
  3278                           	psect	text10
  3279  04F2                     __ptext10:	
  3280 ;; *************** function _WDT_Initialize *****************
  3281 ;; Defined at:
  3282 ;;		line 92 in file "mcc_generated_files/mcc.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;Total ram usage:        0 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    4
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_SYSTEM_Initialize
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _WDT_Initialize
  3312  04F2                     _WDT_Initialize:	
  3313                           
  3314                           ;mcc.c: 95: WDTCON = 0x16;
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _WDT_Initialize: [wreg]
  3318  04F2  3016               	movlw	22
  3319  04F3  0021               	movlb	1	; select bank1
  3320  04F4  0097               	movwf	23	;volatile
  3321  04F5  0008               	return
  3322  04F6                     __end_of_WDT_Initialize:	
  3323                           
  3324                           	psect	text11
  3325  040D                     __ptext11:	
  3326 ;; *************** function _PIN_MANAGER_Initialize *****************
  3327 ;; Defined at:
  3328 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    4
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_SYSTEM_Initialize
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _PIN_MANAGER_Initialize
  3358  040D                     _PIN_MANAGER_Initialize:	
  3359                           
  3360                           ;pin_manager.c: 57: LATA = 0x00;
  3361                           
  3362                           ;incstack = 0
  3363                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3364  040D  0022               	movlb	2	; select bank2
  3365  040E  018C               	clrf	12	;volatile
  3366                           
  3367                           ;pin_manager.c: 58: LATB = 0x00;
  3368  040F  018D               	clrf	13	;volatile
  3369                           
  3370                           ;pin_manager.c: 59: LATC = 0x00;
  3371  0410  018E               	clrf	14	;volatile
  3372                           
  3373                           ;pin_manager.c: 64: TRISA = 0x30;
  3374  0411  3030               	movlw	48
  3375  0412  0021               	movlb	1	; select bank1
  3376  0413  008C               	movwf	12	;volatile
  3377                           
  3378                           ;pin_manager.c: 65: TRISB = 0xF0;
  3379  0414  30F0               	movlw	240
  3380  0415  008D               	movwf	13	;volatile
  3381                           
  3382                           ;pin_manager.c: 66: TRISC = 0xE7;
  3383  0416  30E7               	movlw	231
  3384  0417  008E               	movwf	14	;volatile
  3385                           
  3386                           ;pin_manager.c: 71: ANSELC = 0xCD;
  3387  0418  30CD               	movlw	205
  3388  0419  0023               	movlb	3	; select bank3
  3389  041A  008E               	movwf	14	;volatile
  3390                           
  3391                           ;pin_manager.c: 72: ANSELB = 0x00;
  3392  041B  018D               	clrf	13	;volatile
  3393                           
  3394                           ;pin_manager.c: 73: ANSELA = 0x10;
  3395  041C  3010               	movlw	16
  3396  041D  008C               	movwf	12	;volatile
  3397                           
  3398                           ;pin_manager.c: 78: WPUB = 0xF0;
  3399  041E  30F0               	movlw	240
  3400  041F  0024               	movlb	4	; select bank4
  3401  0420  008D               	movwf	13	;volatile
  3402                           
  3403                           ;pin_manager.c: 79: WPUA = 0x38;
  3404  0421  3038               	movlw	56
  3405  0422  008C               	movwf	12	;volatile
  3406                           
  3407                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  3408  0423  0021               	movlb	1	; select bank1
  3409  0424  1395               	bcf	21,7	;volatile
  3410                           
  3411                           ;pin_manager.c: 86: APFCON = 0x00;
  3412  0425  0022               	movlb	2	; select bank2
  3413  0426  019D               	clrf	29	;volatile
  3414  0427  0008               	return
  3415  0428                     __end_of_PIN_MANAGER_Initialize:	
  3416                           
  3417                           	psect	text12
  3418  04E6                     __ptext12:	
  3419 ;; *************** function _OSCILLATOR_Initialize *****************
  3420 ;; Defined at:
  3421 ;;		line 82 in file "mcc_generated_files/mcc.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		status,2
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    4
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_SYSTEM_Initialize
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _OSCILLATOR_Initialize
  3451  04E6                     _OSCILLATOR_Initialize:	
  3452                           
  3453                           ;mcc.c: 85: OSCCON = 0x00;
  3454                           
  3455                           ;incstack = 0
  3456                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  3457  04E6  0021               	movlb	1	; select bank1
  3458  04E7  0199               	clrf	25	;volatile
  3459                           
  3460                           ;mcc.c: 87: OSCTUNE = 0x00;
  3461  04E8  0198               	clrf	24	;volatile
  3462                           
  3463                           ;mcc.c: 89: ACTCON = 0x00;
  3464  04E9  0027               	movlb	7	; select bank7
  3465  04EA  019B               	clrf	27	;volatile
  3466  04EB  0008               	return
  3467  04EC                     __end_of_OSCILLATOR_Initialize:	
  3468                           
  3469                           	psect	text13
  3470  04A4                     __ptext13:	
  3471 ;; *************** function _EXT_INT_Initialize *****************
  3472 ;; Defined at:
  3473 ;;		line 90 in file "mcc_generated_files/ext_int.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    5
  3494 ;; This function calls:
  3495 ;;		_INT_SetInterruptHandler
  3496 ;; This function is called by:
  3497 ;;		_SYSTEM_Initialize
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _EXT_INT_Initialize
  3503  04A4                     _EXT_INT_Initialize:	
  3504                           
  3505                           ;ext_int.c: 99: (INTCONbits.INTF = 0);
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3509  04A4  108B               	bcf	11,1	;volatile
  3510                           
  3511                           ;ext_int.c: 100: (OPTION_REGbits.INTEDG = 1);
  3512  04A5  0021               	movlb	1	; select bank1
  3513  04A6  1715               	bsf	21,6	;volatile
  3514                           
  3515                           ;ext_int.c: 102: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  3516  04A7  30FE               	movlw	low _INT_DefaultInterruptHandler
  3517  04A8  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler
  3518  04A9  3004               	movlw	high _INT_DefaultInterruptHandler
  3519  04AA  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  3520  04AB  3184  24EC         	fcall	_INT_SetInterruptHandler
  3521                           
  3522                           ;ext_int.c: 103: (INTCONbits.INTE = 1);
  3523  04AD  160B               	bsf	11,4	;volatile
  3524  04AE  0008               	return
  3525  04AF                     __end_of_EXT_INT_Initialize:	
  3526                           
  3527                           	psect	text14
  3528  04EC                     __ptext14:	
  3529 ;; *************** function _INT_SetInterruptHandler *****************
  3530 ;; Defined at:
  3531 ;;		line 70 in file "mcc_generated_files/ext_int.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  3534 ;;		 -> INT_DefaultInterruptHandler(1), 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    4
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_EXT_INT_Initialize
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           
  3561                           ;psect for function _INT_SetInterruptHandler
  3562  04EC                     _INT_SetInterruptHandler:	
  3563                           
  3564                           ;ext_int.c: 71: INT_InterruptHandler = InterruptHandler;
  3565                           
  3566                           ;incstack = 0
  3567                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  3568  04EC  0872               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  3569  04ED  0020               	movlb	0	; select bank0
  3570  04EE  00EE               	movwf	_INT_InterruptHandler+1
  3571  04EF  0871               	movf	INT_SetInterruptHandler@InterruptHandler,w
  3572  04F0  00ED               	movwf	_INT_InterruptHandler
  3573  04F1  0008               	return
  3574  04F2                     __end_of_INT_SetInterruptHandler:	
  3575                           
  3576                           	psect	text15
  3577  04C4                     __ptext15:	
  3578 ;; *************** function _ADC_Initialize *****************
  3579 ;; Defined at:
  3580 ;;		line 64 in file "mcc_generated_files/adc.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    4
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           
  3609                           ;psect for function _ADC_Initialize
  3610  04C4                     _ADC_Initialize:	
  3611                           
  3612                           ;adc.c: 69: ADCON0 = 0x01;
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3616  04C4  3001               	movlw	1
  3617  04C5  0021               	movlb	1	; select bank1
  3618  04C6  009D               	movwf	29	;volatile
  3619                           
  3620                           ;adc.c: 72: ADCON1 = 0xF0;
  3621  04C7  30F0               	movlw	240
  3622  04C8  009E               	movwf	30	;volatile
  3623                           
  3624                           ;adc.c: 75: ADCON2 = 0x00;
  3625  04C9  019F               	clrf	31	;volatile
  3626                           
  3627                           ;adc.c: 78: ADRESL = 0x00;
  3628  04CA  019B               	clrf	27	;volatile
  3629                           
  3630                           ;adc.c: 81: ADRESH = 0x00;
  3631  04CB  019C               	clrf	28	;volatile
  3632  04CC  0008               	return
  3633  04CD                     __end_of_ADC_Initialize:	
  3634                           
  3635                           	psect	text16
  3636  0458                     __ptext16:	
  3637 ;; *************** function _ADC_GetConversion *****************
  3638 ;; Defined at:
  3639 ;;		line 112 in file "mcc_generated_files/adc.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  channel         1    wreg     enum E2635
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  channel         1    4[COMMON] enum E2635
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  2    1[COMMON] unsigned int 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3657 ;;Total ram usage:        4 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    4
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           
  3668                           ;psect for function _ADC_GetConversion
  3669  0458                     _ADC_GetConversion:	
  3670                           
  3671                           ;incstack = 0
  3672                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3673                           ;ADC_GetConversion@channel stored from wreg
  3674  0458  00F4               	movwf	ADC_GetConversion@channel
  3675                           
  3676                           ;adc.c: 115: ADCON0bits.CHS = channel;
  3677  0459  0874               	movf	ADC_GetConversion@channel,w
  3678  045A  00F3               	movwf	??_ADC_GetConversion
  3679  045B  0DF3               	rlf	??_ADC_GetConversion,f
  3680  045C  0DF3               	rlf	??_ADC_GetConversion,f
  3681  045D  0021               	movlb	1	; select bank1
  3682  045E  081D               	movf	29,w	;volatile
  3683  045F  0673               	xorwf	??_ADC_GetConversion,w
  3684  0460  3983               	andlw	-125
  3685  0461  0673               	xorwf	??_ADC_GetConversion,w
  3686  0462  009D               	movwf	29	;volatile
  3687                           
  3688                           ;adc.c: 118: ADCON0bits.ADON = 1;
  3689  0463  141D               	bsf	29,0	;volatile
  3690                           
  3691                           ;adc.c: 123: ADCON0bits.GO_nDONE = 1;
  3692                           
  3693                           ;adc.c: 120: _delay((unsigned long)((5)*(31000/4000000.0)));
  3694  0464  0021               	movlb	1	; select bank1
  3695  0465  149D               	bsf	29,1	;volatile
  3696  0466                     l32:	
  3697                           ;adc.c: 127: {
  3698                           
  3699                           ;adc.c: 126: while (ADCON0bits.GO_nDONE)
  3700                           
  3701  0466  189D               	btfsc	29,1	;volatile
  3702  0467  2C66               	goto	l32
  3703                           
  3704                           ;adc.c: 128: }
  3705                           ;adc.c: 131: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3706  0468  081C               	movf	28,w	;volatile
  3707  0469  00F2               	movwf	?_ADC_GetConversion+1
  3708  046A  081B               	movf	27,w	;volatile
  3709  046B  00F1               	movwf	?_ADC_GetConversion
  3710  046C  0008               	return
  3711  046D                     __end_of_ADC_GetConversion:	
  3712                           
  3713                           	psect	intentry
  3714  0004                     __pintentry:	
  3715 ;; *************** function _INTERRUPT_InterruptManager *****************
  3716 ;; Defined at:
  3717 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0, pclath, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;Total ram usage:        1 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    3
  3738 ;; This function calls:
  3739 ;;		_INT_ISR
  3740 ;; This function is called by:
  3741 ;;		Interrupt level 1
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745  0004                     _INTERRUPT_InterruptManager:	
  3746                           
  3747                           ;incstack = 0
  3748  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3749                           
  3750                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3751  0005  3180               	pagesel	$
  3752  0006  0020               	movlb	0	; select bank0
  3753  0007  087F               	movf	127,w
  3754  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  3755                           
  3756                           ;interrupt_manager.c: 54: if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  3757  0009  1A0B               	btfsc	11,4	;volatile
  3758  000A  1C8B               	btfss	11,1	;volatile
  3759  000B  280E               	goto	i1l46
  3760                           
  3761                           ;interrupt_manager.c: 55: {
  3762                           ;interrupt_manager.c: 56: INT_ISR();
  3763  000C  3184  24F6         	fcall	_INT_ISR
  3764  000E                     i1l46:	
  3765                           ;interrupt_manager.c: 58: else
  3766                           ;interrupt_manager.c: 59: {
  3767                           
  3768                           ;interrupt_manager.c: 57: }
  3769                           
  3770  000E  0870               	movf	??_INTERRUPT_InterruptManager,w
  3771  000F  0020               	movlb	0	; select bank0
  3772  0010  00FF               	movwf	127
  3773  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3774  0012  0009               	retfie
  3775  0013                     __end_of_INTERRUPT_InterruptManager:	
  3776                           
  3777                           	psect	text18
  3778  04F6                     __ptext18:	
  3779 ;; *************** function _INT_ISR *****************
  3780 ;; Defined at:
  3781 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0, pclath, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    2
  3802 ;; This function calls:
  3803 ;;		_INT_CallBack
  3804 ;; This function is called by:
  3805 ;;		_INTERRUPT_InterruptManager
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _INT_ISR
  3811  04F6                     _INT_ISR:	
  3812                           
  3813                           ;ext_int.c: 49: (INTCONbits.INTF = 0);
  3814                           
  3815                           ;incstack = 0
  3816                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  3817  04F6  108B               	bcf	11,1	;volatile
  3818                           
  3819                           ;ext_int.c: 52: INT_CallBack();
  3820  04F7  3184  24AF         	fcall	_INT_CallBack
  3821  04F9  0008               	return
  3822  04FA                     __end_of_INT_ISR:	
  3823                           
  3824                           	psect	text19
  3825  04AF                     __ptext19:	
  3826 ;; *************** function _INT_CallBack *****************
  3827 ;; Defined at:
  3828 ;;		line 58 in file "mcc_generated_files/ext_int.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, pclath, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    1
  3849 ;; This function calls:
  3850 ;;		Absolute function
  3851 ;;		_INT_DefaultInterruptHandler
  3852 ;; This function is called by:
  3853 ;;		_INT_ISR
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _INT_CallBack
  3859  04AF                     _INT_CallBack:	
  3860                           
  3861                           ;ext_int.c: 61: if(INT_InterruptHandler)
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3865  04AF  0020               	movlb	0	; select bank0
  3866  04B0  086D               	movf	_INT_InterruptHandler,w
  3867  04B1  046E               	iorwf	_INT_InterruptHandler+1,w
  3868  04B2  1903               	btfsc	3,2
  3869  04B3  0008               	return
  3870                           
  3871                           ;ext_int.c: 62: {
  3872                           ;ext_int.c: 63: INT_InterruptHandler();
  3873  04B4  086E               	movf	_INT_InterruptHandler+1,w
  3874  04B5  008A               	movwf	10
  3875  04B6  086D               	movf	_INT_InterruptHandler,w
  3876  04B7  000A               	callw
  3877  04B8  3184               	pagesel	$
  3878  04B9  0008               	return
  3879  04BA                     __end_of_INT_CallBack:	
  3880                           
  3881                           	psect	text20
  3882  04FE                     __ptext20:	
  3883 ;; *************** function _INT_DefaultInterruptHandler *****************
  3884 ;; Defined at:
  3885 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		None
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;Total ram usage:        0 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_EXT_INT_Initialize
  3909 ;;		_INT_CallBack
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           
  3914                           ;psect for function _INT_DefaultInterruptHandler
  3915  04FE                     _INT_DefaultInterruptHandler:	
  3916                           
  3917                           ;incstack = 0
  3918                           ; Regs used in _INT_DefaultInterruptHandler: []
  3919  04FE  0008               	return
  3920  04FF                     __end_of_INT_DefaultInterruptHandler:	
  3921  007E                     btemp	set	126	;btemp
  3922  007E                     int$flags	set	126
  3923  007E                     wtemp0	set	126


Data Sizes:
    Strings     53
    Constant    10
    Data        32
    BSS         131
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     32      79
    BANK1            80      0      64
    BANK2            80      0      54
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 6
		 -> str8(BANK1[6]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), str8(BANK1[6]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), str8(BANK1[6]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[6]), STR_5(CODE[7]), 

    S378__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S378__prbuf$ptr	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), str8(BANK1[6]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 6
		 -> NULL(NULL[0]), str8(BANK1[6]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(BANK0[3]), printf@pb(BANK0[3]), 

    main@c	PTR unsigned char  size(1) Largest target is 6
		 -> str8(BANK1[6]), 

    message	PTR unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), 

    packet	PTR unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), 

    Fixeddata	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    preamble	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    _sendChar->_dit_dah
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _EXT_INT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->__doprnt
    _printf->__doprnt
    __doprnt->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    7734
                                             27 BANK0      5     5      0
                  _ADC_GetConversion
                     _ADC_Initialize
                  _SYSTEM_Initialize
                             _printf
                           _sendChar
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             12     6      6    1973
                                             15 BANK0     12     6      6
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _sendChar                                             4     4      0    3718
                                              6 COMMON     4     4      0
                            _dit_dah
 ---------------------------------------------------------------------------------
 (2) _dit_dah                                              5     3      2    3428
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _printf                                               7     5      2    1887
                                             15 BANK0      7     5      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             21    18      3    1714
                                              2 BANK0     13    10      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     129
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      86
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                            _INT_ISR
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _sendChar
     _dit_dah
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      36       9       67.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Feb 13 14:06:25 2018

                            _thousandths 0050                              __CFG_CP$OFF 0000  
                                     l32 0466                              __CFG_LVP$ON 0000  
                                    l250 030E                                      l234 0333  
                                    l251 02C8                                      l260 0312  
                                    l254 02E0                                      l247 02AB  
                                    l257 02F8                                      l290 0174  
                                    l287 015F                                      u605 03CD  
                                    u535 039A                                      u625 03DC  
                                    u705 02EB                                      u555 03A4  
                                    u635 03E3                                      u715 0303  
                                    u565 03AE                                      u725 031D  
                                    u575 03B6                                      u675 02B6  
                                    u775 0211                                      u695 02D3  
                                    u965 016A                                      u975 017F  
                           __CFG_BORV$LO 0000                                      wreg 0009  
                           __CFG_IESO$ON 0000                                     l1100 03BE  
                                   l1112 03CA                                     l1114 03D6  
                                   l1122 03EB                                     l1212 01F6  
                                   l1204 01DF                                     l1118 03E2  
                                   l1230 0233                                     l1224 021B  
                                   l1320 0070                                     l1312 004F  
                                   l1090 03A3                                     l1242 028D  
                                   l1234 0245                                     l1218 01FC  
                                   l1250 02A0                                     l1340 0110  
                                   l1332 00CE                                     l1324 008B  
                                   l1316 005C                                     l1404 0376  
                                   l1246 024A                                     l1174 02DE  
                                   l1406 0389                                     l1096 03B5  
                                   l1088 0397                                     l1248 0189  
                                   l1168 02C1                                     l1344 0131  
                                   l1336 00EF                                     l1328 00AD  
                                   l1352 015D                                     l1194 01B4  
                                   l1178 02F6                                     l1356 0172  
                                   l1348 0152                                     l1380 033F  
                                   l1198 01C7                                     l1376 0334  
                                   STR_1 0499                                     STR_2 0437  
                                   STR_3 0428                                     STR_4 04FA  
                                   STR_5 04CD                                     STR_6 04D4  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 04FA                                     _LATC 010E  
                                   i1l46 000E                                     _WPUA 020C  
                                   _WPUB 020D                             __CFG_WRT$OFF 0000  
                          __CFG_FCMEN$ON 0000                                     _main 0325  
                                   _temp 0043                                     _tens 0058  
                                   _str8 00CB                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
    __end_of_INT_DefaultInterruptHandler 04FF              _INT_DefaultInterruptHandler 04FE  
                                   start 0013          __end_of_INT_SetInterruptHandler 04F2  
                    __CFG_PLLEN$DISABLED 0000                            __CFG_MCLRE$ON 0000  
         __size_of_OSCILLATOR_Initialize 0006            __end_of_OSCILLATOR_Initialize 04EC  
                                  ?_main 0070                            __CFG_WDTE$OFF 0000  
                                  _LATC3 0873                                    _LATC4 0874  
                        __end_of___lwdiv 03C3                          __end_of___lwmod 03F0  
                        __end_of__doprnt 02A3                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                        __end_of_dit_dah 0325                                    _delay 0061  
                        __end_of_dpowers 04C4                           _WDT_Initialize 04F2  
                                  _sleep 0046                                    _putch 04FD  
                                  main@c 003F                                    main@i 003C  
                                  _units 0056                           __CFG_BOREN$OFF 0000  
                                  pclath 000A                                    status 0003  
                                  wtemp0 007E                          __end_of_sprintf 040D  
                        __initialization 0015                             __end_of_main 038F  
                         __CFG_LPBOR$OFF 0000              ?_INTERRUPT_InterruptManager 0070  
                                 ??_main 003B                      __CFG_USBLSCLK$24MHz 0000  
                 __end_of_WDT_Initialize 04F6                                ??_INT_ISR 0070  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _ADCON2 009F                                   _ACTCON 039B  
                                 _ADRESH 009C                                   _ADRESL 009B  
                                 _APFCON 011D                                   _ADCres 0063  
                                 _ANSELA 018C                                   ?_putch 0071  
                                 _ANSELB 018D                                   _ANSELC 018E  
                                 _OSCCON 0099                                   _WDTCON 0097  
                         __CFG_PWRTE$OFF 0000                           __CFG_STVREN$ON 0000  
                              ??___lwdiv 0075                                ??___lwmod 0020  
                                 _packet 0067                                ??__doprnt 0025  
                                 _tenths 0054                             __doprnt@flag 0029  
                                 _printf 0442                                ??_dit_dah 0073  
                       __end_of_sendChar 0187                             __doprnt@prec 002A  
                          ?_INT_CallBack 0070                          ?_WDT_Initialize 0070  
               ADC_GetConversion@channel 0074                                   putch@c 0071  
       __size_of_INT_SetInterruptHandler 0006  INT_SetInterruptHandler@InterruptHandler 0071  
                              ??_sprintf 0035                        _SYSTEM_Initialize 048D  
                __end_of__initialization 0044                            _IN_CAP_TO_GND 00C5  
                     ?_SYSTEM_Initialize 0070                           __pcstackCOMMON 0070  
                           __pidataBANK0 046D                             __pidataBANK1 047E  
                    ??_SYSTEM_Initialize 0073                            __end_of_putch 04FE  
                         ??_INT_CallBack 0070              __size_of_EXT_INT_Initialize 000B  
                         _OPTION_REGbits 0095                               __doprnt@ap 0024  
                             __doprnt@pb 002E                __end_of_SYSTEM_Initialize 0499  
                                ??_putch 0072                               __pbssBANK0 0040  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pmaintext 0325                          __CFG_PLLMULT$4x 0000  
                             __pintentry 0004                                  ?_printf 002F  
                __size_of_ADC_Initialize 0009                                  _NODE_ID 005F  
                                _INT_ISR 04F6                                  _OSCTUNE 0098  
                              _ADC0mVolt 00B6                                _ADC1mVolt 00B3  
                                _FactorA 00DD                                  _FactorB 00DA  
                                _FactorC 00D7                                  _FactorD 00D4  
                              ?_sendChar 0070                                  ___lwdiv 038F  
                                ___lwmod 03C3                                  __doprnt 0187  
                                _dit_dah 02A3                                  __ptext1 03F0  
                                __ptext2 0048                                  __ptext3 02A3  
                                __ptext4 0442                                  __ptext5 0187  
                                __ptext6 04FD                                  __ptext7 03C3  
                                __ptext8 038F                                  __ptext9 048D  
                        __size_of_printf 0016                                  _packet1 013E  
                                _packet2 0120                                  _dpowers 04BA  
                  _OSCILLATOR_Initialize 04E6                                  _message 0065  
               ??_PIN_MANAGER_Initialize 0071                  _INT_SetInterruptHandler 04EC  
                                _sensor0 004C                                  _sensor1 004A  
                             _hundredths 0052               __size_of_SYSTEM_Initialize 000C  
                                _sprintf 03F0                                  clrloop0 04E1  
                             _nocodedbit 00A0                                  _voltref 00D1  
                   end_of_initialization 0044                                  init_ram 04DA  
                                initloop 04DB                     __end_of_INT_CallBack 04BA  
                             ??_sendChar 0076                         __CFG_CLKOUTEN$ON 0000  
                                printf@f 002F                         ??_WDT_Initialize 0071  
                       __CFG_FOSC$INTOSC 0000                           _ADC_Initialize 04C4  
                 ?_OSCILLATOR_Initialize 0070                ??_INT_SetInterruptHandler 0073  
                              _Fixeddata 0069                           __end_of_printf 0458  
                    start_initialization 0015          __size_of_PIN_MANAGER_Initialize 001B  
           ?_INT_DefaultInterruptHandler 0070                   __end_of_ADC_Initialize 04CD  
                            __doprnt@val 002B                              _capacitance 00C2  
                            __pdataBANK0 005C                              __pdataBANK1 00D1  
             __end_of_EXT_INT_Initialize 04AF                                 ??_printf 0031  
                              ___latbits 0002                                 ?_INT_ISR 0070  
                          __pcstackBANK0 0020                    __size_of_INT_CallBack 000B  
                              __doprnt@c 002D                                __doprnt@f 0022  
                              __pnvBANK0 006D                      _IN_STRAY_CAP_TO_GND 005C  
                       ___lwdiv@dividend 0073                   _PIN_MANAGER_Initialize 040D  
          ??_INT_DefaultInterruptHandler 0070                        __size_of_sendChar 013F  
                               ?___lwdiv 0071                                 ?___lwmod 0079  
                        ?_ADC_Initialize 0070                                 ?__doprnt 0022  
           ??_INTERRUPT_InterruptManager 0070                                 ?_dit_dah 0071  
                           _INT_CallBack 04AF                         ___lwdiv@quotient 0076  
                               ?_sprintf 002F                           __size_of_putch 0001  
                              _remainder 0040                                clear_ram0 04E0  
    __size_of_INTERRUPT_InterruptManager 000F                                 _SENSORID 0048  
                             _ADC0mVolt1 00B0                               _ADC0mVolt2 00AD  
                             _ADCON0bits 009D                                main@count 003E  
   __size_of_INT_DefaultInterruptHandler 0001                         __size_of_INT_ISR 0004  
                    _IN_EXTRA_CAP_TO_GND 00C8                           _tenthousandths 004E  
                               _TempDIFF 00B9                                 _TemporC1 00BF  
                               _TemporC2 00BC                        _ADC_GetConversion 0458  
                ??_OSCILLATOR_Initialize 0071                       ?_ADC_GetConversion 0071  
                       __size_of___lwdiv 0034                         __size_of___lwmod 002D  
                       __size_of__doprnt 011C                         __size_of_dit_dah 0082  
                    ??_ADC_GetConversion 0073                                sendChar@a 0079  
                              sendChar@i 0077                          ___lwdiv@divisor 0071  
                        ___lwdiv@counter 0078                                 __ptext10 04F2  
                               __ptext11 040D                                 __ptext20 04FE  
                               __ptext12 04E6                                 __ptext13 04A4  
                               __ptext14 04EC                                 __ptext15 04C4  
                               __ptext16 0458                                 __ptext18 04F6  
                               __ptext19 04AF                         __size_of_sprintf 001D  
                          __size_of_main 006A                                 _hundreds 005A  
                               _sendChar 0048                __end_of_ADC_GetConversion 046D  
                               _preamble 006B                                 dit_dah@i 0074  
                               int$flags 007E       __end_of_INTERRUPT_InterruptManager 0013  
             _INTERRUPT_InterruptManager 0004                               _INTCONbits 000B  
                   _INT_InterruptHandler 006D                       _EXT_INT_Initialize 04A4  
                __size_of_WDT_Initialize 0004                                 intlevel1 0000  
                              sprintf@ap 0037                                sprintf@pb 0038  
                              sprintf@wh 0036                         ___lwmod@dividend 007B  
                ?_PIN_MANAGER_Initialize 0070                             dit_dah@index 0071  
                    ?_EXT_INT_Initialize 0070                         ??_ADC_Initialize 0071  
                               printf@ap 0032                                 printf@pb 0033  
                   __CFG_CPUDIV$NOCLKDIV 0000                 ?_INT_SetInterruptHandler 0071  
                          __pstringtext1 04BA                            __pstringtext2 0428  
                          __pstringtext3 0499                            __pstringtext4 04CD  
                          __pstringtext5 04D4                            __pstringtext6 04FA  
                          __pstringtext7 0000                     ??_EXT_INT_Initialize 0073  
                               sprintf@f 002F                          ___lwmod@divisor 0079  
                        ___lwmod@counter 0021           __end_of_PIN_MANAGER_Initialize 0428  
             __size_of_ADC_GetConversion 0015  
